% Running on host: LAPTOP-B1J81TKT

% Creating string handler #1.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Switching to VarIndicator = questionMarks.

% getInputArgWithDefaultValue: args=[datasets\Cancer\train/train_pos.txt, datasets\Cancer\train/train_neg.txt, datasets\Cancer\train/train_bk.txt, datasets\Cancer\train/train_facts.txt, null]
%  for N=0: args[N]=datasets\Cancer\train/train_pos.txt

% getInputArgWithDefaultValue: args=[datasets\Cancer\train/train_pos.txt, datasets\Cancer\train/train_neg.txt, datasets\Cancer\train/train_bk.txt, datasets\Cancer\train/train_facts.txt, null]
%  for N=1: args[N]=datasets\Cancer\train/train_neg.txt

% getInputArgWithDefaultValue: args=[datasets\Cancer\train/train_pos.txt, datasets\Cancer\train/train_neg.txt, datasets\Cancer\train/train_bk.txt, datasets\Cancer\train/train_facts.txt, null]
%  for N=2: args[N]=datasets\Cancer\train/train_bk.txt

% getInputArgWithDefaultValue: args=[datasets\Cancer\train/train_pos.txt, datasets\Cancer\train/train_neg.txt, datasets\Cancer\train/train_bk.txt, datasets\Cancer\train/train_facts.txt, null]
%  for N=3: args[N]=datasets\Cancer\train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% Reading background theory from dir: null
% Load '../toy_cancer_bk.txt'.

% Switching to standard-logic notation for variables; previous setting = questionMarks

% Switching to VarIndicator = lowercase.

***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Person] for 's_smokes'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Person] for 'not_s_smokes'. *****


% Switching to VarIndicator = questionMarks.
% LoadAllModes() called.  Currently loaded modes: []

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.

% Switching to standard-logic notation for variables; previous setting = questionMarks

% Switching to VarIndicator = lowercase.

% Switching to VarIndicator = questionMarks.
%  Have read 827 facts.

%  LearnOneClause initialized.
% Have read 0 examples from 'datasets\Cancer\train' [datasets\Cancer\train/train*].
% Have read 0 examples from 'datasets\Cancer\train' [datasets\Cancer\train/train*].

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.

***** Warning: targetPredicates=null *****


***** Warning: targetArgSpecs=null *****

% Time to collect constants: 10 milliseconds
% Time to collect examples: 0 seconds

% Read 0 pos examples and 0 neg examples.
% Time to init learnOneClause: 10 milliseconds

% 'models/domain_sizes.txt' saved.
File: datasets\Cancer\train/advice.txt doesnt exist.Hence no advice loaded
% Learning 20 trees in this iteration for smokes

% Learn model for: smokes
% Kept 17 of the 17 positive examples.
% Kept 38 of the 53 negative examples.
% Dataset size: 55
Computing probabilities
prob time:0 seconds
No hidden examples for : smokes
Time to build dataset: 0 seconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 8 12 13 19 20 27 33 39 50
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (0):
%    
%  Modes (40):
%    friends(+Person, -Person),
%    friends(-Person, +Person),
%    s_smokes(`Person),
%    not_s_smokes(`Person),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber)

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for friends/2 with 740 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for friends/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for friends/2.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for s_smokes/1 with 17 assertions.
% [ LazyGroundClauseIndex ]  Building full index for not_s_smokes/1 with 53 assertions.
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -5,173378 (regressionFit = 5,173376, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,173378): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -5,173378 (regressionFit = 5,173376, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ s_smokes(b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #1 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
Setting 0.07284740171504601 for 
 // Learned this clause on outer loop cycle #1.  It scores=-5,17 and has recall=0,82, precision=1,00, and F1=0,90 (using m-estimates).
 // It covers 81,8% of the positive examples, 45 of 55,
(friends(a, anon1089) ^ s_smokes(anon1089) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
% This clause covers 45 positive examples, of which 45 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 81,8% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #2 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #3 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #4 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #5 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #6, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #6, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #6 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #7, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #7, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #7, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #7, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #7, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #7, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #7 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #8, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #8, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #8, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #8, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #8, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #8, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #8 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #9, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #9, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #9, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #9, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #9, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #9, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #9, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #9, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #9, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #9 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #10, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #10, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #10, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #10, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #10, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #10, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #10, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #10, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #10, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #10 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #11, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #11, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #11, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #11, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #11, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #11, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #11, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #11, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #11, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #11 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #12, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #12, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #12, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #12, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #12, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #12, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #12, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #12, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #12, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #12 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #13, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #13, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #13, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #13, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #13, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #13, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #13, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #13, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #13, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #13 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #14, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #14, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #14, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #14, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #14, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #14, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #14, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #14, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #14, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #14 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #15, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #15, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #15, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #15, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #15, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #15, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #15, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #15, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #15, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #15 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #16, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #16, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #16, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #16, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #16, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #16, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #16, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #16, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #16, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #16 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #17, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #17, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #17, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #17, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #17, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #17, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #17, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #17, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #17, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #17 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #18, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #18, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #18, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #18, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #18, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #18, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #18, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #18, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #18, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #18 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #19, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #19, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #19, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #19, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #19, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #19, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #19, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #19, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #19, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #19 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 23 25 34 37 48
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #20, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #20, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #20, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #20, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #20, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #20, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #20, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #20, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #20, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #20 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (20).

% ******************************************
adding regression values
Added 0.07284740171504601 to wgt = 0,0728 (friends(a, b) ^ s_smokes(b) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 1 trees is 1,770 seconds.

% Kept 17 of the 17 positive examples.
% Kept 41 of the 53 negative examples.
% Dataset size: 58
Computing probabilities
prob time:0 seconds
No hidden examples for : smokes
Time to build dataset: 0 seconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 15 17 19 20 26 27 31 33 34 55
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -5,493952 (regressionFit = 5,493950, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 46,0/58,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,493952): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 46,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -5,493952 (regressionFit = 5,493950, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ s_smokes(b) => smokes(a).  [covers 46,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #21 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 46,0/58,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 46,0/58,0 pos, 0,0/0,0 neg]
Setting 0.061397911261209616 for 
 // Learned this clause on outer loop cycle #1.  It scores=-5,49 and has recall=0,79, precision=1,00, and F1=0,88 (using m-estimates).
 // It covers 79,3% of the positive examples, 46 of 58,
(friends(a, anon5053) ^ s_smokes(anon5053) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 46,0/58,0 pos, 0,0/0,0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 79,3% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 14 15 16 19 20 24 31 34 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #22 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 20 24 31 34 50
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #23 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 20 24 31 34 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #24 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 20 24 31 34 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #25 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 20 24 31 34 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #6, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #6, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #26 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 20 24 31 34 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #7, bodyLen=0] 'smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #7, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #7, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #7, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #7, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #7, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #27 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 20 24 31 34 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #8, bodyLen=0] 'smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #8, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #8, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #8, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #8, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #8, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #28 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 14 15 19 20 24 31 34 41 45 50
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #9, bodyLen=0] 'smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #9, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #9, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #9, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #9, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #9, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #9, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #9, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #9, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #29 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 20 24 31 34 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #10, bodyLen=0] 'smokes(_).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #10, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #10, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 56,0/58,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #10, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #10, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #10, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #10, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #10, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #10, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 58,0/58,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #30 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (10).

% ******************************************
adding regression values
Added 0.061397911261209616 to wgt = 0,0614 (friends(a, b) ^ s_smokes(b) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 2 trees is 2,432 seconds.

% Kept 17 of the 17 positive examples.
% Kept 35 of the 53 negative examples.
% Dataset size: 52
Computing probabilities
prob time:2 milliseconds
No hidden examples for : smokes
Time to build dataset: 4 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 5 6 8 9 11 15 22 31 33 35
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -5,130233 (regressionFit = 5,130231, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 41,0/52,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,130233): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 41,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 50,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -5,130233 (regressionFit = 5,130231, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ s_smokes(b) => smokes(a).  [covers 41,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 50,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #31 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 41,0/52,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 41,0/52,0 pos, 0,0/0,0 neg]
Setting 0.049034518550206505 for 
 // Learned this clause on outer loop cycle #1.  It scores=-5,13 and has recall=0,79, precision=1,00, and F1=0,88 (using m-estimates).
 // It covers 78,8% of the positive examples, 41 of 52,
(friends(a, anon7057) ^ s_smokes(anon7057) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 41,0/52,0 pos, 0,0/0,0 neg]
% This clause covers 41 positive examples, of which 41 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 78,8% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 14 15 16 19 21 23 26 32 37
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 50,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 50,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #32 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 21 23 26 32 37
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 50,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 50,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #33 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 21 23 26 32 37
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 50,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 50,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #34 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 21 23 26 32 37
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 50,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 50,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #35 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 21 23 26 32 37
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'smokes(_).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 50,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 50,0/52,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #6, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #6, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 52,0/52,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #36 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (6).

% ******************************************
adding regression values
Added 0.049034518550206505 to wgt = 0,0490 (friends(a, b) ^ s_smokes(b) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 3 trees is 2,766 seconds.

% Kept 17 of the 17 positive examples.
% Kept 33 of the 53 negative examples.
% Dataset size: 50
Computing probabilities
prob time:2 milliseconds
No hidden examples for : smokes
Time to build dataset: 2 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 2 4 8 10 12 17 28 31 32 33
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,964052 (regressionFit = 4,964050, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 39,0/50,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,964052): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 39,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 48,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,964052 (regressionFit = 4,964050, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ s_smokes(b) => smokes(a).  [covers 39,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 48,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #37 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 39,0/50,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 39,0/50,0 pos, 0,0/0,0 neg]
Setting 0.03749083153887486 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,96 and has recall=0,78, precision=1,00, and F1=0,87 (using m-estimates).
 // It covers 78,0% of the positive examples, 39 of 50,
(friends(a, anon8277) ^ s_smokes(anon8277) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 39,0/50,0 pos, 0,0/0,0 neg]
% This clause covers 39 positive examples, of which 39 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 78,0% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 14 15 16 19 21 22 24 32 37
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 48,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 48,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #38 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 21 22 24 32 37
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 48,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 48,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #39 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 21 22 24 32 37
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 48,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 48,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #40 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 14 15 16 19 21 22 24 32 37
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 48,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 48,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #41 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (5).

% ******************************************
adding regression values
Added 0.03749083153887486 to wgt = 0,0375 (friends(a, b) ^ s_smokes(b) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 4 trees is 3,099 seconds.

% Kept 17 of the 17 positive examples.
% Kept 36 of the 53 negative examples.
% Dataset size: 53
Computing probabilities
prob time:4 milliseconds
No hidden examples for : smokes
Time to build dataset: 4 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 0 5 9 20 26 46 47 49
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,701962 (regressionFit = 3,701960, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,701962): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]' score=-3.7019624661448005
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3,849029 (regressionFit = 3,849026, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,701963 (regressionFit = 3,701960, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,708274 (regressionFit = 3,708271, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,849029 (regressionFit = 3,849026, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,708274 (regressionFit = 3,708271, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]' score=-3.7019633661448004

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]' score=-3.708273904225908

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]' score=-3.708273904225908

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]' score=-3.849028597733019

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]' score=-3.849028597733019

% Consider expanding [#9 of outerLoop #1, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,701962 (regressionFit = 3,701960, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ s_smokes(b) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

***** Warning: #42 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]
Setting 0.03767979316125827 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,70 and has recall=0,83, precision=1,00, and F1=0,91 (using m-estimates).
 // It covers 83,0% of the positive examples, 44 of 53,
(friends(a, anon9301) ^ s_smokes(anon9301) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 44,0/53,0 pos, 0,0/0,0 neg]
% This clause covers 44 positive examples, of which 44 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 83,0% of the positive examples and NaN% of the negatives.}

% Have these 9 positive seeds: 0 14 15 16 18 23 26 34 36
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(b, c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(c, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(c, a) ^ friends(c, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

***** Warning: #43 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 9 positive seeds: 0 14 15 16 18 23 26 34 36
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(b, c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(c, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(c, a) ^ friends(c, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

***** Warning: #44 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 9 positive seeds: 0 14 15 16 18 23 26 34 36
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(b, c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(c, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(c, a) ^ friends(c, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 52,0/53,0 pos, 0,0/0,0 neg]

***** Warning: #45 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (4).

% ******************************************
adding regression values
Added 0.03767979316125827 to wgt = 0,0377 (friends(a, b) ^ s_smokes(b) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 5 trees is 7,780 seconds.

% Kept 17 of the 17 positive examples.
% Kept 32 of the 53 negative examples.
% Dataset size: 49
Computing probabilities
prob time:5 milliseconds
No hidden examples for : smokes
Time to build dataset: 5 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 12 13 19 26 27 29 34 37 38 39
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 49,0/49,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -4,882436 (regressionFit = 4,882434, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,882436): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]' score=-4.882436317919896
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,994416 (regressionFit = 4,994413, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]
%     Score = -4,882437 (regressionFit = 4,882434, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]
%     Score = -4,887565 (regressionFit = 4,887562, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]
%     Score = -4,994416 (regressionFit = 4,994413, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]
%     Score = -4,887565 (regressionFit = 4,887562, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]' score=-4.882437217919896

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]' score=-4.887565496016655

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]' score=-4.887565496016655

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]' score=-4.994415643604684

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]' score=-4.994415643604684

% Consider expanding [#9 of outerLoop #1, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -4,882436 (regressionFit = 4,882434, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ s_smokes(b) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

***** Warning: #46 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]
Setting 0.02044416479612162 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,88 and has recall=0,75, precision=1,00, and F1=0,86 (using m-estimates).
 // It covers 75,5% of the positive examples, 37 of 49,
(friends(a, anon12377) ^ s_smokes(anon12377) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 37,0/49,0 pos, 0,0/0,0 neg]
% This clause covers 37 positive examples, of which 37 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75,5% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 15 16 17 21 22 24 30 32 40 45
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 49,0/49,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(b, c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(c, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(c, a) ^ friends(c, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

***** Warning: #47 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 9 positive seeds: 14 15 16 21 22 24 30 40 45
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 49,0/49,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'smokes(_).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(b, c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(c, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(c, a) ^ friends(c, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 49,0/49,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 47,0/49,0 pos, 0,0/0,0 neg]

***** Warning: #48 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (3).

% ******************************************
adding regression values
Added 0.02044416479612162 to wgt = 0,0204 (friends(a, b) ^ s_smokes(b) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 6 trees is 10,460 seconds.

% Kept 17 of the 17 positive examples.
% Kept 34 of the 53 negative examples.
% Dataset size: 51
Computing probabilities
prob time:0 seconds
No hidden examples for : smokes
Time to build dataset: 0 seconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 1 3 17 18 23 24 25 32 36 40
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 51,0/51,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,841572 (regressionFit = 4,841570, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,841572): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]' score=-4.841572333893358
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,930743 (regressionFit = 4,930740, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,841573 (regressionFit = 4,841570, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,835864 (regressionFit = 4,835861, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,835864): friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,930743 (regressionFit = 4,930740, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,835864 (regressionFit = 4,835861, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]' score=-4.83586379818454

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]' score=-4.83586379818454

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]' score=-4.8415732338933575

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]' score=-4.930743392531754

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]' score=-4.930743392531754

% Consider expanding [#9 of outerLoop #1, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,841572 (regressionFit = 4,841570, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ s_smokes(b) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]

***** Warning: #49 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]
Setting 0.0015148090452008227 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,84 and has recall=0,78, precision=1,00, and F1=0,88 (using m-estimates).
 // It covers 78,4% of the positive examples, 40 of 51,
(friends(a, anon14527) ^ s_smokes(anon14527) ^ friends(anon14527, anon14635) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 40,0/51,0 pos, 0,0/0,0 neg]
% This clause covers 40 positive examples, of which 40 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 78,4% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 14 15 16 19 22 24 27 32 34
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 51,0/51,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(b, c) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(c, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(c, a) ^ friends(c, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, b) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]

***** Warning: #50 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.0015148090452008227 to wgt = 0,0015 (friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 7 trees is 12,011 seconds.

% Kept 17 of the 17 positive examples.
% Kept 38 of the 53 negative examples.
% Dataset size: 55
Computing probabilities
prob time:2 milliseconds
No hidden examples for : smokes
Time to build dataset: 2 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 2 5 9 12 16 17 18 29 42 45
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,858784 (regressionFit = 3,858782, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,858784): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]' score=-3.8587841252545907
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3,928825 (regressionFit = 3,928822, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,858785 (regressionFit = 3,858782, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,868459 (regressionFit = 3,868456, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,928825 (regressionFit = 3,928822, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,868459 (regressionFit = 3,868456, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]' score=-3.8587850252545906

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]' score=-3.868458892043508

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]' score=-3.868458892043508

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]' score=-3.9288252984868604

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]' score=-3.9288252984868604

% Consider expanding [#9 of outerLoop #1, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,858784 (regressionFit = 3,858782, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ s_smokes(b) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]

***** Warning: #51 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]
Setting 0.021928100200229346 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,86 and has recall=0,80, precision=1,00, and F1=0,89 (using m-estimates).
 // It covers 80,0% of the positive examples, 44 of 55,
(friends(a, anon15769) ^ s_smokes(anon15769) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 44,0/55,0 pos, 0,0/0,0 neg]
% This clause covers 44 positive examples, of which 44 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 80,0% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 14 15 16 19 21 25 32 39 43
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(b, c) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(c, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(c, a) ^ friends(c, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, b) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ not_s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]

***** Warning: #52 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.021928100200229346 to wgt = 0,0219 (friends(a, b) ^ s_smokes(b) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 8 trees is 13,641 seconds.

% Kept 17 of the 17 positive examples.
% Kept 31 of the 53 negative examples.
% Dataset size: 48
Computing probabilities
prob time:9 milliseconds
No hidden examples for : smokes
Time to build dataset: 9 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 0 7 19 21 28 33 35 36 38 40
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 48,0/48,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 48,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,538102 (regressionFit = 3,538100, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,538102): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]' score=-3.538102435504012
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3,589935 (regressionFit = 3,589932, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,538103 (regressionFit = 3,538100, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,539292 (regressionFit = 3,539289, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,589935 (regressionFit = 3,589932, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,539292 (regressionFit = 3,539289, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]' score=-3.5381033355040117
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3,589936 (regressionFit = 3,589932, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(a, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,539293 (regressionFit = 3,539289, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,589936 (regressionFit = 3,589932, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,539293 (regressionFit = 3,539289, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]' score=-3.5392917394143666
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,598148 (regressionFit = 3,598144, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,588489 (regressionFit = 3,588485, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,543221 (regressionFit = 3,543217, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,598148 (regressionFit = 3,598144, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,539293 (regressionFit = 3,539289, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,537590 (regressionFit = 3,537586, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,537590): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,588489 (regressionFit = 3,588485, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,543221 (regressionFit = 3,543217, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,537590 (regressionFit = 3,537586, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,906692 (regressionFit = 3,906688, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 13,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,832363 (regressionFit = 3,832360, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]' score=-3.537590164589992

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]' score=-3.537590164589992

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]' score=-3.5392917394143666
%  At # nodes expanded = 8, |OPEN| = 7.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,598148 (regressionFit = 3,598144, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,588489 (regressionFit = 3,588485, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(a, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,598148 (regressionFit = 3,598144, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,537590 (regressionFit = 3,537586, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,588489 (regressionFit = 3,588485, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,543221 (regressionFit = 3,543217, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,537590 (regressionFit = 3,537586, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,906692 (regressionFit = 3,906688, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 13,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,832363 (regressionFit = 3,832360, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]' score=-3.537590164589992

***** Warning: #53 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
Setting 1.680110420355668E-4 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,54 and has recall=0,79, precision=1,00, and F1=0,88 (using m-estimates).
 // It covers 79,2% of the positive examples, 38 of 48,
(friends(a, anon16993) ^ s_smokes(anon16993) ^ friends(anon16993, anon17101) ^ friends(anon17101, anon17223) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 38,0/48,0 pos, 0,0/0,0 neg]
% This clause covers 38 positive examples, of which 38 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 79,2% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 14 15 16 19 23 32 38 39 44
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 48,0/48,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 48,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(b, c) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(c, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(c, a) ^ friends(c, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 47,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.

***** Warning: #54 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 1.680110420355668E-4 to wgt = 0,0002 (friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 9 trees is 15,480 seconds.

% Kept 17 of the 17 positive examples.
% Kept 30 of the 53 negative examples.
% Dataset size: 47
Computing probabilities
prob time:40 milliseconds
No hidden examples for : smokes
Time to build dataset: 40 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 17 21 23 27 28 29 36
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 47,0/47,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 47,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,271374 (regressionFit = 3,271372, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,271374): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 46,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]' score=-3.2713741315261284
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3,316528 (regressionFit = 3,316525, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,271375 (regressionFit = 3,271372, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,272798 (regressionFit = 3,272795, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,316528 (regressionFit = 3,316525, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,272798 (regressionFit = 3,272795, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]' score=-3.2713750315261283
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3,316529 (regressionFit = 3,316525, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(a, _) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,272799 (regressionFit = 3,272795, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,316529 (regressionFit = 3,316525, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,272799 (regressionFit = 3,272795, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]' score=-3.272798422881046
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -3,323265 (regressionFit = 3,323261, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,316518 (regressionFit = 3,316514, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,276444 (regressionFit = 3,276440, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,323265 (regressionFit = 3,323261, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,272799 (regressionFit = 3,272795, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,275069 (regressionFit = 3,275065, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,316518 (regressionFit = 3,316514, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,276444 (regressionFit = 3,276440, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,275069 (regressionFit = 3,275065, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,380133 (regressionFit = 3,380129, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]' score=-3.272798422881046
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -3,323265 (regressionFit = 3,323261, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,316518 (regressionFit = 3,316514, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(a, _) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,323265 (regressionFit = 3,323261, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,275069 (regressionFit = 3,275065, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,316518 (regressionFit = 3,316514, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,276444 (regressionFit = 3,276440, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,275069 (regressionFit = 3,275065, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
%     Score = -3,380133 (regressionFit = 3,380129, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]' score=-3.272799222881046

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]' score=-3.2727993228810464

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]' score=-3.2727993228810464

***** Warning: #55 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
Setting 0.01606204818590575 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,27 and has recall=0,81, precision=1,00, and F1=0,89 (using m-estimates).
 // It covers 80,9% of the positive examples, 38 of 47,
(friends(a, anon18533) ^ s_smokes(anon18533) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 38,0/47,0 pos, 0,0/0,0 neg]
% This clause covers 38 positive examples, of which 38 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 80,9% of the positive examples and NaN% of the negatives.}

% Have these 9 positive seeds: 0 14 15 16 19 22 25 36 39
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 47,0/47,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 47,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 46,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 3 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 46,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(b, c) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(a, c) ^ friends(c, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ not_s_smokes(b) => smokes(a).  [covers 46,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 46,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 46,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ not_s_smokes(b) => smokes(a).  [covers 46,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(c, a) ^ friends(c, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ not_s_smokes(b) => smokes(a).  [covers 46,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ not_s_smokes(b) => smokes(a).  [covers 46,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, b) ^ not_s_smokes(b) => smokes(a).  [covers 46,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 47,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 46,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.

***** Warning: #56 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.01606204818590575 to wgt = 0,0161 (friends(a, b) ^ s_smokes(b) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model
% Time taken to learn 10 trees is 17,370 seconds.

% Kept 17 of the 17 positive examples.
% Kept 31 of the 53 negative examples.
% Dataset size: 48
Computing probabilities
prob time:34 milliseconds
No hidden examples for : smokes
Time to build dataset: 34 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 9 13 15 16 17 20 23 24 27 40
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 48,0/48,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 48,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,023468 (regressionFit = 4,023466, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,023468): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 46,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]' score=-4.023468186004152
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,038655 (regressionFit = 4,038652, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,023469 (regressionFit = 4,023466, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,024377 (regressionFit = 4,024374, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,038655 (regressionFit = 4,038652, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,024377 (regressionFit = 4,024374, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]' score=-4.023469086004152
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,038656 (regressionFit = 4,038652, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(a, _) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,024378 (regressionFit = 4,024374, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,038656 (regressionFit = 4,038652, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,024378 (regressionFit = 4,024374, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]' score=-4.024376613184987
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -4,040122 (regressionFit = 4,040119, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,038993 (regressionFit = 4,038989, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,025854 (regressionFit = 4,025849, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,040122 (regressionFit = 4,040119, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,024377 (regressionFit = 4,024374, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,024361 (regressionFit = 4,024357, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,038993 (regressionFit = 4,038989, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,025854 (regressionFit = 4,025849, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,024361 (regressionFit = 4,024357, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -5,060264 (regressionFit = 5,060260, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 14,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,557677 (regressionFit = 3,557673, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,557677): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]' score=-4.024361289232054

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]' score=-4.024361289232054

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]' score=-4.024376613184987
%  At # nodes expanded = 8, |OPEN| = 7.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -4,040122 (regressionFit = 4,040119, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,038993 (regressionFit = 4,038989, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(a, _) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,040122 (regressionFit = 4,040119, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,024361 (regressionFit = 4,024357, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,038993 (regressionFit = 4,038989, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,025854 (regressionFit = 4,025849, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -4,024361 (regressionFit = 4,024357, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
%     Score = -5,060264 (regressionFit = 5,060260, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3,557677 (regressionFit = 3,557673, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]' score=-4.024361289232054

***** Warning: #57 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
Setting -0.0103563094188125 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,56 and has recall=0,83, precision=1,00, and F1=0,91 (using m-estimates).
 // It covers 83,3% of the positive examples, 40 of 48,
(friends(a, anon20011) ^ s_smokes(anon20011) ^ friends(anon20011, anon20119) ^ not_s_smokes(anon20119) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/48,0 pos, 0,0/0,0 neg]
% This clause covers 40 positive examples, of which 40 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 83,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.0103563094188125 to wgt = -0,0104 (friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 11 trees is 17,750 seconds.

% Kept 17 of the 17 positive examples.
% Kept 39 of the 53 negative examples.
% Dataset size: 56
Computing probabilities
prob time:30 milliseconds
No hidden examples for : smokes
Time to build dataset: 30 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 3 4 6 8 12 13 38 43 46 47
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 56,0/56,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 56,0/56,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 56,0/56,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 56,0/56,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 56,0/56,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 56,0/56,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 56,0/56,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 56,0/56,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 56,0/56,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 56,0/56,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 56,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,551750 (regressionFit = 3,551747, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,551750): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 55,0/56,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]' score=-3.5517495031841646
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3,587215 (regressionFit = 3,587212, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,551750 (regressionFit = 3,551747, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,554010 (regressionFit = 3,554007, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,587215 (regressionFit = 3,587212, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,554010 (regressionFit = 3,554007, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]' score=-3.5517504031841645
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3,587216 (regressionFit = 3,587212, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(a, _) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,554011 (regressionFit = 3,554007, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,587216 (regressionFit = 3,587212, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,554011 (regressionFit = 3,554007, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]' score=-3.5540103082762498
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,594395 (regressionFit = 3,594391, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,587659 (regressionFit = 3,587655, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,558972 (regressionFit = 3,558968, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,594395 (regressionFit = 3,594391, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,554011 (regressionFit = 3,554007, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,553878 (regressionFit = 3,553874, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,587659 (regressionFit = 3,587655, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,558972 (regressionFit = 3,558968, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,553878 (regressionFit = 3,553874, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,922385 (regressionFit = 3,922381, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 13,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,464015 (regressionFit = 3,464011, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,464015): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]' score=-3.553877911439346

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]' score=-3.553877911439346

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]' score=-3.5540103082762498
%  At # nodes expanded = 8, |OPEN| = 7.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,594395 (regressionFit = 3,594391, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,587659 (regressionFit = 3,587655, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(a, _) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,594395 (regressionFit = 3,594391, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,553878 (regressionFit = 3,553874, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,587659 (regressionFit = 3,587655, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,558972 (regressionFit = 3,558968, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,553878 (regressionFit = 3,553874, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,922385 (regressionFit = 3,922381, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 13,0/56,0 pos, 0,0/0,0 neg]
%     Score = -3,464015 (regressionFit = 3,464011, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]' score=-3.553877911439346

***** Warning: #58 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
Setting -0.00812715371826154 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,46 and has recall=0,82, precision=1,00, and F1=0,90 (using m-estimates).
 // It covers 82,1% of the positive examples, 46 of 56,
(friends(a, anon20639) ^ s_smokes(anon20639) ^ friends(anon20639, anon20747) ^ not_s_smokes(anon20747) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/56,0 pos, 0,0/0,0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 82,1% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.00812715371826154 to wgt = -0,0081 (friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 12 trees is 18,180 seconds.

% Kept 17 of the 17 positive examples.
% Kept 34 of the 53 negative examples.
% Dataset size: 51
Computing probabilities
prob time:35 milliseconds
No hidden examples for : smokes
Time to build dataset: 35 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 4 positive seeds: 8 23 33 49
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 51,0/51,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,216207 (regressionFit = 4,216205, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,216207): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 49,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]' score=-4.216207474105489
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,245834 (regressionFit = 4,245831, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,216208 (regressionFit = 4,216205, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214682 (regressionFit = 4,214679, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,214682): friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,245834 (regressionFit = 4,245831, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214682 (regressionFit = 4,214679, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]' score=-4.214681620769671
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -4,247407 (regressionFit = 4,247403, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,244533 (regressionFit = 4,244529, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214683 (regressionFit = 4,214679, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214114 (regressionFit = 4,214110, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,214114): friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,247407 (regressionFit = 4,247403, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214682 (regressionFit = 4,214679, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,215272 (regressionFit = 4,215268, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,244533 (regressionFit = 4,244529, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214114 (regressionFit = 4,214110, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,215272 (regressionFit = 4,215268, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,952215 (regressionFit = 4,952211, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3,973660 (regressionFit = 3,973656, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,973660): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]' score=-4.2141136035194
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 13 variant children.  Sending 21 items to OPEN for evaluation and possible insertion.
% Have created 21 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4,246646 (regressionFit = 4,246641, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(a, c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,246646 (regressionFit = 4,246641, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,243805 (regressionFit = 4,243800, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214115 (regressionFit = 4,214110, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214365 (regressionFit = 4,214360, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,246646 (regressionFit = 4,246641, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214114 (regressionFit = 4,214110, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,215315 (regressionFit = 4,215310, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, d) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214434 (regressionFit = 4,214429, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,246646 (regressionFit = 4,246641, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214114 (regressionFit = 4,214110, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,215315 (regressionFit = 4,215310, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214434 (regressionFit = 4,214429, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,243805 (regressionFit = 4,243800, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214365 (regressionFit = 4,214360, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214434 (regressionFit = 4,214429, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(_, c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214434 (regressionFit = 4,214429, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,444024 (regressionFit = 4,444019, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ s_smokes(c) => smokes(a).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,444024 (regressionFit = 4,444019, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3,977569 (regressionFit = 3,977564, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3,977569 (regressionFit = 3,977564, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]' score=-4.2141136035194
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 13 variant children.  Sending 21 items to OPEN for evaluation and possible insertion.
% Have created 21 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4,246646 (regressionFit = 4,246641, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(a, c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,246646 (regressionFit = 4,246641, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,243805 (regressionFit = 4,243800, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(a, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214115 (regressionFit = 4,214110, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(b, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,246646 (regressionFit = 4,246641, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214114 (regressionFit = 4,214110, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,215315 (regressionFit = 4,215310, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, d) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214434 (regressionFit = 4,214429, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,246646 (regressionFit = 4,246641, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,215315 (regressionFit = 4,215310, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(d, c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214434 (regressionFit = 4,214429, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,243805 (regressionFit = 4,243800, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214365 (regressionFit = 4,214360, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214434 (regressionFit = 4,214429, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(_, c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,214434 (regressionFit = 4,214429, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,444024 (regressionFit = 4,444019, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -4,444024 (regressionFit = 4,444019, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3,977569 (regressionFit = 3,977564, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3,977569 (regressionFit = 3,977564, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]' score=-4.2141144035194

% Consider expanding [#8 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]' score=-4.2141144035194

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]' score=-4.2141144035194

***** Warning: #59 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
Setting -0.008147036265599868 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,97 and has recall=0,82, precision=1,00, and F1=0,90 (using m-estimates).
 // It covers 82,4% of the positive examples, 42 of 51,
(friends(a, anon21267) ^ s_smokes(anon21267) ^ friends(anon21267, anon21375) ^ not_s_smokes(anon21375) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/51,0 pos, 0,0/0,0 neg]
% This clause covers 42 positive examples, of which 42 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 82,4% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.008147036265599868 to wgt = -0,0081 (friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 13 trees is 23,670 seconds.

% Kept 17 of the 17 positive examples.
% Kept 33 of the 53 negative examples.
% Dataset size: 50
Computing probabilities
prob time:40 milliseconds
No hidden examples for : smokes
Time to build dataset: 40 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 7 9 20 33 34 46
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 50,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,222559 (regressionFit = 4,222557, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,222559): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 48,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]' score=-4.222558561211212
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,262459 (regressionFit = 4,262456, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,222559 (regressionFit = 4,222557, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,220249 (regressionFit = 4,220246, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,220249): friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,262459 (regressionFit = 4,262456, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,220249 (regressionFit = 4,220246, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]' score=-4.220249231797956
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -4,263951 (regressionFit = 4,263947, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,260639 (regressionFit = 4,260635, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,220250 (regressionFit = 4,220246, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,218405 (regressionFit = 4,218401, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,218405): friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,263951 (regressionFit = 4,263947, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,220250 (regressionFit = 4,220246, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,222209 (regressionFit = 4,222205, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,260639 (regressionFit = 4,260635, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,218405 (regressionFit = 4,218401, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,222209 (regressionFit = 4,222205, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,881569 (regressionFit = 4,881566, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 14,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,119411 (regressionFit = 4,119407, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,119411): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]' score=-4.218404850201587
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 13 variant children.  Sending 21 items to OPEN for evaluation and possible insertion.
% Have created 21 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4,262515 (regressionFit = 4,262510, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(a, c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,262515 (regressionFit = 4,262510, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,259119 (regressionFit = 4,259114, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,218406 (regressionFit = 4,218401, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,216922 (regressionFit = 4,216916, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,262515 (regressionFit = 4,262510, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,218406 (regressionFit = 4,218401, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,221429 (regressionFit = 4,221425, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, d) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,220244 (regressionFit = 4,220239, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,262515 (regressionFit = 4,262510, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,218406 (regressionFit = 4,218401, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,221429 (regressionFit = 4,221425, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,220244 (regressionFit = 4,220239, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,259119 (regressionFit = 4,259114, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,216922 (regressionFit = 4,216916, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,220244 (regressionFit = 4,220239, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(_, c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,220244 (regressionFit = 4,220239, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,446128 (regressionFit = 4,446123, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ s_smokes(c) => smokes(a).  [covers 14,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,446128 (regressionFit = 4,446123, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 14,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,119600 (regressionFit = 4,119595, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,119600 (regressionFit = 4,119595, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]' score=-4.216921507487543

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]' score=-4.216921507487543

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]' score=-4.218404850201587
%  At # nodes expanded = 8, |OPEN| = 7.  Pruned 13 variant children.  Sending 21 items to OPEN for evaluation and possible insertion.
% Have created 21 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4,262515 (regressionFit = 4,262510, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(a, c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,262515 (regressionFit = 4,262510, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,259119 (regressionFit = 4,259114, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(a, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,218406 (regressionFit = 4,218401, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(b, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,262515 (regressionFit = 4,262510, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,218406 (regressionFit = 4,218401, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,221429 (regressionFit = 4,221425, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, d) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,220244 (regressionFit = 4,220239, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,262515 (regressionFit = 4,262510, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,221429 (regressionFit = 4,221425, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(d, c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,220244 (regressionFit = 4,220239, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,259119 (regressionFit = 4,259114, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,216922 (regressionFit = 4,216916, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,220244 (regressionFit = 4,220239, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(_, c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,220244 (regressionFit = 4,220239, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,446128 (regressionFit = 4,446123, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,446128 (regressionFit = 4,446123, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,119600 (regressionFit = 4,119595, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
%     Score = -4,119600 (regressionFit = 4,119595, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]' score=-4.216921507487543

***** Warning: #60 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
Setting -0.006758902481711805 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,12 and has recall=0,80, precision=1,00, and F1=0,89 (using m-estimates).
 // It covers 80,0% of the positive examples, 40 of 50,
(friends(a, anon22443) ^ s_smokes(anon22443) ^ friends(anon22443, anon22551) ^ not_s_smokes(anon22551) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 40,0/50,0 pos, 0,0/0,0 neg]
% This clause covers 40 positive examples, of which 40 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 80,0% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.006758902481711805 to wgt = -0,0068 (friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 14 trees is 29,150 seconds.

% Kept 17 of the 17 positive examples.
% Kept 38 of the 53 negative examples.
% Dataset size: 55
Computing probabilities
prob time:38 milliseconds
No hidden examples for : smokes
Time to build dataset: 38 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 1 2 5 6 9 12 15 22 27 31
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186888 (regressionFit = 4,186886, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,186888): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]' score=-4.186887822283834
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,228137 (regressionFit = 4,228134, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186889 (regressionFit = 4,186886, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186524 (regressionFit = 4,186521, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,186524): friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,228137 (regressionFit = 4,228134, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186524 (regressionFit = 4,186521, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]' score=-4.186524119106749
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -4,231497 (regressionFit = 4,231493, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,227415 (regressionFit = 4,227411, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186525 (regressionFit = 4,186521, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,187667 (regressionFit = 4,187663, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,231497 (regressionFit = 4,231493, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186525 (regressionFit = 4,186521, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186768 (regressionFit = 4,186764, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,227415 (regressionFit = 4,227411, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,187667 (regressionFit = 4,187663, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186768 (regressionFit = 4,186764, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,881788 (regressionFit = 4,881785, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 14,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,056831 (regressionFit = 4,056827, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,056831): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]' score=-4.186524119106749
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -4,231497 (regressionFit = 4,231493, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,227415 (regressionFit = 4,227411, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(a, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186525 (regressionFit = 4,186521, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,231497 (regressionFit = 4,231493, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186768 (regressionFit = 4,186764, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,227415 (regressionFit = 4,227411, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,187667 (regressionFit = 4,187663, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186768 (regressionFit = 4,186764, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,881788 (regressionFit = 4,881785, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,056831 (regressionFit = 4,056827, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]' score=-4.186524919106748
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -4,231498 (regressionFit = 4,231493, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,227415 (regressionFit = 4,227411, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(a, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186526 (regressionFit = 4,186521, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,187668 (regressionFit = 4,187663, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,231498 (regressionFit = 4,231493, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186769 (regressionFit = 4,186764, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,227415 (regressionFit = 4,227411, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(_, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,187668 (regressionFit = 4,187663, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(_, b) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186769 (regressionFit = 4,186764, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,881789 (regressionFit = 4,881785, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,056832 (regressionFit = 4,056827, penalties=4.83E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]' score=-4.186525019106749
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -4,231498 (regressionFit = 4,231493, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ friends(a, c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,227416 (regressionFit = 4,227411, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) ^ friends(a, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,187668 (regressionFit = 4,187663, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,231498 (regressionFit = 4,231493, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ friends(c, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186769 (regressionFit = 4,186764, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ friends(c, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,227416 (regressionFit = 4,227411, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,187668 (regressionFit = 4,187663, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186769 (regressionFit = 4,186764, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ friends(_, c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,881789 (regressionFit = 4,881785, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ s_smokes(c) => smokes(a).  [covers 14,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,056832 (regressionFit = 4,056827, penalties=4.83E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]' score=-4.186525019106749
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -4,231498 (regressionFit = 4,231493, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ friends(a, c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,227416 (regressionFit = 4,227411, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) ^ friends(a, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,231498 (regressionFit = 4,231493, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ friends(c, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186769 (regressionFit = 4,186764, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ friends(c, _) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,227416 (regressionFit = 4,227411, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,187668 (regressionFit = 4,187663, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,186769 (regressionFit = 4,186764, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ friends(_, c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,881789 (regressionFit = 4,881785, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ s_smokes(c) => smokes(a).  [covers 14,0/55,0 pos, 0,0/0,0 neg]
%     Score = -4,056832 (regressionFit = 4,056827, penalties=4.83E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]' score=-4.186525819106748

***** Warning: #61 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
Setting -0.006693410962959444 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,06 and has recall=0,83, precision=1,00, and F1=0,91 (using m-estimates).
 // It covers 83,6% of the positive examples, 46 of 55,
(friends(a, anon23625) ^ s_smokes(anon23625) ^ friends(anon23625, anon23733) ^ not_s_smokes(anon23733) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 46,0/55,0 pos, 0,0/0,0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 83,6% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.006693410962959444 to wgt = -0,0067 (friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 15 trees is 30,106 seconds.

% Kept 17 of the 17 positive examples.
% Kept 37 of the 53 negative examples.
% Dataset size: 54
Computing probabilities
prob time:34 milliseconds
No hidden examples for : smokes
Time to build dataset: 34 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 0 5 11 18 23 26 30 33 35 38
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 54,0/54,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 54,0/54,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 54,0/54,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 54,0/54,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 54,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 54,0/54,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 54,0/54,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 54,0/54,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 54,0/54,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 54,0/54,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 54,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,229851 (regressionFit = 3,229849, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,229851): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 53,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]' score=-3.22985106703442
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3,288121 (regressionFit = 3,288118, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,229852 (regressionFit = 3,229849, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,229247 (regressionFit = 3,229244, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,229247): friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,288121 (regressionFit = 3,288118, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,229247 (regressionFit = 3,229244, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]' score=-3.2292466705727323
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,295345 (regressionFit = 3,295342, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,285267 (regressionFit = 3,285263, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,229248 (regressionFit = 3,229244, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,230562 (regressionFit = 3,230558, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,295345 (regressionFit = 3,295342, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,229247 (regressionFit = 3,229244, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,231667 (regressionFit = 3,231663, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,285267 (regressionFit = 3,285263, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,230562 (regressionFit = 3,230558, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,231667 (regressionFit = 3,231663, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,664725 (regressionFit = 3,664721, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 13,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,652213 (regressionFit = 3,652209, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]' score=-3.2292466705727323
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,295345 (regressionFit = 3,295342, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,285267 (regressionFit = 3,285263, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(a, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,229248 (regressionFit = 3,229244, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,295345 (regressionFit = 3,295342, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,231667 (regressionFit = 3,231663, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,285267 (regressionFit = 3,285263, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,230562 (regressionFit = 3,230558, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,231667 (regressionFit = 3,231663, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,664725 (regressionFit = 3,664721, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 13,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,652213 (regressionFit = 3,652209, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]' score=-3.2292474705727323
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,295346 (regressionFit = 3,295342, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,285268 (regressionFit = 3,285263, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(a, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,229248 (regressionFit = 3,229244, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,230563 (regressionFit = 3,230558, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,295346 (regressionFit = 3,295342, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,231668 (regressionFit = 3,231663, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,285268 (regressionFit = 3,285263, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(_, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,230563 (regressionFit = 3,230558, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(_, b) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,231668 (regressionFit = 3,231663, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,664726 (regressionFit = 3,664721, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 13,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,652214 (regressionFit = 3,652209, penalties=4.83E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]' score=-3.2292475705727326
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,295346 (regressionFit = 3,295342, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ friends(a, c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,285268 (regressionFit = 3,285263, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) ^ friends(a, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,230563 (regressionFit = 3,230558, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,295346 (regressionFit = 3,295342, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ friends(c, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,231668 (regressionFit = 3,231663, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ friends(c, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,285268 (regressionFit = 3,285263, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,230563 (regressionFit = 3,230558, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,231668 (regressionFit = 3,231663, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ friends(_, c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,664726 (regressionFit = 3,664721, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ s_smokes(c) => smokes(a).  [covers 13,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,652214 (regressionFit = 3,652209, penalties=4.83E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ not_s_smokes(c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]' score=-3.2292475705727326
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,295346 (regressionFit = 3,295342, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ friends(a, c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,285268 (regressionFit = 3,285263, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) ^ friends(a, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,295346 (regressionFit = 3,295342, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ friends(c, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,231668 (regressionFit = 3,231663, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ friends(c, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,285268 (regressionFit = 3,285263, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,230563 (regressionFit = 3,230558, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,231668 (regressionFit = 3,231663, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ friends(_, c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,664726 (regressionFit = 3,664721, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ s_smokes(c) => smokes(a).  [covers 13,0/54,0 pos, 0,0/0,0 neg]
%     Score = -3,652214 (regressionFit = 3,652209, penalties=4.83E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ not_s_smokes(c) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]' score=-3.2292483705727326

***** Warning: #62 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
Setting 0.0018695281621486765 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,23 and has recall=0,79, precision=1,00, and F1=0,88 (using m-estimates).
 // It covers 79,6% of the positive examples, 43 of 54,
(friends(a, anon24675) ^ s_smokes(anon24675) ^ friends(anon24675, anon24783) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 43,0/54,0 pos, 0,0/0,0 neg]
% This clause covers 43 positive examples, of which 43 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 79,6% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.0018695281621486765 to wgt = 0,0019 (friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 16 trees is 31,085 seconds.

% Kept 17 of the 17 positive examples.
% Kept 36 of the 53 negative examples.
% Dataset size: 53
Computing probabilities
prob time:44 milliseconds
No hidden examples for : smokes
Time to build dataset: 44 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 2 6 8 11 12 14 20 31 34 36
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,345036 (regressionFit = 4,345034, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,345036): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 51,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]' score=-4.345035978359687
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,378812 (regressionFit = 4,378809, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,345037 (regressionFit = 4,345034, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343448 (regressionFit = 4,343445, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,343448): friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,378812 (regressionFit = 4,378809, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343448 (regressionFit = 4,343445, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]' score=-4.343447703065807
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -4,380671 (regressionFit = 4,380667, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,377446 (regressionFit = 4,377442, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343449 (regressionFit = 4,343445, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343014 (regressionFit = 4,343010, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,343014): friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380671 (regressionFit = 4,380667, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343449 (regressionFit = 4,343445, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,344102 (regressionFit = 4,344098, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,377446 (regressionFit = 4,377442, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343014 (regressionFit = 4,343010, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,344102 (regressionFit = 4,344098, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,809231 (regressionFit = 4,809228, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,251023 (regressionFit = 4,251019, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,251023): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]' score=-4.343014152343328
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 13 variant children.  Sending 21 items to OPEN for evaluation and possible insertion.
% Have created 21 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4,380061 (regressionFit = 4,380056, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(a, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380061 (regressionFit = 4,380056, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,376850 (regressionFit = 4,376845, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343015 (regressionFit = 4,343010, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343613 (regressionFit = 4,343608, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380061 (regressionFit = 4,380056, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343015 (regressionFit = 4,343010, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,344050 (regressionFit = 4,344045, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, d) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343340 (regressionFit = 4,343335, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380061 (regressionFit = 4,380056, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343015 (regressionFit = 4,343010, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,344050 (regressionFit = 4,344045, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343340 (regressionFit = 4,343335, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,376850 (regressionFit = 4,376845, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343613 (regressionFit = 4,343608, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343340 (regressionFit = 4,343335, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(_, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343340 (regressionFit = 4,343335, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,467704 (regressionFit = 4,467699, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,467704 (regressionFit = 4,467699, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,251906 (regressionFit = 4,251901, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,251906 (regressionFit = 4,251901, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]' score=-4.343014152343328
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 13 variant children.  Sending 21 items to OPEN for evaluation and possible insertion.
% Have created 21 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4,380061 (regressionFit = 4,380056, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(a, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380061 (regressionFit = 4,380056, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,376850 (regressionFit = 4,376845, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(a, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343015 (regressionFit = 4,343010, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(b, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380061 (regressionFit = 4,380056, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343015 (regressionFit = 4,343010, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,344050 (regressionFit = 4,344045, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, d) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343340 (regressionFit = 4,343335, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380061 (regressionFit = 4,380056, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,344050 (regressionFit = 4,344045, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(d, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343340 (regressionFit = 4,343335, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,376850 (regressionFit = 4,376845, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343613 (regressionFit = 4,343608, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343340 (regressionFit = 4,343335, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(_, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343340 (regressionFit = 4,343335, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,467704 (regressionFit = 4,467699, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,467704 (regressionFit = 4,467699, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,251906 (regressionFit = 4,251901, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,251906 (regressionFit = 4,251901, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]' score=-4.343014952343328
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 12 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4,380062 (regressionFit = 4,380056, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380062 (regressionFit = 4,380056, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(a, d) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,376851 (regressionFit = 4,376845, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(a, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343016 (regressionFit = 4,343010, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(b, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343614 (regressionFit = 4,343608, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(b, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380062 (regressionFit = 4,380056, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,344051 (regressionFit = 4,344045, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(c, d) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343341 (regressionFit = 4,343335, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380062 (regressionFit = 4,380056, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(d, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343016 (regressionFit = 4,343010, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(d, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,344051 (regressionFit = 4,344045, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(d, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343341 (regressionFit = 4,343335, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(d, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,376851 (regressionFit = 4,376845, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(_, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343614 (regressionFit = 4,343608, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(_, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343341 (regressionFit = 4,343335, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343341 (regressionFit = 4,343335, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(_, d) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,467705 (regressionFit = 4,467699, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,467704 (regressionFit = 4,467699, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ s_smokes(d) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,251907 (regressionFit = 4,251901, penalties=5.840000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,251907 (regressionFit = 4,251901, penalties=5.740000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ not_s_smokes(d) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]' score=-4.343014952343328
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 12 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4,380062 (regressionFit = 4,380056, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ friends(a, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380062 (regressionFit = 4,380056, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,376851 (regressionFit = 4,376845, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(a, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343016 (regressionFit = 4,343010, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343614 (regressionFit = 4,343608, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(b, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380062 (regressionFit = 4,380056, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ friends(c, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,344051 (regressionFit = 4,344045, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ friends(c, d) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343341 (regressionFit = 4,343335, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ friends(c, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380062 (regressionFit = 4,380056, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,344051 (regressionFit = 4,344045, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ friends(d, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343341 (regressionFit = 4,343335, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,376851 (regressionFit = 4,376845, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(_, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343614 (regressionFit = 4,343608, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(_, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343341 (regressionFit = 4,343335, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ friends(_, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343341 (regressionFit = 4,343335, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,467704 (regressionFit = 4,467699, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,467705 (regressionFit = 4,467699, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,251907 (regressionFit = 4,251901, penalties=5.740000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,251907 (regressionFit = 4,251901, penalties=5.840000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]' score=-4.343014952343328
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 12 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4,380062 (regressionFit = 4,380056, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380062 (regressionFit = 4,380056, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ friends(a, d) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,376851 (regressionFit = 4,376845, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(a, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343016 (regressionFit = 4,343010, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(b, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380062 (regressionFit = 4,380056, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,344051 (regressionFit = 4,344045, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ friends(c, d) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343341 (regressionFit = 4,343335, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,380062 (regressionFit = 4,380056, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ friends(d, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,344051 (regressionFit = 4,344045, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ friends(d, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343341 (regressionFit = 4,343335, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ friends(d, _) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,376851 (regressionFit = 4,376845, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(_, a) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343614 (regressionFit = 4,343608, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(_, b) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343341 (regressionFit = 4,343335, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,343341 (regressionFit = 4,343335, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ friends(_, d) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,467705 (regressionFit = 4,467699, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,467704 (regressionFit = 4,467699, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ s_smokes(d) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,251907 (regressionFit = 4,251901, penalties=5.840000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,251907 (regressionFit = 4,251901, penalties=5.740000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ not_s_smokes(d) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]

***** Warning: #63 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
Setting -0.0060914297286419694 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,25 and has recall=0,77, precision=1,00, and F1=0,87 (using m-estimates).
 // It covers 77,4% of the positive examples, 41 of 53,
(friends(a, anon25719) ^ s_smokes(anon25719) ^ friends(anon25719, anon25827) ^ not_s_smokes(anon25827) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 41,0/53,0 pos, 0,0/0,0 neg]
% This clause covers 41 positive examples, of which 41 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 77,4% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.0060914297286419694 to wgt = -0,0061 (friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 17 trees is 45,836 seconds.

% Kept 17 of the 17 positive examples.
% Kept 38 of the 53 negative examples.
% Dataset size: 55
Computing probabilities
prob time:40 milliseconds
No hidden examples for : smokes
Time to build dataset: 40 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 0 1 2 3 10 20 23 36 38 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 55,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,094729 (regressionFit = 3,094727, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,094729): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 54,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]' score=-3.0947289940783316
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -3,142767 (regressionFit = 3,142764, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,094730 (regressionFit = 3,094727, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,094165 (regressionFit = 3,094162, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,094165): friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,142767 (regressionFit = 3,142764, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,094165 (regressionFit = 3,094162, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]' score=-3.094164867787398
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,149003 (regressionFit = 3,148999, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,140567 (regressionFit = 3,140563, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,094166 (regressionFit = 3,094162, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096540 (regressionFit = 3,096536, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,149003 (regressionFit = 3,148999, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,094166 (regressionFit = 3,094162, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096289 (regressionFit = 3,096285, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,140567 (regressionFit = 3,140563, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096540 (regressionFit = 3,096536, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096289 (regressionFit = 3,096285, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,629249 (regressionFit = 3,629245, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 13,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,386487 (regressionFit = 3,386483, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]' score=-3.094164867787398
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,149003 (regressionFit = 3,148999, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,140567 (regressionFit = 3,140563, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(a, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,094166 (regressionFit = 3,094162, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,149003 (regressionFit = 3,148999, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096289 (regressionFit = 3,096285, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,140567 (regressionFit = 3,140563, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096540 (regressionFit = 3,096536, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096289 (regressionFit = 3,096285, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,629249 (regressionFit = 3,629245, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 13,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,386487 (regressionFit = 3,386483, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]' score=-3.094165667787398
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,149004 (regressionFit = 3,148999, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,140568 (regressionFit = 3,140563, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(a, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,094167 (regressionFit = 3,094162, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096540 (regressionFit = 3,096536, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,149004 (regressionFit = 3,148999, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096290 (regressionFit = 3,096285, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,140568 (regressionFit = 3,140563, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(_, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096540 (regressionFit = 3,096536, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(_, b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096290 (regressionFit = 3,096285, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,629250 (regressionFit = 3,629245, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 13,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,386488 (regressionFit = 3,386483, penalties=4.83E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]' score=-3.0941657677873984
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,149004 (regressionFit = 3,148999, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ friends(a, c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,140568 (regressionFit = 3,140563, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) ^ friends(a, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096541 (regressionFit = 3,096536, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,149004 (regressionFit = 3,148999, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ friends(c, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096290 (regressionFit = 3,096285, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ friends(c, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,140568 (regressionFit = 3,140563, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096541 (regressionFit = 3,096536, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096290 (regressionFit = 3,096285, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ friends(_, c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,629250 (regressionFit = 3,629245, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ s_smokes(c) => smokes(a).  [covers 13,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,386488 (regressionFit = 3,386483, penalties=4.83E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, a) ^ not_s_smokes(c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]' score=-3.0941657677873984
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,149004 (regressionFit = 3,148999, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ friends(a, c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,140568 (regressionFit = 3,140563, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) ^ friends(a, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,149004 (regressionFit = 3,148999, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ friends(c, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096290 (regressionFit = 3,096285, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ friends(c, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,140568 (regressionFit = 3,140563, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096541 (regressionFit = 3,096536, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096290 (regressionFit = 3,096285, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ friends(_, c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,629250 (regressionFit = 3,629245, penalties=4.7300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ s_smokes(c) => smokes(a).  [covers 13,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,386488 (regressionFit = 3,386483, penalties=4.83E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(c, b) ^ friends(b, a) ^ not_s_smokes(c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]' score=-3.0941665677873984
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 5 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -3,149004 (regressionFit = 3,148999, penalties=5.630000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) ^ friends(a, c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,140569 (regressionFit = 3,140563, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) ^ friends(a, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096541 (regressionFit = 3,096536, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) ^ friends(b, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,149004 (regressionFit = 3,148999, penalties=5.630000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) ^ friends(c, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096291 (regressionFit = 3,096285, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) ^ friends(c, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,140569 (regressionFit = 3,140563, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) ^ friends(_, a) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096541 (regressionFit = 3,096536, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) ^ friends(_, b) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,096291 (regressionFit = 3,096285, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) ^ friends(_, c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,629251 (regressionFit = 3,629245, penalties=5.630000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) ^ s_smokes(c) => smokes(a).  [covers 13,0/55,0 pos, 0,0/0,0 neg]
%     Score = -3,386489 (regressionFit = 3,386483, penalties=5.730000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) ^ not_s_smokes(c) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]

***** Warning: #64 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
Setting 0.001646963316601362 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,09 and has recall=0,82, precision=1,00, and F1=0,90 (using m-estimates).
 // It covers 81,8% of the positive examples, 45 of 55,
(friends(a, anon27937) ^ s_smokes(anon27937) ^ friends(anon27937, anon28045) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 45,0/55,0 pos, 0,0/0,0 neg]
% This clause covers 45 positive examples, of which 45 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 81,8% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.001646963316601362 to wgt = 0,0016 (friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 18 trees is 46,924 seconds.

% Kept 17 of the 17 positive examples.
% Kept 27 of the 53 negative examples.
% Dataset size: 44
Computing probabilities
prob time:44 milliseconds
No hidden examples for : smokes
Time to build dataset: 45 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 5 6 7 10 11 19 21 31 35 36
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 44,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747834 (regressionFit = 2,747832, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,747834): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 43,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]' score=-2.7478339112981427
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,787078 (regressionFit = 2,787075, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747835 (regressionFit = 2,747832, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747525 (regressionFit = 2,747522, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,747525): friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,787078 (regressionFit = 2,787075, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747525 (regressionFit = 2,747522, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]' score=-2.74752543251282
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -2,792204 (regressionFit = 2,792200, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,785660 (regressionFit = 2,785656, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747526 (regressionFit = 2,747522, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,748864 (regressionFit = 2,748859, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,792204 (regressionFit = 2,792200, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747526 (regressionFit = 2,747522, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747433 (regressionFit = 2,747429, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,747433): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,785660 (regressionFit = 2,785656, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,748864 (regressionFit = 2,748859, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747433 (regressionFit = 2,747429, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,493858 (regressionFit = 3,493854, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 13,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,046719 (regressionFit = 3,046715, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]' score=-2.747432946362209
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 13 variant children.  Sending 21 items to OPEN for evaluation and possible insertion.
% Have created 21 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -2,785534 (regressionFit = 2,785530, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) ^ friends(a, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,778312 (regressionFit = 2,778308, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(a, d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,786162 (regressionFit = 2,786157, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) ^ friends(a, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747434 (regressionFit = 2,747429, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) ^ friends(b, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,749371 (regressionFit = 2,749367, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(b, d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,748229 (regressionFit = 2,748224, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) ^ friends(b, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,785534 (regressionFit = 2,785530, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) ^ friends(c, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747434 (regressionFit = 2,747429, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) ^ friends(c, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747741 (regressionFit = 2,747736, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) ^ friends(c, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,778312 (regressionFit = 2,778308, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,749371 (regressionFit = 2,749367, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747434 (regressionFit = 2,747429, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747064 (regressionFit = 2,747059, penalties=4.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,747064): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,786162 (regressionFit = 2,786157, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) ^ friends(_, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,748229 (regressionFit = 2,748224, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) ^ friends(_, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747741 (regressionFit = 2,747736, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) ^ friends(_, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747064 (regressionFit = 2,747059, penalties=4.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,221245 (regressionFit = 3,221240, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) ^ s_smokes(c) => smokes(a).  [covers 13,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,654438 (regressionFit = 2,654433, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ s_smokes(d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,654438): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ s_smokes(d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,058352 (regressionFit = 3,058347, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) ^ not_s_smokes(c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,047962 (regressionFit = 3,047957, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ not_s_smokes(d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]' score=-2.7470638993511196
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 21 variant children.  Sending 32 items to OPEN for evaluation and possible insertion.
% Have created 32 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -2,786766 (regressionFit = 2,786761, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(a, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,773286 (regressionFit = 2,773281, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(a, d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,782670 (regressionFit = 2,782664, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ friends(a, e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,786064 (regressionFit = 2,786058, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(a, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747065 (regressionFit = 2,747059, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(b, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,749100 (regressionFit = 2,749095, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(b, d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747854 (regressionFit = 2,747849, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ friends(b, e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747730 (regressionFit = 2,747724, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(b, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,786766 (regressionFit = 2,786761, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(c, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747065 (regressionFit = 2,747059, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(c, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,748361 (regressionFit = 2,748356, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ friends(c, e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747601 (regressionFit = 2,747595, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(c, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,773286 (regressionFit = 2,773281, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(d, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,749100 (regressionFit = 2,749095, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(d, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747065 (regressionFit = 2,747059, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(d, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747086 (regressionFit = 2,747080, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(d, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,782670 (regressionFit = 2,782664, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ friends(e, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747854 (regressionFit = 2,747849, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ friends(e, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,748361 (regressionFit = 2,748356, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ friends(e, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747065 (regressionFit = 2,747059, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ friends(e, d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747164 (regressionFit = 2,747158, penalties=5.760000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ friends(e, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,786064 (regressionFit = 2,786058, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(_, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747730 (regressionFit = 2,747724, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(_, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747601 (regressionFit = 2,747595, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(_, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747086 (regressionFit = 2,747080, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(_, d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747164 (regressionFit = 2,747158, penalties=5.760000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ friends(_, e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,168527 (regressionFit = 3,168522, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ s_smokes(c) => smokes(a).  [covers 13,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,654984 (regressionFit = 2,654978, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ s_smokes(d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,651603 (regressionFit = 2,651598, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ s_smokes(e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,651603): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ s_smokes(e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,057038 (regressionFit = 3,057032, penalties=5.850000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ not_s_smokes(c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,059591 (regressionFit = 3,059585, penalties=5.850000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ not_s_smokes(d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,047620 (regressionFit = 3,047614, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ not_s_smokes(e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]' score=-2.7470638993511196
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 21 variant children.  Sending 32 items to OPEN for evaluation and possible insertion.
% Have created 32 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -2,786766 (regressionFit = 2,786761, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(a, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,773286 (regressionFit = 2,773281, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(a, d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,782670 (regressionFit = 2,782664, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(e, d) ^ friends(a, e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,786064 (regressionFit = 2,786058, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(a, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747065 (regressionFit = 2,747059, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(b, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,749100 (regressionFit = 2,749095, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(b, d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747854 (regressionFit = 2,747849, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(e, d) ^ friends(b, e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747730 (regressionFit = 2,747724, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(b, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,786766 (regressionFit = 2,786761, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(c, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747065 (regressionFit = 2,747059, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(c, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,748361 (regressionFit = 2,748356, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(e, d) ^ friends(c, e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747601 (regressionFit = 2,747595, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(c, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,773286 (regressionFit = 2,773281, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(d, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,749100 (regressionFit = 2,749095, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(d, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747065 (regressionFit = 2,747059, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(d, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,782670 (regressionFit = 2,782664, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(e, d) ^ friends(e, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747854 (regressionFit = 2,747849, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(e, d) ^ friends(e, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,748361 (regressionFit = 2,748356, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(e, d) ^ friends(e, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747164 (regressionFit = 2,747158, penalties=5.760000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(e, d) ^ friends(e, _) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,786064 (regressionFit = 2,786058, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(_, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747730 (regressionFit = 2,747724, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(_, b) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747601 (regressionFit = 2,747595, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(_, c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747086 (regressionFit = 2,747080, penalties=5.860000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ friends(_, d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,747164 (regressionFit = 2,747158, penalties=5.760000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(e, d) ^ friends(_, e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,168527 (regressionFit = 3,168522, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ s_smokes(c) => smokes(a).  [covers 13,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,654984 (regressionFit = 2,654978, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ s_smokes(d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -2,651603 (regressionFit = 2,651598, penalties=5.650000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(e, d) ^ s_smokes(e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,057038 (regressionFit = 3,057032, penalties=5.850000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ not_s_smokes(c) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,059591 (regressionFit = 3,059585, penalties=5.850000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(_, d) ^ not_s_smokes(d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
%     Score = -3,047620 (regressionFit = 3,047614, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(e, d) ^ not_s_smokes(e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=5:6] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ friends(e, d) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]' score=-2.7470646993511196

% Consider expanding [#9 of outerLoop #1, bodyLen=5:6] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, _) ^ friends(b, a) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]' score=-2.74706479935112

***** Warning: #65 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ s_smokes(e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ s_smokes(e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
Setting 1.66580126014563E-5 for 
 // Learned this clause on outer loop cycle #1.  It scores=-2,65 and has recall=0,77, precision=1,00, and F1=0,87 (using m-estimates).
 // It covers 77,3% of the positive examples, 34 of 44,
(friends(a, anon29129) ^ s_smokes(anon29129) ^ friends(anon29129, anon29237) ^ friends(anon29237, anon29309) ^ friends(anon29309, anon29497) ^ s_smokes(anon29497) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ s_smokes(e) => smokes(a).  [covers 34,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 34 positive examples, of which 34 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 77,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 1.66580126014563E-5 to wgt = 1,666e-05 (friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, d) ^ friends(d, e) ^ s_smokes(e) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 19 trees is 2 minutes and 26,435 seconds.

% Kept 17 of the 17 positive examples.
% Kept 36 of the 53 negative examples.
% Dataset size: 53
Computing probabilities
prob time:449 milliseconds
No hidden examples for : smokes
Time to build dataset: 449 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 5 6 8 11 21 22 26 30 35 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 53,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,131809 (regressionFit = 4,131807, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,131809): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 51,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]' score=-4.131808839464892
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,144233 (regressionFit = 4,144229, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,131810 (regressionFit = 4,131807, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,130320 (regressionFit = 4,130317, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,130320): friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,144233 (regressionFit = 4,144229, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,130320 (regressionFit = 4,130317, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]' score=-4.130319964658752
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -4,144476 (regressionFit = 4,144472, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143516 (regressionFit = 4,143512, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,130321 (regressionFit = 4,130317, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129058 (regressionFit = 4,129054, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,129058): friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,144476 (regressionFit = 4,144472, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,130321 (regressionFit = 4,130317, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,131087 (regressionFit = 4,131083, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143516 (regressionFit = 4,143512, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129058 (regressionFit = 4,129054, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,131087 (regressionFit = 4,131083, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,723420 (regressionFit = 4,723416, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,920035 (regressionFit = 3,920031, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,920035): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]' score=-4.129058005380127
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 13 variant children.  Sending 21 items to OPEN for evaluation and possible insertion.
% Have created 21 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4,143902 (regressionFit = 4,143897, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(a, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143902 (regressionFit = 4,143897, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,142878 (regressionFit = 4,142873, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129059 (regressionFit = 4,129054, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,127985 (regressionFit = 4,127980, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143902 (regressionFit = 4,143897, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129059 (regressionFit = 4,129054, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,130198 (regressionFit = 4,130193, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, d) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129803 (regressionFit = 4,129798, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143902 (regressionFit = 4,143897, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129059 (regressionFit = 4,129054, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,130198 (regressionFit = 4,130193, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129803 (regressionFit = 4,129798, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,142878 (regressionFit = 4,142873, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,127985 (regressionFit = 4,127980, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129803 (regressionFit = 4,129798, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(_, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129803 (regressionFit = 4,129798, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,379331 (regressionFit = 4,379327, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,379331 (regressionFit = 4,379327, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,930807 (regressionFit = 3,930802, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,930807 (regressionFit = 3,930802, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]' score=-4.127984897339953
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 21 variant children.  Sending 32 items to OPEN for evaluation and possible insertion.
% Have created 32 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -4,143383 (regressionFit = 4,143377, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(b, _) ^ friends(a, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143383 (regressionFit = 4,143377, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(b, _) ^ friends(a, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143383 (regressionFit = 4,143377, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,142308 (regressionFit = 4,142302, penalties=6.060000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,127986 (regressionFit = 4,127980, penalties=5.9500000000000015E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,127064 (regressionFit = 4,127058, penalties=6.060000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143383 (regressionFit = 4,143377, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(b, _) ^ friends(c, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,127986 (regressionFit = 4,127980, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(b, _) ^ friends(c, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129077 (regressionFit = 4,129071, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(b, _) ^ friends(c, d) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129077 (regressionFit = 4,129071, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(b, d) ^ friends(c, d) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,128680 (regressionFit = 4,128674, penalties=5.960000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(b, _) ^ friends(c, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143383 (regressionFit = 4,143377, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(b, _) ^ friends(c, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,127986 (regressionFit = 4,127980, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129077 (regressionFit = 4,129071, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(b, _) ^ friends(d, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129077 (regressionFit = 4,129071, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(b, d) ^ friends(c, d) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,128680 (regressionFit = 4,128674, penalties=5.960000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(b, _) ^ friends(c, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143383 (regressionFit = 4,143377, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,127986 (regressionFit = 4,127980, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129077 (regressionFit = 4,129071, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(b, d) ^ friends(d, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129077 (regressionFit = 4,129071, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(b, d) ^ friends(d, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,128680 (regressionFit = 4,128674, penalties=5.960000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,142308 (regressionFit = 4,142302, penalties=6.060000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,127064 (regressionFit = 4,127058, penalties=6.060000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,128680 (regressionFit = 4,128674, penalties=5.960000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(b, _) ^ friends(_, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,128680 (regressionFit = 4,128674, penalties=5.960000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(b, _) ^ friends(_, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,128680 (regressionFit = 4,128674, penalties=5.960000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,361603 (regressionFit = 4,361598, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(b, _) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,361603 (regressionFit = 4,361598, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(b, _) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,361603 (regressionFit = 4,361598, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,943331 (regressionFit = 3,943325, penalties=5.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(b, _) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,943331 (regressionFit = 3,943325, penalties=5.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(b, _) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,943331 (regressionFit = 3,943325, penalties=5.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=5:6] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]' score=-4.127064460942213

% Consider expanding [#8 of outerLoop #1, bodyLen=5:6] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]' score=-4.127064460942213

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]' score=-4.127984897339953
%  At # nodes expanded = 9, |OPEN| = 7.  Pruned 21 variant children.  Sending 32 items to OPEN for evaluation and possible insertion.
% Have created 32 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -4,143383 (regressionFit = 4,143377, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(_, b) ^ friends(a, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143383 (regressionFit = 4,143377, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(_, b) ^ friends(a, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143383 (regressionFit = 4,143377, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,142308 (regressionFit = 4,142302, penalties=6.060000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) ^ friends(a, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,127986 (regressionFit = 4,127980, penalties=5.9500000000000015E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) ^ friends(b, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143383 (regressionFit = 4,143377, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(_, b) ^ friends(c, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,127986 (regressionFit = 4,127980, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(_, b) ^ friends(c, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129077 (regressionFit = 4,129071, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(_, b) ^ friends(c, d) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129077 (regressionFit = 4,129071, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(d, b) ^ friends(c, d) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,128680 (regressionFit = 4,128674, penalties=5.960000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(_, b) ^ friends(c, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143383 (regressionFit = 4,143377, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(_, b) ^ friends(c, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,127986 (regressionFit = 4,127980, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129077 (regressionFit = 4,129071, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(_, b) ^ friends(d, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129077 (regressionFit = 4,129071, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(d, b) ^ friends(c, d) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,128680 (regressionFit = 4,128674, penalties=5.960000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(_, b) ^ friends(c, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,143383 (regressionFit = 4,143377, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129077 (regressionFit = 4,129071, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(d, b) ^ friends(d, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,129077 (regressionFit = 4,129071, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(d, b) ^ friends(d, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,128680 (regressionFit = 4,128674, penalties=5.960000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,142308 (regressionFit = 4,142302, penalties=6.060000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,127064 (regressionFit = 4,127058, penalties=6.060000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,128680 (regressionFit = 4,128674, penalties=5.960000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(_, b) ^ friends(_, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,128680 (regressionFit = 4,128674, penalties=5.960000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(_, b) ^ friends(_, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,128680 (regressionFit = 4,128674, penalties=5.960000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,361603 (regressionFit = 4,361598, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(_, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,361603 (regressionFit = 4,361598, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(_, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -4,361603 (regressionFit = 4,361598, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 14,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,943331 (regressionFit = 3,943325, penalties=5.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(_, b) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,943331 (regressionFit = 3,943325, penalties=5.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(_, b) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
%     Score = -3,943331 (regressionFit = 3,943325, penalties=5.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]

***** Warning: #66 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
Setting -0.007162009765733723 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,92 and has recall=0,79, precision=1,00, and F1=0,88 (using m-estimates).
 // It covers 79,2% of the positive examples, 42 of 53,
(friends(a, anon31351) ^ s_smokes(anon31351) ^ friends(anon31351, anon31459) ^ not_s_smokes(anon31459) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 42,0/53,0 pos, 0,0/0,0 neg]
% This clause covers 42 positive examples, of which 42 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 79,2% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.007162009765733723 to wgt = -0,0072 (friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a))
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model.ckpt
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for smokes.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).
stepLength_tree11(1.0).
stepLength_tree12(1.0).
stepLength_tree13(1.0).
stepLength_tree14(1.0).
stepLength_tree15(1.0).
stepLength_tree16(1.0).
stepLength_tree17(1.0).
stepLength_tree18(1.0).
stepLength_tree19(1.0).
stepLength_tree20(1.0).

logPrior(-1.8).
smokes(a, total) :- // A general accessor. 
   smokes(a, 1000000, total), !.
smokes(a, total) :- waitHere("This should not fail", smokes(a, total)).

smokes(a, treesToUse, total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(logPrior),
   getScore_smokes_tree1(a, treesToUse, total1),
   getScore_smokes_tree2(a, treesToUse, total2),
   getScore_smokes_tree3(a, treesToUse, total3),
   getScore_smokes_tree4(a, treesToUse, total4),
   getScore_smokes_tree5(a, treesToUse, total5),
   getScore_smokes_tree6(a, treesToUse, total6),
   getScore_smokes_tree7(a, treesToUse, total7),
   getScore_smokes_tree8(a, treesToUse, total8),
   getScore_smokes_tree9(a, treesToUse, total9),
   getScore_smokes_tree10(a, treesToUse, total10),
   getScore_smokes_tree11(a, treesToUse, total11),
   getScore_smokes_tree12(a, treesToUse, total12),
   getScore_smokes_tree13(a, treesToUse, total13),
   getScore_smokes_tree14(a, treesToUse, total14),
   getScore_smokes_tree15(a, treesToUse, total15),
   getScore_smokes_tree16(a, treesToUse, total16),
   getScore_smokes_tree17(a, treesToUse, total17),
   getScore_smokes_tree18(a, treesToUse, total18),
   getScore_smokes_tree19(a, treesToUse, total19),
   getScore_smokes_tree20(a, treesToUse, total20),
   total is logPrior + total1 + total2 + total3 + total4 + total5 + total6 + total7 + total8 + total9 + total10 + total11 + total12 + total13 + total14 + total15 + total16 + total17 + total18 + total19 + total20,
   !.
smokes(a, treesToUse, total) :- waitHere("This should not fail", smokes(a, treesToUse, total)).

getScore_smokes_tree1(a, treesToUse, 0.0) :- 1 > treesToUse, !.
getScore_smokes_tree1(a, treesToUse, total1) :- smokes_tree1(a, total), stepLength_tree1(stepLen), total1 is total * stepLen.

getScore_smokes_tree2(a, treesToUse, 0.0) :- 2 > treesToUse, !.
getScore_smokes_tree2(a, treesToUse, total2) :- smokes_tree2(a, total), stepLength_tree2(stepLen), total2 is total * stepLen.

getScore_smokes_tree3(a, treesToUse, 0.0) :- 3 > treesToUse, !.
getScore_smokes_tree3(a, treesToUse, total3) :- smokes_tree3(a, total), stepLength_tree3(stepLen), total3 is total * stepLen.

getScore_smokes_tree4(a, treesToUse, 0.0) :- 4 > treesToUse, !.
getScore_smokes_tree4(a, treesToUse, total4) :- smokes_tree4(a, total), stepLength_tree4(stepLen), total4 is total * stepLen.

getScore_smokes_tree5(a, treesToUse, 0.0) :- 5 > treesToUse, !.
getScore_smokes_tree5(a, treesToUse, total5) :- smokes_tree5(a, total), stepLength_tree5(stepLen), total5 is total * stepLen.

getScore_smokes_tree6(a, treesToUse, 0.0) :- 6 > treesToUse, !.
getScore_smokes_tree6(a, treesToUse, total6) :- smokes_tree6(a, total), stepLength_tree6(stepLen), total6 is total * stepLen.

getScore_smokes_tree7(a, treesToUse, 0.0) :- 7 > treesToUse, !.
getScore_smokes_tree7(a, treesToUse, total7) :- smokes_tree7(a, total), stepLength_tree7(stepLen), total7 is total * stepLen.

getScore_smokes_tree8(a, treesToUse, 0.0) :- 8 > treesToUse, !.
getScore_smokes_tree8(a, treesToUse, total8) :- smokes_tree8(a, total), stepLength_tree8(stepLen), total8 is total * stepLen.

getScore_smokes_tree9(a, treesToUse, 0.0) :- 9 > treesToUse, !.
getScore_smokes_tree9(a, treesToUse, total9) :- smokes_tree9(a, total), stepLength_tree9(stepLen), total9 is total * stepLen.

getScore_smokes_tree10(a, treesToUse, 0.0) :- 10 > treesToUse, !.
getScore_smokes_tree10(a, treesToUse, total10) :- smokes_tree10(a, total), stepLength_tree10(stepLen), total10 is total * stepLen.

getScore_smokes_tree11(a, treesToUse, 0.0) :- 11 > treesToUse, !.
getScore_smokes_tree11(a, treesToUse, total11) :- smokes_tree11(a, total), stepLength_tree11(stepLen), total11 is total * stepLen.

getScore_smokes_tree12(a, treesToUse, 0.0) :- 12 > treesToUse, !.
getScore_smokes_tree12(a, treesToUse, total12) :- smokes_tree12(a, total), stepLength_tree12(stepLen), total12 is total * stepLen.

getScore_smokes_tree13(a, treesToUse, 0.0) :- 13 > treesToUse, !.
getScore_smokes_tree13(a, treesToUse, total13) :- smokes_tree13(a, total), stepLength_tree13(stepLen), total13 is total * stepLen.

getScore_smokes_tree14(a, treesToUse, 0.0) :- 14 > treesToUse, !.
getScore_smokes_tree14(a, treesToUse, total14) :- smokes_tree14(a, total), stepLength_tree14(stepLen), total14 is total * stepLen.

getScore_smokes_tree15(a, treesToUse, 0.0) :- 15 > treesToUse, !.
getScore_smokes_tree15(a, treesToUse, total15) :- smokes_tree15(a, total), stepLength_tree15(stepLen), total15 is total * stepLen.

getScore_smokes_tree16(a, treesToUse, 0.0) :- 16 > treesToUse, !.
getScore_smokes_tree16(a, treesToUse, total16) :- smokes_tree16(a, total), stepLength_tree16(stepLen), total16 is total * stepLen.

getScore_smokes_tree17(a, treesToUse, 0.0) :- 17 > treesToUse, !.
getScore_smokes_tree17(a, treesToUse, total17) :- smokes_tree17(a, total), stepLength_tree17(stepLen), total17 is total * stepLen.

getScore_smokes_tree18(a, treesToUse, 0.0) :- 18 > treesToUse, !.
getScore_smokes_tree18(a, treesToUse, total18) :- smokes_tree18(a, total), stepLength_tree18(stepLen), total18 is total * stepLen.

getScore_smokes_tree19(a, treesToUse, 0.0) :- 19 > treesToUse, !.
getScore_smokes_tree19(a, treesToUse, total19) :- smokes_tree19(a, total), stepLength_tree19(stepLen), total19 is total * stepLen.

getScore_smokes_tree20(a, treesToUse, 0.0) :- 20 > treesToUse, !.
getScore_smokes_tree20(a, treesToUse, total20) :- smokes_tree20(a, total), stepLength_tree20(stepLen), total20 is total * stepLen.

flattenedLiteralsInThisSetOfTrees(0, []).
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 106 151 178 296 315 483 561 620 680 706
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 868,0/868,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 868,0/868,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 868,0/868,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => smokes(a).  [covers 868,0/868,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => smokes(a).  [covers 868,0/868,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => smokes(a).  [covers 868,0/868,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => smokes(a).  [covers 868,0/868,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => smokes(a).  [covers 868,0/868,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => smokes(a).  [covers 868,0/868,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => smokes(a).  [covers 868,0/868,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => smokes(a).  [covers 868,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.359,383257 (regressionFit = 8.359,383255, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.359,383257): friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ not_s_smokes(b) => smokes(a).  [covers 836,0/868,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ s_smokes(b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]' score=-8359.383257025609
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -9.236,432826 (regressionFit = 9.236,432823, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(a, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.359,383258 (regressionFit = 8.359,383255, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.312,495283 (regressionFit = 8.312,495280, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.312,495283): friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.236,432826 (regressionFit = 9.236,432823, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.312,495283 (regressionFit = 8.312,495280, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(_, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]' score=-8312.495283111164
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -9.265,171185 (regressionFit = 9.265,171181, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.168,856043 (regressionFit = 9.168,856039, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.312,495284 (regressionFit = 8.312,495280, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.290,473650 (regressionFit = 8.290,473646, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.290,473650): friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.265,171185 (regressionFit = 9.265,171181, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.312,495284 (regressionFit = 8.312,495280, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.326,561453 (regressionFit = 8.326,561449, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.168,856043 (regressionFit = 9.168,856039, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.290,473650 (regressionFit = 8.290,473646, penalties=4.040000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.326,561453 (regressionFit = 8.326,561449, penalties=3.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -5.223,059090 (regressionFit = 5.223,059086, penalties=3.830000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.223,059090): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
%     Score = -15.269,363216 (regressionFit = 15.269,363212, penalties=3.9300000000000005E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]' score=-8290.473649629444
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 13 variant children.  Sending 21 items to OPEN for evaluation and possible insertion.
% Have created 21 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(a, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(a, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.120,376897 (regressionFit = 9.120,376891, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(a, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.290,473651 (regressionFit = 8.290,473646, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.291,578353 (regressionFit = 8.291,578348, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(b, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.290,473650 (regressionFit = 8.290,473646, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.313,214514 (regressionFit = 8.313,214510, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, d) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421503 (regressionFit = 8.297,421498, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.290,473650 (regressionFit = 8.290,473646, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.313,214514 (regressionFit = 8.313,214510, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421503 (regressionFit = 8.297,421498, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.120,376897 (regressionFit = 9.120,376891, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.291,578353 (regressionFit = 8.291,578348, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421503 (regressionFit = 8.297,421498, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(_, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421503 (regressionFit = 8.297,421498, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(_, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -5.015,911636 (regressionFit = 5.015,911631, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.015,911636): friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
%     Score = -5.015,911636 (regressionFit = 5.015,911631, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
%     Score = -15.302,618272 (regressionFit = 15.302,618267, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ not_s_smokes(c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -15.302,618272 (regressionFit = 15.302,618267, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ not_s_smokes(c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]' score=-8290.473649629444
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 13 variant children.  Sending 21 items to OPEN for evaluation and possible insertion.
% Have created 21 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(a, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.120,376897 (regressionFit = 9.120,376891, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(a, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.290,473651 (regressionFit = 8.290,473646, penalties=4.940000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(b, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.290,473650 (regressionFit = 8.290,473646, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.313,214514 (regressionFit = 8.313,214510, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, d) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421503 (regressionFit = 8.297,421498, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.313,214514 (regressionFit = 8.313,214510, penalties=4.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(d, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421503 (regressionFit = 8.297,421498, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.120,376897 (regressionFit = 9.120,376891, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(_, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.291,578353 (regressionFit = 8.291,578348, penalties=5.050000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(_, b) ^ friends(_, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421503 (regressionFit = 8.297,421498, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(_, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421503 (regressionFit = 8.297,421498, penalties=4.950000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -5.015,911636 (regressionFit = 5.015,911631, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
%     Score = -5.015,911636 (regressionFit = 5.015,911631, penalties=4.840000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
%     Score = -15.302,618272 (regressionFit = 15.302,618267, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ not_s_smokes(c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -15.302,618272 (regressionFit = 15.302,618267, penalties=4.94E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]' score=-8290.473650429445
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 12 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(a, d) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.120,376897 (regressionFit = 9.120,376891, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(a, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.290,473651 (regressionFit = 8.290,473646, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(b, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.291,578353 (regressionFit = 8.291,578348, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(b, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.313,214515 (regressionFit = 8.313,214510, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(c, d) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421504 (regressionFit = 8.297,421498, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(d, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.290,473651 (regressionFit = 8.290,473646, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(d, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.313,214515 (regressionFit = 8.313,214510, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(d, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421504 (regressionFit = 8.297,421498, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(d, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.120,376897 (regressionFit = 9.120,376891, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(_, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.291,578353 (regressionFit = 8.291,578348, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(_, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421504 (regressionFit = 8.297,421498, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421504 (regressionFit = 8.297,421498, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ friends(_, d) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -5.015,911637 (regressionFit = 5.015,911631, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
%     Score = -5.015,911637 (regressionFit = 5.015,911631, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ s_smokes(d) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
%     Score = -15.302,618273 (regressionFit = 15.302,618267, penalties=5.840000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -15.302,618273 (regressionFit = 15.302,618267, penalties=5.740000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(c, b) ^ not_s_smokes(d) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]' score=-8290.473650429445
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 12 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ friends(a, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.120,376897 (regressionFit = 9.120,376891, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(a, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.290,473651 (regressionFit = 8.290,473646, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(b, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.291,578353 (regressionFit = 8.291,578348, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(b, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ friends(c, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.313,214515 (regressionFit = 8.313,214510, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ friends(c, d) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421504 (regressionFit = 8.297,421498, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ friends(c, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.313,214515 (regressionFit = 8.313,214510, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ friends(d, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421504 (regressionFit = 8.297,421498, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.120,376897 (regressionFit = 9.120,376891, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(_, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.291,578353 (regressionFit = 8.291,578348, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(_, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421504 (regressionFit = 8.297,421498, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ friends(_, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421504 (regressionFit = 8.297,421498, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -5.015,911637 (regressionFit = 5.015,911631, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
%     Score = -5.015,911637 (regressionFit = 5.015,911631, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
%     Score = -15.302,618273 (regressionFit = 15.302,618267, penalties=5.740000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, d) ^ friends(d, b) ^ not_s_smokes(c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -15.302,618273 (regressionFit = 15.302,618267, penalties=5.840000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, _) ^ friends(b, c) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]' score=-8290.473650429445
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 12 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(a, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ friends(a, d) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.120,376897 (regressionFit = 9.120,376891, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(a, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.290,473651 (regressionFit = 8.290,473646, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(b, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(c, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.313,214515 (regressionFit = 8.313,214510, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ friends(c, d) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421504 (regressionFit = 8.297,421498, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(c, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.213,169878 (regressionFit = 9.213,169873, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ friends(d, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.313,214515 (regressionFit = 8.313,214510, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ friends(d, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421504 (regressionFit = 8.297,421498, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ friends(d, _) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -9.120,376897 (regressionFit = 9.120,376891, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(_, a) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.291,578353 (regressionFit = 8.291,578348, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(_, b) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421504 (regressionFit = 8.297,421498, penalties=5.85E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ friends(_, c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -8.297,421504 (regressionFit = 8.297,421498, penalties=5.750000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ friends(_, d) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -5.015,911637 (regressionFit = 5.015,911631, penalties=5.740000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
%     Score = -5.015,911637 (regressionFit = 5.015,911631, penalties=5.640000000000001E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ s_smokes(d) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
%     Score = -15.302,618273 (regressionFit = 15.302,618267, penalties=5.840000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(_, b) ^ friends(c, b) ^ not_s_smokes(c) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]
%     Score = -15.302,618273 (regressionFit = 15.302,618267, penalties=5.740000000000002E-6) for clause:  friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(d, b) ^ friends(c, b) ^ not_s_smokes(d) => smokes(a).  [covers 699,0/868,0 pos, 0,0/0,0 neg]

***** Warning: #67 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
Setting 0.0054964524617133964 for 
 // Learned this clause on outer loop cycle #1.  It scores=-5.015,91 and has recall=0,31, precision=1,00, and F1=0,48 (using m-estimates).
 // It covers 31,3% of the positive examples, 272 of 868 (of which 14 are newly covered),
(friends(a, anon33531) ^ s_smokes(anon33531) ^ friends(anon33531, anon33639) ^ friends(anon33531, anon33711) ^ s_smokes(anon33639) => smokes(a))

% On cycle #1, the best clause found is:
%      friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ s_smokes(c) => smokes(a).  [covers 272,0/868,0 pos, 0,0/0,0 neg]
% This clause covers 272 positive examples, of which 14 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 1,6% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.0054964524617133964 to wgt = 0,0055 (friends(a, b) ^ s_smokes(b) ^ friends(b, c) ^ friends(b, _) ^ s_smokes(c) => smokes(a))
% Time taken to learn model for 'smokes': 4 minutes and 46,065 seconds.
% Saving model in: datasets\Cancer\train/models/bRDNs/smokes.model
cached groundings hit: 0
Misses: 0

% Total learning time (20 trees): 4 minutes and 46,480 seconds.
