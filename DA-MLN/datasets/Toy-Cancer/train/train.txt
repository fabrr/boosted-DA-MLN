% Running on host: DESKTOP-0S2LA4F

% Creating string handler #1.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Switching to VarIndicator = questionMarks.

% getInputArgWithDefaultValue: args=[datasets\Toy-Cancer\train/train_pos.txt, datasets\Toy-Cancer\train/train_neg.txt, datasets\Toy-Cancer\train/train_bk.txt, datasets\Toy-Cancer\train/train_facts.txt, null]
%  for N=0: args[N]=datasets\Toy-Cancer\train/train_pos.txt

% getInputArgWithDefaultValue: args=[datasets\Toy-Cancer\train/train_pos.txt, datasets\Toy-Cancer\train/train_neg.txt, datasets\Toy-Cancer\train/train_bk.txt, datasets\Toy-Cancer\train/train_facts.txt, null]
%  for N=1: args[N]=datasets\Toy-Cancer\train/train_neg.txt

% getInputArgWithDefaultValue: args=[datasets\Toy-Cancer\train/train_pos.txt, datasets\Toy-Cancer\train/train_neg.txt, datasets\Toy-Cancer\train/train_bk.txt, datasets\Toy-Cancer\train/train_facts.txt, null]
%  for N=2: args[N]=datasets\Toy-Cancer\train/train_bk.txt

% getInputArgWithDefaultValue: args=[datasets\Toy-Cancer\train/train_pos.txt, datasets\Toy-Cancer\train/train_neg.txt, datasets\Toy-Cancer\train/train_bk.txt, datasets\Toy-Cancer\train/train_facts.txt, null]
%  for N=3: args[N]=datasets\Toy-Cancer\train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% Reading background theory from dir: null
% Load '../toy_cancer_bk.txt'.

% Switching to standard-logic notation for variables; previous setting = questionMarks

% Switching to VarIndicator = lowercase.

% Switching to VarIndicator = questionMarks.
  loadThisFile: i=1 newName=precomputed1.txt sents=[(num_of_smoking_friends(?x, ?n) :- friends(?x, ?y), countUniqueBindings(friends(?x, ?z), smokes(?z), ?n))]
% LoadAllModes() called.  Currently loaded modes: []

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.

% Switching to standard-logic notation for variables; previous setting = questionMarks

% Switching to VarIndicator = lowercase.

% Switching to VarIndicator = questionMarks.
%  Have read 15 facts.

%  LearnOneClause initialized.
% Have read 4 examples from 'datasets\Toy-Cancer\train' [datasets\Toy-Cancer\train/train*].
% Have read 2 examples from 'datasets\Toy-Cancer\train' [datasets\Toy-Cancer\train/train*].

% NEW target:                 cancer(?a)
%  targetPred:                cancer/1
%  targetArgTypes:            signature = [Const], types = [+Person]
%  targets:                   [cancer(?a)]
%  targetPredicates:          [cancer/1]
%  targetArgSpecs:            [[?a[+Person]]]
%  variablesInTargets:        [[?a]]

% Precompute #1's requests: 'precomputed1.txt'
%   num_of_smoking_friends(?x, ?n) :- friends(?x, ?y), countUniqueBindings(friends(?x, ?z), smokes(?z), ?n)
% Processing precompute file: precomputed1.txt
Writing to file: C:\Users\MSI\Documents\code\BoostSRL\precomputed1.txt
% Loading: precomputed1.txt

% Switching to standard-logic notation for variables; previous setting = questionMarks

% Switching to VarIndicator = lowercase.

% Switching to VarIndicator = questionMarks.
% Read an additional 6 facts from edu.wisc.cs.will.Utils.condor.CondorFileReader@6eebc39e.

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 2 milliseconds
% Time to collect examples: 0 seconds

% Read 4 pos examples and 2 neg examples.
% Time to init learnOneClause: 35 milliseconds

% 'models/domain_size.txt' saved.
File: datasets\Toy-Cancer\train/advice.txt doesnt exist.Hence no advice loaded
% Learning 10 trees in this iteration for cancer

% Learn model for: cancer
% Kept 4 of the 4 positive examples.
% Kept 2 of the 2 negative examples.
% Dataset size: 6
Computing probabilities
prob time:3 milliseconds
No hidden examples for : cancer
Time to build dataset: 5 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

***** Warning: % Have only 6 positive examples, so cannot choose 10 of them. *****


% Have these 6 positive seeds: 0 1 2 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (1):
%    cancer(+Person)
%  Modes (40):
%    friends(+Person, -Person),
%    friends(-Person, +Person),
%    smokes(+Person),
%    num_of_smoking_friends(+Person, #Number),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber)

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for friends/2 with 12 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for friends/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for num_of_smoking_friends/2.
% [ LazyGroundClauseIndex ]  Building full index for num_of_smoking_friends/2 with 6 assertions.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,666668 (regressionFit = 0,666667, penalties=1.0100000000000003E-6) for clause:  smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,666668): smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,680083 (regressionFit = 0,680081, penalties=2.1200000000000005E-6) for clause:  friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for num_of_smoking_friends/2.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,680083 (regressionFit = 0,680081, penalties=2.1200000000000005E-6) for clause:  friends(_, a) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #1 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
Setting 0.8581489350995121 for 
 // Learned this clause on outer loop cycle #1.  It scores=-0,67 and has recall=0,49, precision=0,97, and F1=0,65 (using m-estimates).
 // It covers 50,0% of the positive examples, 3 of 6,
(smokes(a) => cancer(a))

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 50,0% of the positive examples and NaN% of the negatives.}

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #2 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #3 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #4 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #5 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #6, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #6, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #6 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #7, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #7, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #7, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #7, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #7, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #7, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #7 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #8, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #8, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #8, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #8, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #8, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #8, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #8 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #9, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #9, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #9, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #9, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #9, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #9, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #9, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #9, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #9, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #9 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #10, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #10, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #10, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #10, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #10, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #10, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #10, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #10, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #10, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #10 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #11, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #11, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #11, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #11, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #11, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #11, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #11, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #11, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #11, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #11 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #12, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #12, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #12, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #12, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #12, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #12, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #12, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #12, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #12, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #12 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #13, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #13, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #13, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #13, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #13, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #13, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #13, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #13, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #13, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #13 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #14, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #14, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #14, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #14, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #14, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #14, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #14, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #14, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #14, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #14 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #15, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #15, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #15, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #15, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #15, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #15, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #15, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #15, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #15, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #15 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #16, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #16, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #16, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #16, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #16, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #16, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #16, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #16, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #16, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #16 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #17, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #17, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #17, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #17, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #17, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #17, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #17, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #17, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #17, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #17 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #18, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #18, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #18, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #18, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #18, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #18, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #18, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #18, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #18, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #18 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #19, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #19, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #19, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #19, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #19, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #19, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #19, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #19, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #19, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #19 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #20, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #20, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #20, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #20, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #20, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #20, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #20, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #20, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #20, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #20 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (20).

% ******************************************
adding regression values
Added 0.8581489350995121 to wgt = 0,8581 (smokes(a) => cancer(a))
% Saving model in: datasets\Toy-Cancer\train/models/bRDNs/cancer.model.ckpt
% Time taken to learn 1 trees is 3,401 seconds.

% Kept 4 of the 4 positive examples.
% Kept 2 of the 2 negative examples.
% Dataset size: 6
Computing probabilities
prob time:1 milliseconds
No hidden examples for : cancer
Time to build dataset: 2 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 0 1 2 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,666668 (regressionFit = 0,666667, penalties=1.0100000000000003E-6) for clause:  smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,666668): smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,607157 (regressionFit = 0,607155, penalties=2.1200000000000005E-6) for clause:  friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,607157): friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,607157 (regressionFit = 0,607155, penalties=2.1200000000000005E-6) for clause:  friends(_, a) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #21 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
Setting 0.23982447073698485 for 
 // Learned this clause on outer loop cycle #1.  It scores=-0,61 and has recall=0,49, precision=0,97, and F1=0,65 (using m-estimates).
 // It covers 50,0% of the positive examples, 3 of 6,
(friends(a, anon6611) ^ smokes(a) => cancer(a))

% On cycle #1, the best clause found is:
%      friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 50,0% of the positive examples and NaN% of the negatives.}

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #22 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #23 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #24 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #25 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #6, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #6, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #26 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #7, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #7, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #7, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #7, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #7, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #7, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #27 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #8, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #8, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #8, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #8, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #8, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #8, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #28 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #9, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #9, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #9, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #9, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #9, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #9, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #9, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #9, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #9, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #29 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #10, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #10, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #10, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #10, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #10, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #10, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #10, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #10, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #10, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #30 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (10).

% ******************************************
adding regression values
Added 0.23982447073698485 to wgt = 0,2398 (friends(a, _) ^ smokes(a) => cancer(a))
% Saving model in: datasets\Toy-Cancer\train/models/bRDNs/cancer.model.ckpt
% Time taken to learn 2 trees is 3,860 seconds.

% Kept 4 of the 4 positive examples.
% Kept 2 of the 2 negative examples.
% Dataset size: 6
Computing probabilities
prob time:1 milliseconds
No hidden examples for : cancer
Time to build dataset: 2 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 0 1 2 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,675934 (regressionFit = 0,675933, penalties=1.0100000000000003E-6) for clause:  smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,675934): smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,612942 (regressionFit = 0,612940, penalties=2.1200000000000005E-6) for clause:  friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,612942): friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,612942 (regressionFit = 0,612940, penalties=2.1200000000000005E-6) for clause:  friends(_, a) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #31 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
Setting 0.18486247615995163 for 
 // Learned this clause on outer loop cycle #1.  It scores=-0,61 and has recall=0,49, precision=0,97, and F1=0,65 (using m-estimates).
 // It covers 50,0% of the positive examples, 3 of 6,
(friends(a, anon9401) ^ smokes(a) => cancer(a))

% On cycle #1, the best clause found is:
%      friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 50,0% of the positive examples and NaN% of the negatives.}

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #32 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(b, a) ^ friends(a, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'friends(b, a) ^ friends(a, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #33 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #34 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #35 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #6, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #6, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #6, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #36 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (6).

% ******************************************
adding regression values
Added 0.18486247615995163 to wgt = 0,1849 (friends(a, _) ^ smokes(a) => cancer(a))
% Saving model in: datasets\Toy-Cancer\train/models/bRDNs/cancer.model.ckpt
% Time taken to learn 3 trees is 4,031 seconds.

% Kept 4 of the 4 positive examples.
% Kept 2 of the 2 negative examples.
% Dataset size: 6
Computing probabilities
prob time:1 milliseconds
No hidden examples for : cancer
Time to build dataset: 2 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 0 1 2 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,694353 (regressionFit = 0,694352, penalties=1.0100000000000003E-6) for clause:  smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,694353): smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,610731 (regressionFit = 0,610729, penalties=2.1200000000000005E-6) for clause:  friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,610731): friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,610731 (regressionFit = 0,610729, penalties=2.1200000000000005E-6) for clause:  friends(_, a) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #37 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]

% The best node found: friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
Setting 0.14040387176866745 for 
 // Learned this clause on outer loop cycle #1.  It scores=-0,61 and has recall=0,49, precision=0,97, and F1=0,65 (using m-estimates).
 // It covers 50,0% of the positive examples, 3 of 6,
(friends(a, anon11097) ^ smokes(a) => cancer(a))

% On cycle #1, the best clause found is:
%      friends(a, _) ^ smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 50,0% of the positive examples and NaN% of the negatives.}

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #38 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #39 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #40 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #41 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (5).

% ******************************************
adding regression values
Added 0.14040387176866745 to wgt = 0,1404 (friends(a, _) ^ smokes(a) => cancer(a))
% Saving model in: datasets\Toy-Cancer\train/models/bRDNs/cancer.model.ckpt
% Time taken to learn 4 trees is 4,148 seconds.

% Kept 4 of the 4 positive examples.
% Kept 2 of the 2 negative examples.
% Dataset size: 6
Computing probabilities
prob time:2 milliseconds
No hidden examples for : cancer
Time to build dataset: 2 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 0 1 2 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,705707 (regressionFit = 0,705706, penalties=1.0100000000000003E-6) for clause:  smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,705707): smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7057071482750347
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -0,827698 (regressionFit = 0,827696, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,827698 (regressionFit = 0,827696, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(a) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.8276984919659289
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -0,951526 (regressionFit = 0,951523, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,827699 (regressionFit = 0,827696, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,705709 (regressionFit = 0,705706, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,951526 (regressionFit = 0,951523, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,705709 (regressionFit = 0,705706, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,827699 (regressionFit = 0,827696, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7057091682750346

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7057091682750346

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'smokes(a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.8276984919659289
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -0,705709 (regressionFit = 0,705706, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,951526 (regressionFit = 0,951523, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,705709 (regressionFit = 0,705706, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,827699 (regressionFit = 0,827696, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7057091682750346

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7057091682750346

% Consider expanding [#9 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.827699291965929

***** Warning: #42 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
Setting 0.3723926613382808 for 
 // Learned this clause on outer loop cycle #1.  It scores=-0,71 and has recall=0,49, precision=0,97, and F1=0,65 (using m-estimates).
 // It covers 50,0% of the positive examples, 3 of 6,
(smokes(a) => cancer(a))

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 50,0% of the positive examples and NaN% of the negatives.}

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

***** Warning: #43 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1] 'num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #3, bodyLen=1] 'num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

***** Warning: #44 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1] 'num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #4, bodyLen=1] 'num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

***** Warning: #45 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (4).

% ******************************************
adding regression values
Added 0.3723926613382808 to wgt = 0,3724 (smokes(a) => cancer(a))
% Saving model in: datasets\Toy-Cancer\train/models/bRDNs/cancer.model.ckpt
% Time taken to learn 5 trees is 4,394 seconds.

% Kept 4 of the 4 positive examples.
% Kept 2 of the 2 negative examples.
% Dataset size: 6
Computing probabilities
prob time:1 milliseconds
No hidden examples for : cancer
Time to build dataset: 2 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 0 1 2 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,695434 (regressionFit = 0,695433, penalties=1.0100000000000003E-6) for clause:  smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,695434): smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6954336440737184
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -0,775388 (regressionFit = 0,775386, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,775388 (regressionFit = 0,775386, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(a) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.775388480676739
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -0,853831 (regressionFit = 0,853828, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,775389 (regressionFit = 0,775386, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,695436 (regressionFit = 0,695433, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,853831 (regressionFit = 0,853828, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,695436 (regressionFit = 0,695433, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,775389 (regressionFit = 0,775386, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6954356640737185

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6954356640737185

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'smokes(a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.775388480676739
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -0,695436 (regressionFit = 0,695433, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,853831 (regressionFit = 0,853828, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,695436 (regressionFit = 0,695433, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,775389 (regressionFit = 0,775386, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6954356640737185

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6954356640737185

% Consider expanding [#9 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7753892806767391

***** Warning: #46 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
Setting 0.2941390485445486 for 
 // Learned this clause on outer loop cycle #1.  It scores=-0,70 and has recall=0,49, precision=0,97, and F1=0,65 (using m-estimates).
 // It covers 50,0% of the positive examples, 3 of 6,
(smokes(a) => cancer(a))

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 50,0% of the positive examples and NaN% of the negatives.}

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

***** Warning: #47 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1] 'num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #3, bodyLen=1] 'num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

***** Warning: #48 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (3).

% ******************************************
adding regression values
Added 0.2941390485445486 to wgt = 0,2941 (smokes(a) => cancer(a))
% Saving model in: datasets\Toy-Cancer\train/models/bRDNs/cancer.model.ckpt
% Time taken to learn 6 trees is 4,612 seconds.

% Kept 4 of the 4 positive examples.
% Kept 2 of the 2 negative examples.
% Dataset size: 6
Computing probabilities
prob time:2 milliseconds
No hidden examples for : cancer
Time to build dataset: 3 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 0 1 2 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,687703 (regressionFit = 0,687702, penalties=1.0100000000000003E-6) for clause:  smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,687703): smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6877030237204794
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -0,742209 (regressionFit = 0,742206, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,742209 (regressionFit = 0,742206, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(a) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7422085840582522
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -0,794565 (regressionFit = 0,794562, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,742209 (regressionFit = 0,742206, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,687705 (regressionFit = 0,687702, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,794565 (regressionFit = 0,794562, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,687705 (regressionFit = 0,687702, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,742209 (regressionFit = 0,742206, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6877050437204795

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6877050437204795

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'smokes(a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7422085840582522
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -0,687705 (regressionFit = 0,687702, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,794565 (regressionFit = 0,794562, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,687705 (regressionFit = 0,687702, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,742209 (regressionFit = 0,742206, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6877050437204795

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6877050437204795

% Consider expanding [#9 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7422093840582522

***** Warning: #49 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
Setting 0.23920331215821025 for 
 // Learned this clause on outer loop cycle #1.  It scores=-0,69 and has recall=0,49, precision=0,97, and F1=0,65 (using m-estimates).
 // It covers 50,0% of the positive examples, 3 of 6,
(smokes(a) => cancer(a))

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 50,0% of the positive examples and NaN% of the negatives.}

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

***** Warning: #50 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.23920331215821025 to wgt = 0,2392 (smokes(a) => cancer(a))
% Saving model in: datasets\Toy-Cancer\train/models/bRDNs/cancer.model.ckpt
% Time taken to learn 7 trees is 4,773 seconds.

% Kept 4 of the 4 positive examples.
% Kept 2 of the 2 negative examples.
% Dataset size: 6
Computing probabilities
prob time:5 milliseconds
No hidden examples for : cancer
Time to build dataset: 6 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 0 1 2 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,682327 (regressionFit = 0,682326, penalties=1.0100000000000003E-6) for clause:  smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,682327): smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6823266311419661
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -0,721105 (regressionFit = 0,721102, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,721105 (regressionFit = 0,721102, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(a) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7211045144014884
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -0,757838 (regressionFit = 0,757834, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,721105 (regressionFit = 0,721102, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,682329 (regressionFit = 0,682326, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,757838 (regressionFit = 0,757834, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,682329 (regressionFit = 0,682326, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,721105 (regressionFit = 0,721102, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6823286511419662

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6823286511419662

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'smokes(a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7211045144014884
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -0,682329 (regressionFit = 0,682326, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,757838 (regressionFit = 0,757834, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,682329 (regressionFit = 0,682326, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,721105 (regressionFit = 0,721102, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6823286511419662

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6823286511419662

% Consider expanding [#9 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7211053144014884

***** Warning: #51 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
Setting 0.19976702016900758 for 
 // Learned this clause on outer loop cycle #1.  It scores=-0,68 and has recall=0,49, precision=0,97, and F1=0,65 (using m-estimates).
 // It covers 50,0% of the positive examples, 3 of 6,
(smokes(a) => cancer(a))

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 50,0% of the positive examples and NaN% of the negatives.}

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

***** Warning: #52 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.19976702016900758 to wgt = 0,1998 (smokes(a) => cancer(a))
% Saving model in: datasets\Toy-Cancer\train/models/bRDNs/cancer.model.ckpt
% Time taken to learn 8 trees is 4,892 seconds.

% Kept 4 of the 4 positive examples.
% Kept 2 of the 2 negative examples.
% Dataset size: 6
Computing probabilities
prob time:2 milliseconds
No hidden examples for : cancer
Time to build dataset: 2 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 0 1 2 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,678611 (regressionFit = 0,678610, penalties=1.0100000000000003E-6) for clause:  smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,678611): smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.678610680860745
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -0,707281 (regressionFit = 0,707279, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,707281 (regressionFit = 0,707279, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(a) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.7072807287317339
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -0,734176 (regressionFit = 0,734173, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,707282 (regressionFit = 0,707279, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,678613 (regressionFit = 0,678610, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,734176 (regressionFit = 0,734173, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,678613 (regressionFit = 0,678610, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,707282 (regressionFit = 0,707279, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6786127008607451
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -0,707283 (regressionFit = 0,707279, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,678614 (regressionFit = 0,678610, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,667283 (regressionFit = 0,667279, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,667283): smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,678614 (regressionFit = 0,678610, penalties=3.830000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,707283 (regressionFit = 0,707279, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,707283 (regressionFit = 0,707279, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,667283 (regressionFit = 0,667279, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,707283 (regressionFit = 0,707279, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,678614 (regressionFit = 0,678610, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,678614 (regressionFit = 0,678610, penalties=3.830000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6672828650872293

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6672828650872293

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6786127008607451
%  At # nodes expanded = 7, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -0,707283 (regressionFit = 0,707279, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,678614 (regressionFit = 0,678610, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,707283 (regressionFit = 0,707279, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ friends(c, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,707283 (regressionFit = 0,707279, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,667283 (regressionFit = 0,667279, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,707283 (regressionFit = 0,707279, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ friends(_, c) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,678614 (regressionFit = 0,678610, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,678614 (regressionFit = 0,678610, penalties=3.830000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ smokes(c) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6672828650872293

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6786135008607451

***** Warning: #53 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]

% The best node found: smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
Setting 0.010468655048999272 for 
 // Learned this clause on outer loop cycle #1.  It scores=-0,67 and has recall=0,49, precision=0,97, and F1=0,65 (using m-estimates).
 // It covers 50,0% of the positive examples, 3 of 6,
(smokes(a) ^ friends(a, anon20771) ^ friends(anon20771, anon20805) ^ friends(anon20771, anon20913) => cancer(a))

% On cycle #1, the best clause found is:
%      smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 50,0% of the positive examples and NaN% of the negatives.}

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

***** Warning: #54 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.010468655048999272 to wgt = 0,0105 (smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a))
% Saving model in: datasets\Toy-Cancer\train/models/bRDNs/cancer.model.ckpt
% Time taken to learn 9 trees is 5,040 seconds.

% Kept 4 of the 4 positive examples.
% Kept 2 of the 2 negative examples.
% Dataset size: 6
Computing probabilities
prob time:14 milliseconds
No hidden examples for : cancer
Time to build dataset: 15 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 0 1 2 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,674455 (regressionFit = 0,674454, penalties=1.0100000000000003E-6) for clause:  smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,674455): smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'smokes(a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6744548275761008
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -0,694707 (regressionFit = 0,694705, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,694707 (regressionFit = 0,694705, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(a) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6947070112549582
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -0,714182 (regressionFit = 0,714179, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,694708 (regressionFit = 0,694705, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,674457 (regressionFit = 0,674454, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,714182 (regressionFit = 0,714179, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,674457 (regressionFit = 0,674454, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,694708 (regressionFit = 0,694705, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6744568475761008
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -0,694709 (regressionFit = 0,694705, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,674458 (regressionFit = 0,674454, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,666931 (regressionFit = 0,666927, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,666931): smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,674458 (regressionFit = 0,674454, penalties=3.830000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,694709 (regressionFit = 0,694705, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,694709 (regressionFit = 0,694705, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,666931 (regressionFit = 0,666927, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,694709 (regressionFit = 0,694705, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,674458 (regressionFit = 0,674454, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,674458 (regressionFit = 0,674454, penalties=3.830000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6669307319965766

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6669307319965766

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6744568475761008
%  At # nodes expanded = 7, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -0,694709 (regressionFit = 0,694705, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(a, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,674458 (regressionFit = 0,674454, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(b, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,694709 (regressionFit = 0,694705, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ friends(c, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,694709 (regressionFit = 0,694705, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(_, a) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,666931 (regressionFit = 0,666927, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,694709 (regressionFit = 0,694705, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ friends(_, c) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,674458 (regressionFit = 0,674454, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ smokes(b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -0,674458 (regressionFit = 0,674454, penalties=3.830000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ smokes(c) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 1,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(_, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6669307319965766

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]' score=-0.6744576475761008

***** Warning: #55 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]

% The best node found: smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
Setting 0.008907355974205911 for 
 // Learned this clause on outer loop cycle #1.  It scores=-0,67 and has recall=0,49, precision=0,97, and F1=0,65 (using m-estimates).
 // It covers 50,0% of the positive examples, 3 of 6,
(smokes(a) ^ friends(a, anon22473) ^ friends(anon22473, anon22507) ^ friends(anon22473, anon22615) => cancer(a))

% On cycle #1, the best clause found is:
%      smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 3,0/6,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 50,0% of the positive examples and NaN% of the negatives.}

% Have these 3 positive seeds: 3 4 5
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'cancer(_).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 8.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(a, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(a, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(a, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  friends(a, b) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  friends(a, b) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  friends(a, b) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000004E-6) for clause:  friends(a, _) ^ friends(_, a) ^ friends(_, a) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, b) ^ friends(_, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  friends(a, _) ^ friends(b, a) ^ friends(_, b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, b) ^ friends(_, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  friends(a, _) ^ friends(b, a) ^ smokes(b) => cancer(a).  [covers 6,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1500000000000008E-6) for clause:  friends(a, _) ^ friends(_, a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, b) ^ friends(_, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 2,0/6,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  friends(a, _) ^ friends(b, a) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 4,0/6,0 pos, 0,0/0,0 neg]

***** Warning: #56 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.008907355974205911 to wgt = 0,0089 (smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a))
% Saving model in: datasets\Toy-Cancer\train/models/bRDNs/cancer.model.ckpt
% Saving model in: datasets\Toy-Cancer\train/models/bRDNs/cancer.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for cancer.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).

logPrior(-1.8).
cancer(a, total) :- // A general accessor. 
   cancer(a, 1000000, total), !.
cancer(a, total) :- waitHere("This should not fail", cancer(a, total)).

cancer(a, treesToUse, total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(logPrior),
   getScore_cancer_tree1(a, treesToUse, total1),
   getScore_cancer_tree2(a, treesToUse, total2),
   getScore_cancer_tree3(a, treesToUse, total3),
   getScore_cancer_tree4(a, treesToUse, total4),
   getScore_cancer_tree5(a, treesToUse, total5),
   getScore_cancer_tree6(a, treesToUse, total6),
   getScore_cancer_tree7(a, treesToUse, total7),
   getScore_cancer_tree8(a, treesToUse, total8),
   getScore_cancer_tree9(a, treesToUse, total9),
   getScore_cancer_tree10(a, treesToUse, total10),
   total is logPrior + total1 + total2 + total3 + total4 + total5 + total6 + total7 + total8 + total9 + total10,
   !.
cancer(a, treesToUse, total) :- waitHere("This should not fail", cancer(a, treesToUse, total)).

getScore_cancer_tree1(a, treesToUse, 0.0) :- 1 > treesToUse, !.
getScore_cancer_tree1(a, treesToUse, total1) :- cancer_tree1(a, total), stepLength_tree1(stepLen), total1 is total * stepLen.

getScore_cancer_tree2(a, treesToUse, 0.0) :- 2 > treesToUse, !.
getScore_cancer_tree2(a, treesToUse, total2) :- cancer_tree2(a, total), stepLength_tree2(stepLen), total2 is total * stepLen.

getScore_cancer_tree3(a, treesToUse, 0.0) :- 3 > treesToUse, !.
getScore_cancer_tree3(a, treesToUse, total3) :- cancer_tree3(a, total), stepLength_tree3(stepLen), total3 is total * stepLen.

getScore_cancer_tree4(a, treesToUse, 0.0) :- 4 > treesToUse, !.
getScore_cancer_tree4(a, treesToUse, total4) :- cancer_tree4(a, total), stepLength_tree4(stepLen), total4 is total * stepLen.

getScore_cancer_tree5(a, treesToUse, 0.0) :- 5 > treesToUse, !.
getScore_cancer_tree5(a, treesToUse, total5) :- cancer_tree5(a, total), stepLength_tree5(stepLen), total5 is total * stepLen.

getScore_cancer_tree6(a, treesToUse, 0.0) :- 6 > treesToUse, !.
getScore_cancer_tree6(a, treesToUse, total6) :- cancer_tree6(a, total), stepLength_tree6(stepLen), total6 is total * stepLen.

getScore_cancer_tree7(a, treesToUse, 0.0) :- 7 > treesToUse, !.
getScore_cancer_tree7(a, treesToUse, total7) :- cancer_tree7(a, total), stepLength_tree7(stepLen), total7 is total * stepLen.

getScore_cancer_tree8(a, treesToUse, 0.0) :- 8 > treesToUse, !.
getScore_cancer_tree8(a, treesToUse, total8) :- cancer_tree8(a, total), stepLength_tree8(stepLen), total8 is total * stepLen.

getScore_cancer_tree9(a, treesToUse, 0.0) :- 9 > treesToUse, !.
getScore_cancer_tree9(a, treesToUse, total9) :- cancer_tree9(a, total), stepLength_tree9(stepLen), total9 is total * stepLen.

getScore_cancer_tree10(a, treesToUse, 0.0) :- 10 > treesToUse, !.
getScore_cancer_tree10(a, treesToUse, total10) :- cancer_tree10(a, total), stepLength_tree10(stepLen), total10 is total * stepLen.

flattenedLiteralsInThisSetOfTrees(0, []).
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 3 4 10 12 13 17
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 60,0/60,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 60,0/60,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'cancer(_).  [covers 60,0/60,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 60,0/60,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 60,0/60,0 pos, 0,0/0,0 neg]
%     Score = -78,712624 (regressionFit = 78,712623, penalties=1.0100000000000003E-6) for clause:  smokes(a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -78,712624): smokes(a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -224,250281 (regressionFit = 224,250280, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 40,0/60,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'smokes(a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-78.71262423674305
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -148,777065 (regressionFit = 148,777063, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(a, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -148,777065 (regressionFit = 148,777063, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(_, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -66,763836 (regressionFit = 66,763834, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -66,763836): smokes(a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -70,151606 (regressionFit = 70,151604, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(a) ^ friends(a, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-148.7770649149854
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -232,074653 (regressionFit = 232,074650, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -148,777066 (regressionFit = 148,777063, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -78,712626 (regressionFit = 78,712623, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -232,074653 (regressionFit = 232,074650, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -78,712626 (regressionFit = 78,712623, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -148,777066 (regressionFit = 148,777063, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -71,244536 (regressionFit = 71,244533, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -66,690880 (regressionFit = 66,690876, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -66,690880): smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]
%     Score = -71,244536 (regressionFit = 71,244533, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -66,690879 (regressionFit = 66,690876, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -66,690879): smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-78.71262625674339
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -148,777067 (regressionFit = 148,777063, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(a, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -78,712627 (regressionFit = 78,712623, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -68,590962 (regressionFit = 68,590958, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -78,712627 (regressionFit = 78,712623, penalties=3.830000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -148,777067 (regressionFit = 148,777063, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -148,777067 (regressionFit = 148,777063, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -68,590962 (regressionFit = 68,590958, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -148,777067 (regressionFit = 148,777063, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -78,712627 (regressionFit = 78,712623, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -78,712627 (regressionFit = 78,712623, penalties=3.830000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -73,197518 (regressionFit = 73,197514, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -71,621581 (regressionFit = 71,621577, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]
%     Score = -73,197518 (regressionFit = 73,197514, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -71,621581 (regressionFit = 71,621577, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]
%     Score = -73,197518 (regressionFit = 73,197514, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -71,621581 (regressionFit = 71,621577, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-68.59096183965165

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-68.59096183965165

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-78.71262625674339
%  At # nodes expanded = 7, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -148,777067 (regressionFit = 148,777063, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(a, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -78,712627 (regressionFit = 78,712623, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(b, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -148,777067 (regressionFit = 148,777063, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ friends(c, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -148,777067 (regressionFit = 148,777063, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(_, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -68,590962 (regressionFit = 68,590958, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(_, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -148,777067 (regressionFit = 148,777063, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ friends(_, c) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -78,712627 (regressionFit = 78,712623, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ smokes(b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -78,712627 (regressionFit = 78,712623, penalties=3.830000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ smokes(c) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -73,197518 (regressionFit = 73,197514, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -71,621581 (regressionFit = 71,621577, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(a, 2) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]
%     Score = -73,197518 (regressionFit = 73,197514, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -71,621581 (regressionFit = 71,621577, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]
%     Score = -73,197518 (regressionFit = 73,197514, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -71,621581 (regressionFit = 71,621577, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ num_of_smoking_friends(c, 2) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(_, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-68.59096183965165

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-78.71262705674339

***** Warning: #57 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]

% The best node found: smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]
Setting 0.568690380650164 for 
 // Learned this clause on outer loop cycle #1.  It scores=-66,69 and has recall=0,17, precision=0,99, and F1=0,28 (using m-estimates).
 // It covers 16,7% of the positive examples, 10 of 60 (of which 1 are newly covered),
(smokes(a) ^ friends(a, anon24175) ^ num_of_smoking_friends(anon24175, 1) => cancer(a))

% On cycle #1, the best clause found is:
%      smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a).  [covers 10,0/60,0 pos, 0,0/0,0 neg]
% This clause covers 10 positive examples, of which 1 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 1,7% of the positive examples and NaN% of the negatives.}

% Have these 6 positive seeds: 3 6 9 26 28 54
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = cancer(a)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  cancer(_).  [covers 60,0/60,0 pos, 0,0/0,0 neg]
% Most-general root: cancer(_).  [covers 60,0/60,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'cancer(_).  [covers 60,0/60,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(a, _) => cancer(a).  [covers 60,0/60,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  friends(_, a) => cancer(a).  [covers 60,0/60,0 pos, 0,0/0,0 neg]
%     Score = -396,243498 (regressionFit = 396,243497, penalties=1.0100000000000003E-6) for clause:  smokes(a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -396,243498): smokes(a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -744,612200 (regressionFit = 744,612199, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 2) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  num_of_smoking_friends(a, 1) => cancer(a).  [covers 40,0/60,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'smokes(a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-396.2434979139728
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -444,747355 (regressionFit = 444,747353, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(a, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -444,747355 (regressionFit = 444,747353, penalties=2.1200000000000005E-6) for clause:  smokes(a) ^ friends(_, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -87,949086 (regressionFit = 87,949083, penalties=2.0300000000000005E-6) for clause:  smokes(a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -87,949086): smokes(a) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1:2] 'smokes(a) ^ friends(a, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-444.7473553226132
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -422,201319 (regressionFit = 422,201316, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(a, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -444,747356 (regressionFit = 444,747353, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -396,243500 (regressionFit = 396,243497, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -422,201319 (regressionFit = 422,201316, penalties=3.130000000000001E-6) for clause:  smokes(a) ^ friends(a, _) ^ friends(_, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -396,243500 (regressionFit = 396,243497, penalties=3.0300000000000002E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -444,747356 (regressionFit = 444,747353, penalties=2.920000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ smokes(b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -86,020874 (regressionFit = 86,020871, penalties=3.14E-6) for clause:  smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -86,020874): smokes(a) ^ friends(a, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -86,020874 (regressionFit = 86,020871, penalties=3.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -86,020874): smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(b, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-396.2434999339728
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -444,747357 (regressionFit = 444,747353, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(a, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -396,243501 (regressionFit = 396,243497, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -309,025655 (regressionFit = 309,025651, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -396,243501 (regressionFit = 396,243497, penalties=3.830000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -444,747357 (regressionFit = 444,747353, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(c, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -444,747357 (regressionFit = 444,747353, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(_, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -309,025655 (regressionFit = 309,025651, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -444,747357 (regressionFit = 444,747353, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(_, c) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -396,243501 (regressionFit = 396,243497, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ smokes(b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -396,243501 (regressionFit = 396,243497, penalties=3.830000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ smokes(c) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -83,746835 (regressionFit = 83,746831, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -83,746835): smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -83,746835 (regressionFit = 83,746831, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, _) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -83,746835 (regressionFit = 83,746831, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -83,746835): smokes(a) ^ friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(b, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-309.0256553172739

% Consider expanding [#6 of outerLoop #2, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(b, _) ^ friends(_, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-309.0256553172739

% Consider expanding [#7 of outerLoop #2, bodyLen=2:3] 'smokes(a) ^ friends(a, b) ^ friends(_, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-396.2434999339728
%  At # nodes expanded = 7, |OPEN| = 7.  Pruned 7 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -444,747357 (regressionFit = 444,747353, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(a, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -396,243501 (regressionFit = 396,243497, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(b, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -444,747357 (regressionFit = 444,747353, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ friends(c, _) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -444,747357 (regressionFit = 444,747353, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(_, a) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -309,025655 (regressionFit = 309,025651, penalties=4.040000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(_, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -444,747357 (regressionFit = 444,747353, penalties=3.94E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ friends(_, c) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -396,243501 (regressionFit = 396,243497, penalties=3.9300000000000005E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ smokes(b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -396,243501 (regressionFit = 396,243497, penalties=3.830000000000001E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ smokes(c) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]
%     Score = -83,746835 (regressionFit = 83,746831, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(a, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -83,746835 (regressionFit = 83,746831, penalties=4.05E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(_, b) ^ num_of_smoking_friends(b, 2) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
%     Score = -83,746835 (regressionFit = 83,746831, penalties=3.95E-6) for clause:  smokes(a) ^ friends(a, b) ^ friends(c, b) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(_, b) ^ friends(_, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-309.0256553172739

% Consider expanding [#9 of outerLoop #2, bodyLen=3:4] 'smokes(a) ^ friends(a, b) ^ friends(b, c) ^ friends(c, b) => cancer(a).  [covers 30,0/60,0 pos, 0,0/0,0 neg]' score=-396.24350073397284

***** Warning: #58 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) ^ friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]

% The best node found: smokes(a) ^ friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
Setting 0.6031614839877871 for 
 // Learned this clause on outer loop cycle #2.  It scores=-83,75 and has recall=0,33, precision=1,00, and F1=0,50 (using m-estimates).
 // It covers 33,3% of the positive examples, 20 of 60 (of which 2 are newly covered),
 // So far 3 (5,0%) of the positive examples have been covered.
(smokes(a) ^ friends(a, anon24863) ^ friends(anon24863, anon24895) ^ num_of_smoking_friends(anon24895, 1) => cancer(a))

% On cycle #2, the best clause found is:
%      smokes(a) ^ friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a).  [covers 20,0/60,0 pos, 0,0/0,0 neg]
% This clause covers 20 positive examples, of which 2 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 5,0% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.568690380650164 to wgt = 0,5687 (smokes(a) ^ friends(a, b) ^ num_of_smoking_friends(b, 1) => cancer(a))
Added 0.6031614839877871 to wgt = 0,6032 (smokes(a) ^ friends(a, b) ^ friends(b, c) ^ num_of_smoking_friends(c, 1) => cancer(a))
% Time taken to learn model for 'cancer': 5,371 seconds.
% Saving model in: datasets\Toy-Cancer\train/models/bRDNs/cancer.model
cached groundings hit: 0
Misses: 0

% Total learning time (10 trees): 6,413 seconds.
