% Running on host: DESKTOP-0S2LA4F

% Creating string handler #1.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Switching to VarIndicator = questionMarks.

% getInputArgWithDefaultValue: args=[smokegen_smokes\smokes_65_7\train/train_pos.txt, smokegen_smokes\smokes_65_7\train/train_neg.txt, smokegen_smokes\smokes_65_7\train/train_bk.txt, smokegen_smokes\smokes_65_7\train/train_facts.txt, null]
%  for N=0: args[N]=smokegen_smokes\smokes_65_7\train/train_pos.txt

% getInputArgWithDefaultValue: args=[smokegen_smokes\smokes_65_7\train/train_pos.txt, smokegen_smokes\smokes_65_7\train/train_neg.txt, smokegen_smokes\smokes_65_7\train/train_bk.txt, smokegen_smokes\smokes_65_7\train/train_facts.txt, null]
%  for N=1: args[N]=smokegen_smokes\smokes_65_7\train/train_neg.txt

% getInputArgWithDefaultValue: args=[smokegen_smokes\smokes_65_7\train/train_pos.txt, smokegen_smokes\smokes_65_7\train/train_neg.txt, smokegen_smokes\smokes_65_7\train/train_bk.txt, smokegen_smokes\smokes_65_7\train/train_facts.txt, null]
%  for N=2: args[N]=smokegen_smokes\smokes_65_7\train/train_bk.txt

% getInputArgWithDefaultValue: args=[smokegen_smokes\smokes_65_7\train/train_pos.txt, smokegen_smokes\smokes_65_7\train/train_neg.txt, smokegen_smokes\smokes_65_7\train/train_bk.txt, smokegen_smokes\smokes_65_7\train/train_facts.txt, null]
%  for N=3: args[N]=smokegen_smokes\smokes_65_7\train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% Reading background theory from dir: null
% Load '../smoke_bk.txt'.

***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Person] for 'recursive_smokes'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Person] for 'not_smokes'. *****

% LoadAllModes() called.  Currently loaded modes: []

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 1.938 facts.

%  LearnOneClause initialized.
% Have read 0 examples from 'smokegen_smokes\smokes_65_7\train' [smokegen_smokes\smokes_65_7\train/train*].
% Have read 0 examples from 'smokegen_smokes\smokes_65_7\train' [smokegen_smokes\smokes_65_7\train/train*].

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.

***** Warning: targetPredicates=null *****


***** Warning: targetArgSpecs=null *****

% Time to collect constants: 28 milliseconds
% Time to collect examples: 0 seconds

% Read 0 pos examples and 0 neg examples.
% Time to init learnOneClause: 33 milliseconds

% 'models/domain_sizes.txt' saved.
File: smokegen_smokes\smokes_65_7\train/advice.txt doesnt exist.Hence no advice loaded
% Learning 20 trees in this iteration for smokes

% Learn model for: smokes
% Kept 46 of the 46 positive examples.
% Kept 94 of the 101 negative examples.
% Dataset size: 140
Computing probabilities
prob time:2 milliseconds
No hidden examples for : smokes
Time to build dataset: 7 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 3 33 45 77 80 87 90 94 114 134
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (0):
%    
%  Modes (40):
%    friends(+Person, -Person),
%    friends(-Person, +Person),
%    recursive_smokes(`Person),
%    not_smokes(`Person),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber)

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 140,0/140,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for friends/2 with 1.644 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for friends/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for friends/2.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for recursive_smokes/1 with 46 assertions.
% [ LazyGroundClauseIndex ]  Building full index for not_smokes/1 with 101 assertions.
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -21,552012 (regressionFit = 21,552010, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/140,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -21,552012): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 140,0/140,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -21,552012 (regressionFit = 21,552010, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), recursive_smokes(B).  [covers 128,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), not_smokes(B).  [covers 140,0/140,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(_, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(_, B).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(B, A), friends(B, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #1 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/140,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/140,0 pos, 0,0/0,0 neg]
Setting 0.07203608162795246 for 
 // Learned this clause on outer loop cycle #1.  It scores=-21,55 and has recall=0,91, precision=1,00, and F1=0,95 (using m-estimates).
 // It covers 91,4% of the positive examples, 128 of 140,
(smokes(D) :- friends(D, Anon1089), recursive_smokes(Anon1089))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/140,0 pos, 0,0/0,0 neg]
% This clause covers 128 positive examples, of which 128 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 91,4% of the positive examples and NaN% of the negatives.}

% ******************************************


% ******************************************
adding regression values
Added 0.07203608162795246 to wgt = 0,0720 (smokes(A) :- friends(A, B), recursive_smokes(B))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 1 trees is 1,061 seconds.

% Kept 46 of the 46 positive examples.
% Kept 93 of the 101 negative examples.
% Dataset size: 139
Computing probabilities
prob time:15 milliseconds
No hidden examples for : smokes
Time to build dataset: 19 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 23 25 71 79 80 81
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 139,0/139,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,791047 (regressionFit = 20,791045, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,791047): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 139,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,791047 (regressionFit = 20,791045, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), recursive_smokes(B).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), not_smokes(B).  [covers 139,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(_, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(_, B).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(B, A), friends(B, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #2 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/139,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
Setting 0.06483450356205538 for 
 // Learned this clause on outer loop cycle #1.  It scores=-20,79 and has recall=0,92, precision=1,00, and F1=0,96 (using m-estimates).
 // It covers 92,1% of the positive examples, 128 of 139,
(smokes(D) :- friends(D, Anon1329), recursive_smokes(Anon1329))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
% This clause covers 128 positive examples, of which 128 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 92,1% of the positive examples and NaN% of the negatives.}

% ******************************************


% ******************************************
adding regression values
Added 0.06483450356205538 to wgt = 0,0648 (smokes(A) :- friends(A, B), recursive_smokes(B))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 2 trees is 1,634 seconds.

% Kept 46 of the 46 positive examples.
% Kept 92 of the 101 negative examples.
% Dataset size: 138
Computing probabilities
prob time:19 milliseconds
No hidden examples for : smokes
Time to build dataset: 21 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 11 21 22 31 32 46 54 95 133
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,094799 (regressionFit = 20,094797, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,094799): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,094799 (regressionFit = 20,094797, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), recursive_smokes(B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), not_smokes(B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(_, B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(B, A), friends(B, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #3 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
Setting 0.05509312195671303 for 
 // Learned this clause on outer loop cycle #1.  It scores=-20,09 and has recall=0,91, precision=1,00, and F1=0,95 (using m-estimates).
 // It covers 91,3% of the positive examples, 126 of 138,
(smokes(D) :- friends(D, Anon1569), recursive_smokes(Anon1569))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
% This clause covers 126 positive examples, of which 126 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 91,3% of the positive examples and NaN% of the negatives.}

% ******************************************


% ******************************************
adding regression values
Added 0.05509312195671303 to wgt = 0,0551 (smokes(A) :- friends(A, B), recursive_smokes(B))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 3 trees is 2,131 seconds.

% Kept 46 of the 46 positive examples.
% Kept 94 of the 101 negative examples.
% Dataset size: 140
Computing probabilities
prob time:31 milliseconds
No hidden examples for : smokes
Time to build dataset: 33 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 10 11 67 92 94 100 108 119 137
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 140,0/140,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -21,379789 (regressionFit = 21,379787, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/140,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -21,379789): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 140,0/140,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -21,379789 (regressionFit = 21,379787, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), recursive_smokes(B).  [covers 128,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), not_smokes(B).  [covers 140,0/140,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(_, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(_, B).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(B, A), friends(B, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #4 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/140,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/140,0 pos, 0,0/0,0 neg]
Setting 0.03743485337411186 for 
 // Learned this clause on outer loop cycle #1.  It scores=-21,38 and has recall=0,91, precision=1,00, and F1=0,95 (using m-estimates).
 // It covers 91,4% of the positive examples, 128 of 140,
(smokes(D) :- friends(D, Anon1809), recursive_smokes(Anon1809))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/140,0 pos, 0,0/0,0 neg]
% This clause covers 128 positive examples, of which 128 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 91,4% of the positive examples and NaN% of the negatives.}

% ******************************************


% ******************************************
adding regression values
Added 0.03743485337411186 to wgt = 0,0374 (smokes(A) :- friends(A, B), recursive_smokes(B))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 4 trees is 2,544 seconds.

% Kept 46 of the 46 positive examples.
% Kept 91 of the 101 negative examples.
% Dataset size: 137
Computing probabilities
prob time:26 milliseconds
No hidden examples for : smokes
Time to build dataset: 27 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 3 18 19 32 72 73 87 92 106
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 137,0/137,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 137,0/137,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 137,0/137,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 137,0/137,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,488959 (regressionFit = 21,488957, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -21,488959): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 137,0/137,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]' score=-21.488958561939366
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -22,089768 (regressionFit = 22,089765, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,488959 (regressionFit = 21,488957, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,676181 (regressionFit = 21,676178, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -22,089768 (regressionFit = 22,089765, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,676181 (regressionFit = 21,676178, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 128,0/137,0 pos, 0,0/0,0 neg]' score=-21.488959461939366

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]' score=-21.67618069342917

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]' score=-21.67618069342917

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]' score=-22.08976754253962

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 128,0/137,0 pos, 0,0/0,0 neg]' score=-22.08976754253962

% Consider expanding [#9 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 137,0/137,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,488959 (regressionFit = 21,488957, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), recursive_smokes(B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), not_smokes(B).  [covers 137,0/137,0 pos, 0,0/0,0 neg]

***** Warning: #5 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
Setting 0.027949897961624275 for 
 // Learned this clause on outer loop cycle #1.  It scores=-21,49 and has recall=0,93, precision=1,00, and F1=0,97 (using m-estimates).
 // It covers 93,4% of the positive examples, 128 of 137,
(smokes(D) :- friends(D, Anon2049), recursive_smokes(Anon2049))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
% This clause covers 128 positive examples, of which 128 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 93,4% of the positive examples and NaN% of the negatives.}

% ******************************************


% ******************************************
adding regression values
Added 0.027949897961624275 to wgt = 0,0279 (smokes(A) :- friends(A, B), recursive_smokes(B))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 5 trees is 2,968 seconds.

% Kept 46 of the 46 positive examples.
% Kept 89 of the 101 negative examples.
% Dataset size: 135
Computing probabilities
prob time:25 milliseconds
No hidden examples for : smokes
Time to build dataset: 27 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 19 37 43 56 63 99 104
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 135,0/135,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 135,0/135,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 135,0/135,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 135,0/135,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 135,0/135,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 135,0/135,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 135,0/135,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 135,0/135,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 135,0/135,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 135,0/135,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 135,0/135,0 pos, 0,0/0,0 neg]
%     Score = -19,851607 (regressionFit = 19,851605, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 124,0/135,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,851607): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 124,0/135,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 135,0/135,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 124,0/135,0 pos, 0,0/0,0 neg]' score=-19.8516071338661
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,301884 (regressionFit = 20,301881, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 124,0/135,0 pos, 0,0/0,0 neg]
%     Score = -19,851608 (regressionFit = 19,851605, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 124,0/135,0 pos, 0,0/0,0 neg]
%     Score = -20,004391 (regressionFit = 20,004388, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 124,0/135,0 pos, 0,0/0,0 neg]
%     Score = -20,301884 (regressionFit = 20,301881, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 124,0/135,0 pos, 0,0/0,0 neg]
%     Score = -20,004391 (regressionFit = 20,004388, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 124,0/135,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 124,0/135,0 pos, 0,0/0,0 neg]' score=-19.8516080338661

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 124,0/135,0 pos, 0,0/0,0 neg]' score=-20.004390925778438

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 124,0/135,0 pos, 0,0/0,0 neg]' score=-20.004390925778438

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 124,0/135,0 pos, 0,0/0,0 neg]' score=-20.301884401597327

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 124,0/135,0 pos, 0,0/0,0 neg]' score=-20.301884401597327

% Consider expanding [#9 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 135,0/135,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 135,0/135,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 135,0/135,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 135,0/135,0 pos, 0,0/0,0 neg]
%     Score = -19,851607 (regressionFit = 19,851605, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), recursive_smokes(B).  [covers 124,0/135,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), not_smokes(B).  [covers 135,0/135,0 pos, 0,0/0,0 neg]

***** Warning: #6 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 124,0/135,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 124,0/135,0 pos, 0,0/0,0 neg]
Setting 0.027506319091492162 for 
 // Learned this clause on outer loop cycle #1.  It scores=-19,85 and has recall=0,92, precision=1,00, and F1=0,96 (using m-estimates).
 // It covers 91,9% of the positive examples, 124 of 135,
(smokes(D) :- friends(D, Anon2347), recursive_smokes(Anon2347))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 124,0/135,0 pos, 0,0/0,0 neg]
% This clause covers 124 positive examples, of which 124 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 91,9% of the positive examples and NaN% of the negatives.}

% ******************************************


% ******************************************
adding regression values
Added 0.027506319091492162 to wgt = 0,0275 (smokes(A) :- friends(A, B), recursive_smokes(B))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 6 trees is 3,354 seconds.

% Kept 46 of the 46 positive examples.
% Kept 92 of the 101 negative examples.
% Dataset size: 138
Computing probabilities
prob time:29 milliseconds
No hidden examples for : smokes
Time to build dataset: 31 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 5 6 25 52 58 63 83 107 124
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,184211 (regressionFit = 20,184209, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,184211): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-20.184210549010135
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,486678 (regressionFit = 20,486675, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,184211 (regressionFit = 20,184209, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,267779 (regressionFit = 20,267776, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,486678 (regressionFit = 20,486675, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,267779 (regressionFit = 20,267776, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-20.184211449010135

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-20.267778749338124

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-20.267778749338124

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-20.486678050823794

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-20.486678050823794

% Consider expanding [#9 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,184211 (regressionFit = 20,184209, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), not_smokes(B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

***** Warning: #7 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
Setting 0.01966002532090043 for 
 // Learned this clause on outer loop cycle #1.  It scores=-20,18 and has recall=0,92, precision=1,00, and F1=0,96 (using m-estimates).
 // It covers 92,0% of the positive examples, 127 of 138,
(smokes(D) :- friends(D, Anon2645), recursive_smokes(Anon2645))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
% This clause covers 127 positive examples, of which 127 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 92,0% of the positive examples and NaN% of the negatives.}

% ******************************************


% ******************************************
adding regression values
Added 0.01966002532090043 to wgt = 0,0197 (smokes(A) :- friends(A, B), recursive_smokes(B))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 7 trees is 3,800 seconds.

% Kept 46 of the 46 positive examples.
% Kept 92 of the 101 negative examples.
% Dataset size: 138
Computing probabilities
prob time:40 milliseconds
No hidden examples for : smokes
Time to build dataset: 42 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 40 43 58 68 77 95 99 109 117 122
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,978135 (regressionFit = 20,978133, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,978135): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-20.978135102035537
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -21,185412 (regressionFit = 21,185409, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,978136 (regressionFit = 20,978133, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -21,041202 (regressionFit = 21,041199, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -21,185412 (regressionFit = 21,185409, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -21,041202 (regressionFit = 21,041199, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-20.978136002035537

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-21.0412018088439

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-21.0412018088439

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-21.185411696324934

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-21.185411696324934

% Consider expanding [#9 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,978135 (regressionFit = 20,978133, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), not_smokes(B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

***** Warning: #8 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
Setting 0.01164046847042208 for 
 // Learned this clause on outer loop cycle #1.  It scores=-20,98 and has recall=0,92, precision=1,00, and F1=0,96 (using m-estimates).
 // It covers 92,0% of the positive examples, 127 of 138,
(smokes(D) :- friends(D, Anon2943), recursive_smokes(Anon2943))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
% This clause covers 127 positive examples, of which 127 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 92,0% of the positive examples and NaN% of the negatives.}

% ******************************************


% ******************************************
adding regression values
Added 0.01164046847042208 to wgt = 0,0116 (smokes(A) :- friends(A, B), recursive_smokes(B))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 8 trees is 4,209 seconds.

% Kept 46 of the 46 positive examples.
% Kept 92 of the 101 negative examples.
% Dataset size: 138
Computing probabilities
prob time:34 milliseconds
No hidden examples for : smokes
Time to build dataset: 35 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 9 17 18 33 47 60 71 75 88 110
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,322487 (regressionFit = 20,322485, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,322487): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]' score=-20.322486573076908
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,515429 (regressionFit = 20,515426, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,322487 (regressionFit = 20,322485, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,385804 (regressionFit = 20,385801, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,515429 (regressionFit = 20,515426, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,385804 (regressionFit = 20,385801, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 126,0/138,0 pos, 0,0/0,0 neg]' score=-20.322487473076908
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,515430 (regressionFit = 20,515426, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(A, _).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,385805 (regressionFit = 20,385801, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(B, _).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,515430 (regressionFit = 20,515426, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, A).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,385805 (regressionFit = 20,385801, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 126,0/138,0 pos, 0,0/0,0 neg]' score=-20.385803811105035
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,113939 (regressionFit = 20,113935, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 111,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,113939): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 111,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,560546 (regressionFit = 20,560542, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(A, _).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,450240 (regressionFit = 20,450236, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(B, _).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,113939 (regressionFit = 20,113935, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, A).  [covers 111,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,385805 (regressionFit = 20,385801, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,401808 (regressionFit = 20,401804, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, _).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,560546 (regressionFit = 20,560542, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(_, A).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,450240 (regressionFit = 20,450236, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(_, B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,401808 (regressionFit = 20,401804, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(_, C).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -19,941506 (regressionFit = 19,941502, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,941506): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,652657 (regressionFit = 20,652653, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), not_smokes(C).  [covers 126,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 111,0/138,0 pos, 0,0/0,0 neg]' score=-20.11393880525098

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, A).  [covers 111,0/138,0 pos, 0,0/0,0 neg]' score=-20.11393880525098

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]' score=-20.385803811105035
%  At # nodes expanded = 8, |OPEN| = 7.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,113939 (regressionFit = 20,113935, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), friends(A, C).  [covers 111,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,560546 (regressionFit = 20,560542, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B), friends(A, _).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,113939 (regressionFit = 20,113935, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), friends(C, A).  [covers 111,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,401808 (regressionFit = 20,401804, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), friends(C, _).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,560546 (regressionFit = 20,560542, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B), friends(_, A).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,450240 (regressionFit = 20,450236, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B), friends(_, B).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,401808 (regressionFit = 20,401804, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), friends(_, C).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -19,941506 (regressionFit = 19,941502, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), recursive_smokes(C).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,652657 (regressionFit = 20,652653, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), not_smokes(C).  [covers 126,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), friends(A, C).  [covers 111,0/138,0 pos, 0,0/0,0 neg]' score=-20.11393880525098

***** Warning: #9 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 126,0/138,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
Setting 0.002598651827941684 for 
 // Learned this clause on outer loop cycle #1.  It scores=-19,94 and has recall=0,91, precision=1,00, and F1=0,95 (using m-estimates).
 // It covers 91,3% of the positive examples, 126 of 138,
(smokes(D) :- friends(D, Anon3241), recursive_smokes(Anon3241), friends(Anon3241, Anon3349), recursive_smokes(Anon3349))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 126,0/138,0 pos, 0,0/0,0 neg]
% This clause covers 126 positive examples, of which 126 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 91,3% of the positive examples and NaN% of the negatives.}

% ******************************************


% ******************************************
adding regression values
Added 0.002598651827941684 to wgt = 0,0026 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 9 trees is 6,260 seconds.

% Kept 46 of the 46 positive examples.
% Kept 95 of the 101 negative examples.
% Dataset size: 141
Computing probabilities
prob time:47 milliseconds
No hidden examples for : smokes
Time to build dataset: 47 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 5 9 43 44 52 67 91 121 139
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 141,0/141,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 141,0/141,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 141,0/141,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 141,0/141,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,604255 (regressionFit = 20,604253, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,604255): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 141,0/141,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 129,0/141,0 pos, 0,0/0,0 neg]' score=-20.604255347991668
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,678883 (regressionFit = 20,678880, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,604256 (regressionFit = 20,604253, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,627768 (regressionFit = 20,627765, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,678883 (regressionFit = 20,678880, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,627768 (regressionFit = 20,627765, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 129,0/141,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 129,0/141,0 pos, 0,0/0,0 neg]' score=-20.604256247991668
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,678884 (regressionFit = 20,678880, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(A, _).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,627769 (regressionFit = 20,627765, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(B, _).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,678884 (regressionFit = 20,678880, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, A).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,627769 (regressionFit = 20,627765, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, B).  [covers 129,0/141,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 129,0/141,0 pos, 0,0/0,0 neg]' score=-20.627768281866487
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,435999 (regressionFit = 20,435995, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 115,0/141,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,435999): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 115,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,692583 (regressionFit = 20,692579, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(A, _).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,651513 (regressionFit = 20,651509, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(B, _).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,435999 (regressionFit = 20,435995, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, A).  [covers 115,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,627769 (regressionFit = 20,627765, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, B).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,625863 (regressionFit = 20,625859, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, _).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,692583 (regressionFit = 20,692579, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(_, A).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,651513 (regressionFit = 20,651509, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(_, B).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,625863 (regressionFit = 20,625859, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(_, C).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,393694 (regressionFit = 20,393690, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,393694): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,709191 (regressionFit = 20,709187, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), not_smokes(C).  [covers 129,0/141,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 115,0/141,0 pos, 0,0/0,0 neg]' score=-20.43599880285811

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, A).  [covers 115,0/141,0 pos, 0,0/0,0 neg]' score=-20.43599880285811

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, _).  [covers 129,0/141,0 pos, 0,0/0,0 neg]' score=-20.625862777592154

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(_, C).  [covers 129,0/141,0 pos, 0,0/0,0 neg]' score=-20.625862777592154

***** Warning: #10 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 129,0/141,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
Setting 0.0016991856957695485 for 
 // Learned this clause on outer loop cycle #1.  It scores=-20,39 and has recall=0,91, precision=1,00, and F1=0,95 (using m-estimates).
 // It covers 91,5% of the positive examples, 129 of 141,
(smokes(D) :- friends(D, Anon3869), recursive_smokes(Anon3869), friends(Anon3869, Anon3977), recursive_smokes(Anon3977))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 129,0/141,0 pos, 0,0/0,0 neg]
% This clause covers 129 positive examples, of which 129 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 91,5% of the positive examples and NaN% of the negatives.}

% ******************************************


% ******************************************
adding regression values
Added 0.0016991856957695485 to wgt = 0,0017 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model
% Time taken to learn 10 trees is 7,638 seconds.

% Kept 46 of the 46 positive examples.
% Kept 91 of the 101 negative examples.
% Dataset size: 137
Computing probabilities
prob time:47 milliseconds
No hidden examples for : smokes
Time to build dataset: 47 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 4 18 19 22 35 40 48 59 72 109
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 137,0/137,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 137,0/137,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 137,0/137,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 137,0/137,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 137,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,026537 (regressionFit = 21,026535, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -21,026537): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 137,0/137,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]' score=-21.02653665963598
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -21,029359 (regressionFit = 21,029356, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,026538 (regressionFit = 21,026535, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,033093 (regressionFit = 21,033090, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,029359 (regressionFit = 21,029356, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,033093 (regressionFit = 21,033090, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 128,0/137,0 pos, 0,0/0,0 neg]' score=-21.02653755963598
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -21,029360 (regressionFit = 21,029356, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(A, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,033094 (regressionFit = 21,033090, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(B, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,029360 (regressionFit = 21,029356, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, A).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,033094 (regressionFit = 21,033090, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]' score=-21.02935880849865
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,976035 (regressionFit = 20,976031, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,976035): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -20,901767 (regressionFit = 20,901763, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 115,0/137,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,901767): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 115,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,018748 (regressionFit = 21,018744, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,029360 (regressionFit = 21,029356, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, A).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -20,901767 (regressionFit = 20,901763, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B).  [covers 115,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,027342 (regressionFit = 21,027338, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -20,976035 (regressionFit = 20,976031, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, A).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,018748 (regressionFit = 21,018744, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, B).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -21,027342 (regressionFit = 21,027338, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(_, C).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -20,977055 (regressionFit = 20,977051, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), recursive_smokes(C).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
%     Score = -20,839836 (regressionFit = 20,839832, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,839836): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 128,0/137,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 115,0/137,0 pos, 0,0/0,0 neg]' score=-20.901766973977278

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B).  [covers 115,0/137,0 pos, 0,0/0,0 neg]' score=-20.901766973977278

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 128,0/137,0 pos, 0,0/0,0 neg]' score=-20.97603530487803

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, A).  [covers 128,0/137,0 pos, 0,0/0,0 neg]' score=-20.97603530487803

***** Warning: #11 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 128,0/137,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
Setting -0.001442336678233394 for 
 // Learned this clause on outer loop cycle #1.  It scores=-20,84 and has recall=0,93, precision=1,00, and F1=0,97 (using m-estimates).
 // It covers 93,4% of the positive examples, 128 of 137,
(smokes(D) :- friends(D, Anon4349), recursive_smokes(Anon4349), friends(D, Anon4457), not_smokes(Anon4457))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 128,0/137,0 pos, 0,0/0,0 neg]
% This clause covers 128 positive examples, of which 128 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 93,4% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.001442336678233394 to wgt = -0,0014 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 11 trees is 8,871 seconds.

% Kept 46 of the 46 positive examples.
% Kept 92 of the 101 negative examples.
% Dataset size: 138
Computing probabilities
prob time:78 milliseconds
No hidden examples for : smokes
Time to build dataset: 78 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 6 13 62 67 74 76 78 107
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,407245 (regressionFit = 20,407243, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,407245): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-20.40724501275366
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,479943 (regressionFit = 20,479940, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,407246 (regressionFit = 20,407243, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,432752 (regressionFit = 20,432749, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,479943 (regressionFit = 20,479940, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,432752 (regressionFit = 20,432749, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-20.40724591275366
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,479944 (regressionFit = 20,479940, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(A, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,432753 (regressionFit = 20,432749, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(B, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,479944 (regressionFit = 20,479940, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,432753 (regressionFit = 20,432749, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-20.43275175027631
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,276743 (regressionFit = 20,276739, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,276743): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,489995 (regressionFit = 20,489991, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(A, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,456160 (regressionFit = 20,456156, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(B, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,276743 (regressionFit = 20,276739, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, A).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,432753 (regressionFit = 20,432749, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,435343 (regressionFit = 20,435340, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,489995 (regressionFit = 20,489991, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(_, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,456160 (regressionFit = 20,456156, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(_, B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,435343 (regressionFit = 20,435340, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(_, C).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,252785 (regressionFit = 20,252781, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,252785): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,491848 (regressionFit = 20,491844, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), not_smokes(C).  [covers 127,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 113,0/138,0 pos, 0,0/0,0 neg]' score=-20.2767426330434

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, A).  [covers 113,0/138,0 pos, 0,0/0,0 neg]' score=-20.2767426330434

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]' score=-20.43275175027631
%  At # nodes expanded = 8, |OPEN| = 7.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,276743 (regressionFit = 20,276739, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), friends(A, C).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,489995 (regressionFit = 20,489991, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B), friends(A, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,276743 (regressionFit = 20,276739, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), friends(C, A).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,435343 (regressionFit = 20,435340, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), friends(C, _).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,489995 (regressionFit = 20,489991, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B), friends(_, A).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,456160 (regressionFit = 20,456156, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B), friends(_, B).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,435343 (regressionFit = 20,435340, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), friends(_, C).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,252785 (regressionFit = 20,252781, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), recursive_smokes(C).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,491848 (regressionFit = 20,491844, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), not_smokes(C).  [covers 127,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(C, B), friends(A, C).  [covers 113,0/138,0 pos, 0,0/0,0 neg]' score=-20.2767426330434

***** Warning: #12 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 127,0/138,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
Setting 0.0014752053655961255 for 
 // Learned this clause on outer loop cycle #1.  It scores=-20,25 and has recall=0,92, precision=1,00, and F1=0,96 (using m-estimates).
 // It covers 92,0% of the positive examples, 127 of 138,
(smokes(D) :- friends(D, Anon4837), recursive_smokes(Anon4837), friends(Anon4837, Anon4945), recursive_smokes(Anon4945))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 127,0/138,0 pos, 0,0/0,0 neg]
% This clause covers 127 positive examples, of which 127 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 92,0% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.0014752053655961255 to wgt = 0,0015 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 12 trees is 11,092 seconds.

% Kept 46 of the 46 positive examples.
% Kept 92 of the 101 negative examples.
% Dataset size: 138
Computing probabilities
prob time:63 milliseconds
No hidden examples for : smokes
Time to build dataset: 63 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 1 3 41 56 57 92 96 105 130 132
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,873417 (regressionFit = 20,873415, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,873417): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 138,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 129,0/138,0 pos, 0,0/0,0 neg]' score=-20.873416907639623
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,871752 (regressionFit = 20,871749, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,871752): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,873418 (regressionFit = 20,873415, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,879407 (regressionFit = 20,879404, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,871752 (regressionFit = 20,871749, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,879407 (regressionFit = 20,879404, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 129,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 129,0/138,0 pos, 0,0/0,0 neg]' score=-20.871752327342854
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,813460 (regressionFit = 20,813456, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,813460): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,871753 (regressionFit = 20,871749, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, A).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,642139 (regressionFit = 20,642135, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,642139): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,858409 (regressionFit = 20,858405, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, _).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,871753 (regressionFit = 20,871749, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, A).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,642139 (regressionFit = 20,642135, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,869027 (regressionFit = 20,869024, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, _).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,813460 (regressionFit = 20,813456, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, A).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,858409 (regressionFit = 20,858405, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, B).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,869027 (regressionFit = 20,869024, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(_, C).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,830842 (regressionFit = 20,830838, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), recursive_smokes(C).  [covers 129,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,679438 (regressionFit = 20,679434, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 129,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 113,0/138,0 pos, 0,0/0,0 neg]' score=-20.642139056474317
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,742633 (regressionFit = 20,742628, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(A, _).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,642140 (regressionFit = 20,642135, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,652713 (regressionFit = 20,652708, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(B, _).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,642140 (regressionFit = 20,642135, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, A).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,642140 (regressionFit = 20,642135, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, B).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,634035 (regressionFit = 20,634030, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,634035): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,742633 (regressionFit = 20,742628, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, A).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,652713 (regressionFit = 20,652708, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, B).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,634035 (regressionFit = 20,634030, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -19,805906 (regressionFit = 19,805901, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 61,0/138,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,805906): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 61,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,152787 (regressionFit = 20,152782, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), not_smokes(C).  [covers 112,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 113,0/138,0 pos, 0,0/0,0 neg]' score=-20.634034949066805

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C).  [covers 113,0/138,0 pos, 0,0/0,0 neg]' score=-20.634034949066805

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B).  [covers 113,0/138,0 pos, 0,0/0,0 neg]' score=-20.642139056474317
%  At # nodes expanded = 8, |OPEN| = 7.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,742633 (regressionFit = 20,742628, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(A, _).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,642140 (regressionFit = 20,642135, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(B, A).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,652713 (regressionFit = 20,652708, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(B, _).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,642140 (regressionFit = 20,642135, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(C, A).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,634035 (regressionFit = 20,634030, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(C, _).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,742633 (regressionFit = 20,742628, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(_, A).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,652713 (regressionFit = 20,652708, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(_, B).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,634035 (regressionFit = 20,634030, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(_, C).  [covers 113,0/138,0 pos, 0,0/0,0 neg]
%     Score = -19,805906 (regressionFit = 19,805901, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), recursive_smokes(C).  [covers 61,0/138,0 pos, 0,0/0,0 neg]
%     Score = -20,152787 (regressionFit = 20,152782, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), not_smokes(C).  [covers 112,0/138,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(C, _).  [covers 113,0/138,0 pos, 0,0/0,0 neg]' score=-20.634034949066805

***** Warning: #13 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 61,0/138,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 61,0/138,0 pos, 0,0/0,0 neg]
Setting 0.0023855652488711434 for 
 // Learned this clause on outer loop cycle #1.  It scores=-19,81 and has recall=0,44, precision=1,00, and F1=0,61 (using m-estimates).
 // It covers 44,2% of the positive examples, 61 of 138,
(smokes(D) :- friends(D, Anon5465), recursive_smokes(Anon5465), friends(D, Anon5573), friends(Anon5465, Anon5573), recursive_smokes(Anon5573))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 61,0/138,0 pos, 0,0/0,0 neg]
% This clause covers 61 positive examples, of which 61 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 44,2% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.0023855652488711434 to wgt = 0,0024 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 13 trees is 13,152 seconds.

% Kept 46 of the 46 positive examples.
% Kept 86 of the 101 negative examples.
% Dataset size: 132
Computing probabilities
prob time:76 milliseconds
No hidden examples for : smokes
Time to build dataset: 77 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 2 15 27 33 34 76 82 89 94 115
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 132,0/132,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 132,0/132,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 132,0/132,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 132,0/132,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 132,0/132,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 132,0/132,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 132,0/132,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 132,0/132,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 132,0/132,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 132,0/132,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 132,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,358738 (regressionFit = 20,358736, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,358738): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 132,0/132,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 124,0/132,0 pos, 0,0/0,0 neg]' score=-20.358737983680857
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,355308 (regressionFit = 20,355305, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,355308): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,358739 (regressionFit = 20,358736, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,365786 (regressionFit = 20,365783, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,355308 (regressionFit = 20,355305, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,365786 (regressionFit = 20,365783, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 124,0/132,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 124,0/132,0 pos, 0,0/0,0 neg]' score=-20.355308374946084
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,280821 (regressionFit = 20,280817, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,280821): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,355309 (regressionFit = 20,355305, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, A).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,245712 (regressionFit = 20,245709, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,245712): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,338574 (regressionFit = 20,338570, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, _).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,355309 (regressionFit = 20,355305, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, A).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,245712 (regressionFit = 20,245709, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,349929 (regressionFit = 20,349925, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, _).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,280821 (regressionFit = 20,280817, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, A).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,338574 (regressionFit = 20,338570, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, B).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,349929 (regressionFit = 20,349925, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(_, C).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,324298 (regressionFit = 20,324294, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), recursive_smokes(C).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,155042 (regressionFit = 20,155038, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 124,0/132,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,155042): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 124,0/132,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 110,0/132,0 pos, 0,0/0,0 neg]' score=-20.24571237005975
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,311909 (regressionFit = 20,311904, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(A, _).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,245713 (regressionFit = 20,245709, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,254384 (regressionFit = 20,254379, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(B, _).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,245713 (regressionFit = 20,245709, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, A).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,245713 (regressionFit = 20,245709, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, B).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,246613 (regressionFit = 20,246609, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,311909 (regressionFit = 20,311904, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, A).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,254384 (regressionFit = 20,254379, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, B).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,246613 (regressionFit = 20,246609, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -19,582991 (regressionFit = 19,582987, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 61,0/132,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,582991): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 61,0/132,0 pos, 0,0/0,0 neg]
%     Score = -19,711110 (regressionFit = 19,711105, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), not_smokes(C).  [covers 109,0/132,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B).  [covers 110,0/132,0 pos, 0,0/0,0 neg]' score=-20.24571237005975
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,311909 (regressionFit = 20,311904, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(A, _).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,245713 (regressionFit = 20,245709, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(B, A).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,254384 (regressionFit = 20,254379, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(B, _).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,245713 (regressionFit = 20,245709, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(C, A).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,246613 (regressionFit = 20,246609, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(C, _).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,311909 (regressionFit = 20,311904, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(_, A).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,254384 (regressionFit = 20,254379, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(_, B).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -20,246613 (regressionFit = 20,246609, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(_, C).  [covers 110,0/132,0 pos, 0,0/0,0 neg]
%     Score = -19,582991 (regressionFit = 19,582987, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), recursive_smokes(C).  [covers 61,0/132,0 pos, 0,0/0,0 neg]
%     Score = -19,711110 (regressionFit = 19,711105, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), not_smokes(C).  [covers 109,0/132,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 110,0/132,0 pos, 0,0/0,0 neg]' score=-20.24571327005975

% Consider expanding [#8 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, A).  [covers 110,0/132,0 pos, 0,0/0,0 neg]' score=-20.24571327005975

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, B).  [covers 110,0/132,0 pos, 0,0/0,0 neg]' score=-20.24571327005975

***** Warning: #14 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 61,0/132,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 61,0/132,0 pos, 0,0/0,0 neg]
Setting 0.0018010998258408892 for 
 // Learned this clause on outer loop cycle #1.  It scores=-19,58 and has recall=0,46, precision=1,00, and F1=0,63 (using m-estimates).
 // It covers 46,2% of the positive examples, 61 of 132,
(smokes(D) :- friends(D, Anon6239), recursive_smokes(Anon6239), friends(D, Anon6347), friends(Anon6239, Anon6347), recursive_smokes(Anon6347))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 61,0/132,0 pos, 0,0/0,0 neg]
% This clause covers 61 positive examples, of which 61 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 46,2% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.0018010998258408892 to wgt = 0,0018 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 14 trees is 15,188 seconds.

% Kept 46 of the 46 positive examples.
% Kept 93 of the 101 negative examples.
% Dataset size: 139
Computing probabilities
prob time:118 milliseconds
No hidden examples for : smokes
Time to build dataset: 119 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 7 8 24 25 42 76 78 81 95 99
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 139,0/139,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,850846 (regressionFit = 20,850844, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,850846): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 139,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 127,0/139,0 pos, 0,0/0,0 neg]' score=-20.850846042306493
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,796014 (regressionFit = 20,796011, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,796014): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,850847 (regressionFit = 20,850844, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,840529 (regressionFit = 20,840526, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,796014 (regressionFit = 20,796011, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,840529 (regressionFit = 20,840526, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 127,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]' score=-20.796013868575017
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,689765 (regressionFit = 20,689761, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,689765): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,796015 (regressionFit = 20,796011, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, A).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,796223 (regressionFit = 20,796219, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,763213 (regressionFit = 20,763208, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,796015 (regressionFit = 20,796011, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, A).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,796223 (regressionFit = 20,796219, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,784844 (regressionFit = 20,784840, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,689765 (regressionFit = 20,689761, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, A).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,763213 (regressionFit = 20,763208, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, B).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,784844 (regressionFit = 20,784840, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(_, C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,851763 (regressionFit = 20,851759, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), recursive_smokes(C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,538257 (regressionFit = 20,538253, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,538257): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]' score=-20.689764826619246
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 13 variant children.  Sending 21 items to OPEN for evaluation and possible insertion.
% Have created 21 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -20,562183 (regressionFit = 20,562178, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,689766 (regressionFit = 20,689761, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(B, A).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,877572 (regressionFit = 20,877567, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(B, C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,877572 (regressionFit = 20,877567, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(B, C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,636388 (regressionFit = 20,636383, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(B, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,689766 (regressionFit = 20,689761, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(C, A).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,877572 (regressionFit = 20,877567, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(C, B).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,803618 (regressionFit = 20,803613, penalties=4.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,669920 (regressionFit = 20,669915, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(C, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,689766 (regressionFit = 20,689761, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(C, A).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,877572 (regressionFit = 20,877567, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(C, B).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,803618 (regressionFit = 20,803613, penalties=4.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, D), friends(D, C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,669920 (regressionFit = 20,669915, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(C, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,562183 (regressionFit = 20,562178, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(_, A).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,636388 (regressionFit = 20,636383, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(_, B).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,669920 (regressionFit = 20,669915, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(_, C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,669920 (regressionFit = 20,669915, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(_, C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,842118 (regressionFit = 20,842114, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), recursive_smokes(C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,842118 (regressionFit = 20,842114, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), recursive_smokes(C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,384244 (regressionFit = 20,384239, penalties=4.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), not_smokes(C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,384244): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), not_smokes(C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,384244 (regressionFit = 20,384239, penalties=4.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), not_smokes(C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]' score=-20.562182846490607

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(_, A).  [covers 127,0/139,0 pos, 0,0/0,0 neg]' score=-20.562182846490607

% Consider expanding [#8 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(B, _).  [covers 127,0/139,0 pos, 0,0/0,0 neg]' score=-20.636388390402455

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(_, B).  [covers 127,0/139,0 pos, 0,0/0,0 neg]' score=-20.636388390402455

***** Warning: #15 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), not_smokes(C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), not_smokes(C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
Setting -1.6794212796594082E-4 for 
 // Learned this clause on outer loop cycle #1.  It scores=-20,38 and has recall=0,91, precision=1,00, and F1=0,95 (using m-estimates).
 // It covers 91,4% of the positive examples, 127 of 139,
(smokes(D) :- friends(D, Anon7005), recursive_smokes(Anon7005), friends(D, Anon7113), friends(D, Anon7185), not_smokes(Anon7113))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), not_smokes(C).  [covers 127,0/139,0 pos, 0,0/0,0 neg]
% This clause covers 127 positive examples, of which 127 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 91,4% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -1.6794212796594082E-4 to wgt = -0,0002 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), not_smokes(C))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 15 trees is 33,454 seconds.

% Kept 46 of the 46 positive examples.
% Kept 94 of the 101 negative examples.
% Dataset size: 140
Computing probabilities
prob time:172 milliseconds
No hidden examples for : smokes
Time to build dataset: 172 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 11 40 42 53 78 81 86 98 135 137
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 140,0/140,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 140,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,777564 (regressionFit = 20,777562, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,777564): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 140,0/140,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 129,0/140,0 pos, 0,0/0,0 neg]' score=-20.777563694617516
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,768297 (regressionFit = 20,768294, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,768297): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,777565 (regressionFit = 20,777562, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,780480 (regressionFit = 20,780477, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,768297 (regressionFit = 20,768294, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,780480 (regressionFit = 20,780477, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 129,0/140,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 129,0/140,0 pos, 0,0/0,0 neg]' score=-20.768297363973986
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,711298 (regressionFit = 20,711294, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,711298): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,768298 (regressionFit = 20,768294, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, A).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,686375 (regressionFit = 20,686371, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,686375): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,750202 (regressionFit = 20,750198, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, _).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,768298 (regressionFit = 20,768294, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, A).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,686375 (regressionFit = 20,686371, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,762276 (regressionFit = 20,762272, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, _).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,711298 (regressionFit = 20,711294, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, A).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,750202 (regressionFit = 20,750198, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, B).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,762276 (regressionFit = 20,762272, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(_, C).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,754256 (regressionFit = 20,754252, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), recursive_smokes(C).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,607395 (regressionFit = 20,607391, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 129,0/140,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,607395): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 129,0/140,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 114,0/140,0 pos, 0,0/0,0 neg]' score=-20.68637501470395
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,748356 (regressionFit = 20,748351, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(A, _).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,686376 (regressionFit = 20,686371, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,697987 (regressionFit = 20,697982, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(B, _).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,686376 (regressionFit = 20,686371, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, A).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,686376 (regressionFit = 20,686371, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, B).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,686607 (regressionFit = 20,686602, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,748356 (regressionFit = 20,748351, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, A).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,697987 (regressionFit = 20,697982, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, B).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,686607 (regressionFit = 20,686602, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -19,905941 (regressionFit = 19,905936, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 62,0/140,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,905941): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 62,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,129458 (regressionFit = 20,129453, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), not_smokes(C).  [covers 113,0/140,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B).  [covers 114,0/140,0 pos, 0,0/0,0 neg]' score=-20.68637501470395
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,748356 (regressionFit = 20,748351, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(A, _).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,686376 (regressionFit = 20,686371, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(B, A).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,697987 (regressionFit = 20,697982, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(B, _).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,686376 (regressionFit = 20,686371, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(C, A).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,686607 (regressionFit = 20,686602, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(C, _).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,748356 (regressionFit = 20,748351, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(_, A).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,697987 (regressionFit = 20,697982, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(_, B).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,686607 (regressionFit = 20,686602, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), friends(_, C).  [covers 114,0/140,0 pos, 0,0/0,0 neg]
%     Score = -19,905941 (regressionFit = 19,905936, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), recursive_smokes(C).  [covers 62,0/140,0 pos, 0,0/0,0 neg]
%     Score = -20,129458 (regressionFit = 20,129453, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B), not_smokes(C).  [covers 113,0/140,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 114,0/140,0 pos, 0,0/0,0 neg]' score=-20.686375914703948

% Consider expanding [#8 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, A).  [covers 114,0/140,0 pos, 0,0/0,0 neg]' score=-20.686375914703948

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, B).  [covers 114,0/140,0 pos, 0,0/0,0 neg]' score=-20.686375914703948

***** Warning: #16 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 62,0/140,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 62,0/140,0 pos, 0,0/0,0 neg]
Setting 0.0017761020439288522 for 
 // Learned this clause on outer loop cycle #1.  It scores=-19,91 and has recall=0,44, precision=1,00, and F1=0,61 (using m-estimates).
 // It covers 44,3% of the positive examples, 62 of 140,
(smokes(D) :- friends(D, Anon7855), recursive_smokes(Anon7855), friends(D, Anon7963), friends(Anon7855, Anon7963), recursive_smokes(Anon7963))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 62,0/140,0 pos, 0,0/0,0 neg]
% This clause covers 62 positive examples, of which 62 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 44,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.0017761020439288522 to wgt = 0,0018 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 16 trees is 35,773 seconds.

% Kept 46 of the 46 positive examples.
% Kept 93 of the 101 negative examples.
% Dataset size: 139
Computing probabilities
prob time:176 milliseconds
No hidden examples for : smokes
Time to build dataset: 177 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 28 37 46 49 74 105 118
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 139,0/139,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,970640 (regressionFit = 19,970638, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,970640): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 139,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 129,0/139,0 pos, 0,0/0,0 neg]' score=-19.970640341716607
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -19,995837 (regressionFit = 19,995834, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,970641 (regressionFit = 19,970638, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,983034 (regressionFit = 19,983030, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,995837 (regressionFit = 19,995834, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,983034 (regressionFit = 19,983030, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 129,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 129,0/139,0 pos, 0,0/0,0 neg]' score=-19.970641241716606
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -19,995838 (regressionFit = 19,995834, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(A, _).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,983034 (regressionFit = 19,983030, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(B, _).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,995838 (regressionFit = 19,995834, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, A).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,983034 (regressionFit = 19,983030, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, B).  [covers 129,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 129,0/139,0 pos, 0,0/0,0 neg]' score=-19.983033510760006
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -19,852499 (regressionFit = 19,852495, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,852499): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,993241 (regressionFit = 19,993237, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(A, _).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,992002 (regressionFit = 19,991998, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(B, _).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,852499 (regressionFit = 19,852495, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, A).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,983034 (regressionFit = 19,983030, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, B).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,983190 (regressionFit = 19,983186, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, _).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,993241 (regressionFit = 19,993237, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(_, A).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,992002 (regressionFit = 19,991998, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(_, B).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,983190 (regressionFit = 19,983186, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(_, C).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,848246 (regressionFit = 19,848242, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,848246): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 129,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,949463 (regressionFit = 19,949459, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), not_smokes(C).  [covers 129,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]' score=-19.852498827380067
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -19,966186 (regressionFit = 19,966181, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(A, _).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,852500 (regressionFit = 19,852495, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(B, A).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,856936 (regressionFit = 19,856931, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(B, _).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,852500 (regressionFit = 19,852495, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, A).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,852500 (regressionFit = 19,852495, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, B).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,832359 (regressionFit = 19,832354, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,832359): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,966186 (regressionFit = 19,966181, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(_, A).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,856936 (regressionFit = 19,856931, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(_, B).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,832359 (regressionFit = 19,832354, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(_, C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,186825 (regressionFit = 19,186820, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C).  [covers 59,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,186825): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C).  [covers 59,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,383492 (regressionFit = 19,383487, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), not_smokes(C).  [covers 112,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _).  [covers 113,0/139,0 pos, 0,0/0,0 neg]' score=-19.83235890433973
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 12 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -19,895148 (regressionFit = 19,895142, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, D), friends(A, D).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,960830 (regressionFit = 19,960824, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), friends(A, _).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,832360 (regressionFit = 19,832354, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), friends(B, A).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,816655 (regressionFit = 19,816650, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, D), friends(B, D).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,841291 (regressionFit = 19,841285, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), friends(B, _).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,832360 (regressionFit = 19,832354, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), friends(C, A).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,832360 (regressionFit = 19,832354, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), friends(C, B).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,816487 (regressionFit = 19,816481, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), friends(C, _).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,895148 (regressionFit = 19,895142, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, D), friends(D, A).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,816655 (regressionFit = 19,816650, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, D), friends(D, B).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,832360 (regressionFit = 19,832354, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, D), friends(D, C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,837767 (regressionFit = 19,837761, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, D), friends(D, _).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,960830 (regressionFit = 19,960824, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), friends(_, A).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,841291 (regressionFit = 19,841285, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), friends(_, B).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,816487 (regressionFit = 19,816481, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), friends(_, C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,837767 (regressionFit = 19,837761, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, D), friends(_, D).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -18,333500 (regressionFit = 18,333494, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), recursive_smokes(C).  [covers 59,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -18,333500): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), recursive_smokes(C).  [covers 59,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,567308 (regressionFit = 19,567303, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, D), recursive_smokes(D).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,289362 (regressionFit = 19,289356, penalties=5.840000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), not_smokes(C).  [covers 112,0/139,0 pos, 0,0/0,0 neg]
%     Score = -20,009611 (regressionFit = 20,009605, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, D), not_smokes(D).  [covers 113,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=5:6] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), friends(C, _).  [covers 113,0/139,0 pos, 0,0/0,0 neg]' score=-19.81648677989135

% Consider expanding [#9 of outerLoop #1, bodyLen=5:6] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), friends(_, C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]' score=-19.81648677989135

***** Warning: #17 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), recursive_smokes(C).  [covers 59,0/139,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), recursive_smokes(C).  [covers 59,0/139,0 pos, 0,0/0,0 neg]
Setting 2.2412465041095445E-4 for 
 // Learned this clause on outer loop cycle #1.  It scores=-18,33 and has recall=0,42, precision=1,00, and F1=0,60 (using m-estimates).
 // It covers 42,4% of the positive examples, 59 of 139,
(smokes(D) :- friends(D, Anon8621), recursive_smokes(Anon8621), friends(Anon8621, Anon8729), friends(D, Anon8729), friends(Anon8729, Anon9035), recursive_smokes(Anon8729))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), recursive_smokes(C).  [covers 59,0/139,0 pos, 0,0/0,0 neg]
% This clause covers 59 positive examples, of which 59 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 42,4% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 2.2412465041095445E-4 to wgt = 0,0002 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _), recursive_smokes(C))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 17 trees is 43,029 seconds.

% Kept 46 of the 46 positive examples.
% Kept 93 of the 101 negative examples.
% Dataset size: 139
Computing probabilities
prob time:216 milliseconds
No hidden examples for : smokes
Time to build dataset: 218 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 7 9 11 27 52 88 90 110 111 126
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 139,0/139,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 139,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,986267 (regressionFit = 19,986265, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,986267): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 139,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 128,0/139,0 pos, 0,0/0,0 neg]' score=-19.986266641642075
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -19,982875 (regressionFit = 19,982872, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,982875): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,986268 (regressionFit = 19,986265, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,990309 (regressionFit = 19,990306, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,982875 (regressionFit = 19,982872, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,990309 (regressionFit = 19,990306, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 128,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 128,0/139,0 pos, 0,0/0,0 neg]' score=-19.982874865838365
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -19,941119 (regressionFit = 19,941115, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,941119): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,982876 (regressionFit = 19,982872, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, A).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,863470 (regressionFit = 19,863466, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,863470): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,970552 (regressionFit = 19,970548, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, _).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,982876 (regressionFit = 19,982872, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, A).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,863470 (regressionFit = 19,863466, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,979588 (regressionFit = 19,979584, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, _).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,941119 (regressionFit = 19,941115, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, A).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,970552 (regressionFit = 19,970548, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, B).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,979588 (regressionFit = 19,979584, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(_, C).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,948969 (regressionFit = 19,948966, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), recursive_smokes(C).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,820553 (regressionFit = 19,820549, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 128,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,820553): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 128,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 114,0/139,0 pos, 0,0/0,0 neg]' score=-19.863470197613665
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -19,938621 (regressionFit = 19,938616, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(A, _).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,863471 (regressionFit = 19,863466, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,871263 (regressionFit = 19,871258, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(B, _).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,863471 (regressionFit = 19,863466, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, A).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,863471 (regressionFit = 19,863466, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, B).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,860467 (regressionFit = 19,860462, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,938621 (regressionFit = 19,938616, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, A).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,871263 (regressionFit = 19,871258, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, B).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,860467 (regressionFit = 19,860462, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,078770 (regressionFit = 19,078766, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 61,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,078770): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 61,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,294722 (regressionFit = 19,294717, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), not_smokes(C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 114,0/139,0 pos, 0,0/0,0 neg]' score=-19.860467175037332
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 12 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -19,885371 (regressionFit = 19,885366, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(A, D).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,939221 (regressionFit = 19,939215, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(A, _).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,860468 (regressionFit = 19,860462, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(B, A).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,833565 (regressionFit = 19,833559, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(B, D).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,870980 (regressionFit = 19,870974, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(B, _).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,860468 (regressionFit = 19,860462, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(C, A).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,860468 (regressionFit = 19,860462, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(C, B).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,861863 (regressionFit = 19,861857, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(C, _).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,885371 (regressionFit = 19,885366, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(D, A).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,833565 (regressionFit = 19,833559, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(D, B).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,860468 (regressionFit = 19,860462, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(D, C).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,866669 (regressionFit = 19,866664, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(D, _).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,939221 (regressionFit = 19,939215, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(_, A).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,870980 (regressionFit = 19,870974, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(_, B).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,861863 (regressionFit = 19,861857, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(_, C).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,866669 (regressionFit = 19,866664, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(_, D).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -18,380559 (regressionFit = 18,380553, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), recursive_smokes(C).  [covers 61,0/139,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -18,380559): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), recursive_smokes(C).  [covers 61,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,662906 (regressionFit = 19,662901, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), recursive_smokes(D).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,337164 (regressionFit = 19,337159, penalties=5.840000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), not_smokes(C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,956782 (regressionFit = 19,956777, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), not_smokes(D).  [covers 114,0/139,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=5:6] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(B, D).  [covers 114,0/139,0 pos, 0,0/0,0 neg]' score=-19.83356511367694

% Consider expanding [#8 of outerLoop #1, bodyLen=5:6] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(D, B).  [covers 114,0/139,0 pos, 0,0/0,0 neg]' score=-19.83356511367694

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C).  [covers 114,0/139,0 pos, 0,0/0,0 neg]' score=-19.860467175037332
%  At # nodes expanded = 9, |OPEN| = 7.  Pruned 12 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -19,885371 (regressionFit = 19,885366, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(D, C), friends(A, D).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,939221 (regressionFit = 19,939215, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C), friends(A, _).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,860468 (regressionFit = 19,860462, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C), friends(B, A).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,833565 (regressionFit = 19,833559, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(D, C), friends(B, D).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,870980 (regressionFit = 19,870974, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C), friends(B, _).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,860468 (regressionFit = 19,860462, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C), friends(C, A).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,860468 (regressionFit = 19,860462, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C), friends(C, B).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,885371 (regressionFit = 19,885366, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(D, C), friends(D, A).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,833565 (regressionFit = 19,833559, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(D, C), friends(D, B).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,866669 (regressionFit = 19,866664, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(D, C), friends(D, _).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,939221 (regressionFit = 19,939215, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C), friends(_, A).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,870980 (regressionFit = 19,870974, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C), friends(_, B).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,861863 (regressionFit = 19,861857, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C), friends(_, C).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,866669 (regressionFit = 19,866664, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(D, C), friends(_, D).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -18,380559 (regressionFit = 18,380553, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C), recursive_smokes(C).  [covers 61,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,662906 (regressionFit = 19,662901, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(D, C), recursive_smokes(D).  [covers 114,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,337164 (regressionFit = 19,337159, penalties=5.840000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C), not_smokes(C).  [covers 113,0/139,0 pos, 0,0/0,0 neg]
%     Score = -19,956782 (regressionFit = 19,956777, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(D, C), not_smokes(D).  [covers 114,0/139,0 pos, 0,0/0,0 neg]

***** Warning: #18 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), recursive_smokes(C).  [covers 61,0/139,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), recursive_smokes(C).  [covers 61,0/139,0 pos, 0,0/0,0 neg]
Setting 1.718414422336782E-4 for 
 // Learned this clause on outer loop cycle #1.  It scores=-18,38 and has recall=0,44, precision=1,00, and F1=0,61 (using m-estimates).
 // It covers 43,9% of the positive examples, 61 of 139,
(smokes(D) :- friends(D, Anon9657), recursive_smokes(Anon9657), friends(D, Anon9765), friends(Anon9657, Anon9765), friends(Anon9765, Anon10035), recursive_smokes(Anon9765))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), recursive_smokes(C).  [covers 61,0/139,0 pos, 0,0/0,0 neg]
% This clause covers 61 positive examples, of which 61 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 43,9% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 1.718414422336782E-4 to wgt = 0,0002 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), recursive_smokes(C))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 18 trees is 54,979 seconds.

% Kept 46 of the 46 positive examples.
% Kept 95 of the 101 negative examples.
% Dataset size: 141
Computing probabilities
prob time:250 milliseconds
No hidden examples for : smokes
Time to build dataset: 250 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 18 53 83 87 93 100 112 131
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 141,0/141,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 141,0/141,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 141,0/141,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 141,0/141,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 141,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,708523 (regressionFit = 20,708521, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,708523): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 141,0/141,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 132,0/141,0 pos, 0,0/0,0 neg]' score=-20.708523480299608
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,637679 (regressionFit = 20,637676, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,637679): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,708524 (regressionFit = 20,708521, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,691530 (regressionFit = 20,691527, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,637679 (regressionFit = 20,637676, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,691530 (regressionFit = 20,691527, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 132,0/141,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]' score=-20.63767854574516
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -20,528102 (regressionFit = 20,528098, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,528102): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,637679 (regressionFit = 20,637676, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,633416 (regressionFit = 20,633412, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 116,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,600451 (regressionFit = 20,600447, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,637679 (regressionFit = 20,637676, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,633416 (regressionFit = 20,633412, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B).  [covers 116,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,627726 (regressionFit = 20,627722, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,528102 (regressionFit = 20,528098, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,600451 (regressionFit = 20,600447, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, B).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,627726 (regressionFit = 20,627722, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(_, C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,726839 (regressionFit = 20,726835, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), recursive_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,373659 (regressionFit = 20,373655, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,373659): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]' score=-20.52810244659287
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 13 variant children.  Sending 21 items to OPEN for evaluation and possible insertion.
% Have created 21 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -20,407435 (regressionFit = 20,407430, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,528103 (regressionFit = 20,528098, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(B, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,639394 (regressionFit = 20,639389, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(B, C).  [covers 116,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,639394 (regressionFit = 20,639389, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(B, C).  [covers 116,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,472489 (regressionFit = 20,472484, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(B, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,528103 (regressionFit = 20,528098, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(C, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,639394 (regressionFit = 20,639389, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(C, B).  [covers 116,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,637716 (regressionFit = 20,637711, penalties=4.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,511589 (regressionFit = 20,511585, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(C, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,528103 (regressionFit = 20,528098, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(C, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,639394 (regressionFit = 20,639389, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(C, B).  [covers 116,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,637716 (regressionFit = 20,637711, penalties=4.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, D), friends(D, C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,511589 (regressionFit = 20,511585, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(C, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,407435 (regressionFit = 20,407430, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(_, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,472489 (regressionFit = 20,472484, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(_, B).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,511589 (regressionFit = 20,511585, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(_, C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,511589 (regressionFit = 20,511585, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(_, C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,698399 (regressionFit = 20,698394, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), recursive_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,698399 (regressionFit = 20,698394, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), recursive_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,233972 (regressionFit = 20,233967, penalties=4.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), not_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,233972): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), not_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,233972 (regressionFit = 20,233967, penalties=4.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), not_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]' score=-20.40743459228358
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 21 variant children.  Sending 32 items to OPEN for evaluation and possible insertion.
% Have created 32 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -20,300157 (regressionFit = 20,300151, penalties=6.060000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, _), friends(A, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,407435 (regressionFit = 20,407430, penalties=5.9500000000000015E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, _), friends(B, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,525032 (regressionFit = 20,525026, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, _), friends(B, C).  [covers 116,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,525032 (regressionFit = 20,525026, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(A, _), friends(B, C).  [covers 116,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,525032 (regressionFit = 20,525026, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, C), friends(B, C).  [covers 116,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,339076 (regressionFit = 20,339070, penalties=6.060000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, _), friends(B, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,407435 (regressionFit = 20,407430, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, _), friends(C, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,525032 (regressionFit = 20,525026, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, _), friends(C, B).  [covers 116,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,500036 (regressionFit = 20,500030, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, D), friends(A, _), friends(C, D).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,500036 (regressionFit = 20,500030, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, D), friends(C, D).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,386810 (regressionFit = 20,386804, penalties=5.960000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, _), friends(C, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,407435 (regressionFit = 20,407430, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(A, _), friends(C, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,525032 (regressionFit = 20,525026, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(A, _), friends(C, B).  [covers 116,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,500036 (regressionFit = 20,500030, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, D), friends(A, _), friends(D, C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,500036 (regressionFit = 20,500030, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(A, D), friends(C, D).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,386810 (regressionFit = 20,386804, penalties=5.960000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(A, _), friends(C, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,407435 (regressionFit = 20,407430, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, C), friends(C, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,525032 (regressionFit = 20,525026, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, C), friends(C, B).  [covers 116,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,500036 (regressionFit = 20,500030, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, D), friends(D, C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,500036 (regressionFit = 20,500030, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(A, D), friends(D, C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,386810 (regressionFit = 20,386804, penalties=5.960000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, C), friends(C, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,300157 (regressionFit = 20,300151, penalties=6.060000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, _), friends(_, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,339076 (regressionFit = 20,339070, penalties=6.060000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, _), friends(_, B).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,386810 (regressionFit = 20,386804, penalties=5.960000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, _), friends(_, C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,386810 (regressionFit = 20,386804, penalties=5.960000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(A, _), friends(_, C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,386810 (regressionFit = 20,386804, penalties=5.960000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, C), friends(_, C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,630947 (regressionFit = 20,630941, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, _), recursive_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,630947 (regressionFit = 20,630941, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(A, _), recursive_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,630947 (regressionFit = 20,630941, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, C), recursive_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,123790 (regressionFit = 20,123784, penalties=5.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, _), not_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20,123790): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, _), not_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,123790 (regressionFit = 20,123784, penalties=5.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, C), friends(A, _), not_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
%     Score = -20,123790 (regressionFit = 20,123784, penalties=5.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, C), not_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=5:6] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, _), friends(A, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]' score=-20.30015658750111

% Consider expanding [#8 of outerLoop #1, bodyLen=5:6] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, _), friends(_, A).  [covers 132,0/141,0 pos, 0,0/0,0 neg]' score=-20.30015658750111

% Consider expanding [#9 of outerLoop #1, bodyLen=5:6] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _), friends(A, _), friends(B, _).  [covers 132,0/141,0 pos, 0,0/0,0 neg]' score=-20.339076268790752

***** Warning: #19 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, _), not_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, _), not_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
Setting -1.3636283785199575E-5 for 
 // Learned this clause on outer loop cycle #1.  It scores=-20,12 and has recall=0,94, precision=1,00, and F1=0,97 (using m-estimates).
 // It covers 93,6% of the positive examples, 132 of 141,
(smokes(D) :- friends(D, Anon10991), recursive_smokes(Anon10991), friends(D, Anon11099), friends(D, Anon11171), friends(D, Anon11365), not_smokes(Anon11099))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, _), not_smokes(C).  [covers 132,0/141,0 pos, 0,0/0,0 neg]
% This clause covers 132 positive examples, of which 132 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 93,6% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -1.3636283785199575E-5 to wgt = -1,364e-05 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(A, _), friends(A, _), not_smokes(C))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 19 trees is 7 minutes and 46,051 seconds.

% Kept 46 of the 46 positive examples.
% Kept 90 of the 101 negative examples.
% Dataset size: 136
Computing probabilities
prob time:2 seconds
No hidden examples for : smokes
Time to build dataset: 2 seconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 15 16 47 75 123 133
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 136,0/136,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 136,0/136,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 136,0/136,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 136,0/136,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 136,0/136,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 136,0/136,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 136,0/136,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 136,0/136,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 136,0/136,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 136,0/136,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 136,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,910020 (regressionFit = 19,910018, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,910020): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 136,0/136,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 124,0/136,0 pos, 0,0/0,0 neg]' score=-19.910020453187684
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -19,918211 (regressionFit = 19,918208, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,910021 (regressionFit = 19,910018, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,919492 (regressionFit = 19,919489, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,918211 (regressionFit = 19,918208, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,919492 (regressionFit = 19,919489, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 124,0/136,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 124,0/136,0 pos, 0,0/0,0 neg]' score=-19.910021353187684
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -19,918211 (regressionFit = 19,918208, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(A, _).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,919493 (regressionFit = 19,919489, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(B, _).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,918211 (regressionFit = 19,918208, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, A).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,919493 (regressionFit = 19,919489, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, B).  [covers 124,0/136,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 124,0/136,0 pos, 0,0/0,0 neg]' score=-19.91821054398633
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -19,875894 (regressionFit = 19,875890, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,875894): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(A, _).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,852952 (regressionFit = 19,852949, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,852952): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,906070 (regressionFit = 19,906066, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(B, _).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,918211 (regressionFit = 19,918208, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, A).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,852952 (regressionFit = 19,852949, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, B).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,914748 (regressionFit = 19,914745, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(C, _).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,875894 (regressionFit = 19,875890, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, A).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,906070 (regressionFit = 19,906066, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _), friends(_, B).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,914748 (regressionFit = 19,914745, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(_, C).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,894926 (regressionFit = 19,894922, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), recursive_smokes(C).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,824243 (regressionFit = 19,824239, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 124,0/136,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,824243): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), not_smokes(C).  [covers 124,0/136,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C).  [covers 110,0/136,0 pos, 0,0/0,0 neg]' score=-19.852952467777914
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -19,900518 (regressionFit = 19,900514, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(A, _).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,852953 (regressionFit = 19,852949, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,860302 (regressionFit = 19,860297, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(B, _).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,852953 (regressionFit = 19,852949, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, A).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,852953 (regressionFit = 19,852949, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, B).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,851992 (regressionFit = 19,851987, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,900518 (regressionFit = 19,900514, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, A).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,860302 (regressionFit = 19,860297, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, B).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,851992 (regressionFit = 19,851987, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(_, C).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,367860 (regressionFit = 19,367856, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 62,0/136,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,367860): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), recursive_smokes(C).  [covers 62,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,213630 (regressionFit = 19,213625, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), not_smokes(C).  [covers 109,0/136,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19,213630): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), not_smokes(C).  [covers 109,0/136,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 110,0/136,0 pos, 0,0/0,0 neg]' score=-19.85199205490233
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 12 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -19,872118 (regressionFit = 19,872112, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(A, D).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,901344 (regressionFit = 19,901338, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(A, _).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,851993 (regressionFit = 19,851987, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(B, A).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,842799 (regressionFit = 19,842793, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(B, D).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,861136 (regressionFit = 19,861131, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(B, _).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,851993 (regressionFit = 19,851987, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(C, A).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,851993 (regressionFit = 19,851987, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(C, B).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,853148 (regressionFit = 19,853143, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(C, _).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,872118 (regressionFit = 19,872112, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(D, A).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,842799 (regressionFit = 19,842793, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(D, B).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,851993 (regressionFit = 19,851987, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(D, C).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,858491 (regressionFit = 19,858485, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(D, _).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,901344 (regressionFit = 19,901338, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(_, A).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,861136 (regressionFit = 19,861131, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(_, B).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,853148 (regressionFit = 19,853143, penalties=5.85E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), friends(_, C).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,858491 (regressionFit = 19,858485, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(_, D).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -18,910624 (regressionFit = 18,910618, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), recursive_smokes(C).  [covers 62,0/136,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -18,910624): smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), recursive_smokes(C).  [covers 62,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,698079 (regressionFit = 19,698074, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), recursive_smokes(D).  [covers 110,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,260789 (regressionFit = 19,260783, penalties=5.840000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), not_smokes(C).  [covers 109,0/136,0 pos, 0,0/0,0 neg]
%     Score = -19,897208 (regressionFit = 19,897202, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), not_smokes(D).  [covers 110,0/136,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=5:6] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(B, D).  [covers 110,0/136,0 pos, 0,0/0,0 neg]' score=-19.84279878429717

% Consider expanding [#9 of outerLoop #1, bodyLen=5:6] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, D), friends(D, B).  [covers 110,0/136,0 pos, 0,0/0,0 neg]' score=-19.84279878429717

***** Warning: #20 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), recursive_smokes(C).  [covers 62,0/136,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), recursive_smokes(C).  [covers 62,0/136,0 pos, 0,0/0,0 neg]
Setting 9.466672303674097E-5 for 
 // Learned this clause on outer loop cycle #1.  It scores=-18,91 and has recall=0,46, precision=1,00, and F1=0,63 (using m-estimates).
 // It covers 45,6% of the positive examples, 62 of 136,
(smokes(D) :- friends(D, Anon12553), recursive_smokes(Anon12553), friends(D, Anon12661), friends(Anon12553, Anon12661), friends(Anon12661, Anon12975), recursive_smokes(Anon12661))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), recursive_smokes(C).  [covers 62,0/136,0 pos, 0,0/0,0 neg]
% This clause covers 62 positive examples, of which 62 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 45,6% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 9.466672303674097E-5 to wgt = 9,467e-05 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, C), friends(B, C), friends(C, _), recursive_smokes(C))
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model.ckpt
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for smokes.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).
stepLength_tree11(1.0).
stepLength_tree12(1.0).
stepLength_tree13(1.0).
stepLength_tree14(1.0).
stepLength_tree15(1.0).
stepLength_tree16(1.0).
stepLength_tree17(1.0).
stepLength_tree18(1.0).
stepLength_tree19(1.0).
stepLength_tree20(1.0).

logPrior(-1.8).
smokes(D, Total) :- // A general accessor. 
   smokes(D, 1000000, Total), !.
smokes(D, Total) :- waitHere("This should not fail", smokes(D, Total)).

smokes(D, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_smokes_tree1(D, TreesToUse, Total1),
   getScore_smokes_tree2(D, TreesToUse, Total2),
   getScore_smokes_tree3(D, TreesToUse, Total3),
   getScore_smokes_tree4(D, TreesToUse, Total4),
   getScore_smokes_tree5(D, TreesToUse, Total5),
   getScore_smokes_tree6(D, TreesToUse, Total6),
   getScore_smokes_tree7(D, TreesToUse, Total7),
   getScore_smokes_tree8(D, TreesToUse, Total8),
   getScore_smokes_tree9(D, TreesToUse, Total9),
   getScore_smokes_tree10(D, TreesToUse, Total10),
   getScore_smokes_tree11(D, TreesToUse, Total11),
   getScore_smokes_tree12(D, TreesToUse, Total12),
   getScore_smokes_tree13(D, TreesToUse, Total13),
   getScore_smokes_tree14(D, TreesToUse, Total14),
   getScore_smokes_tree15(D, TreesToUse, Total15),
   getScore_smokes_tree16(D, TreesToUse, Total16),
   getScore_smokes_tree17(D, TreesToUse, Total17),
   getScore_smokes_tree18(D, TreesToUse, Total18),
   getScore_smokes_tree19(D, TreesToUse, Total19),
   getScore_smokes_tree20(D, TreesToUse, Total20),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10 + Total11 + Total12 + Total13 + Total14 + Total15 + Total16 + Total17 + Total18 + Total19 + Total20,
   !.
smokes(D, TreesToUse, Total) :- waitHere("This should not fail", smokes(D, TreesToUse, Total)).

getScore_smokes_tree1(D, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_smokes_tree1(D, TreesToUse, Total1) :- smokes_tree1(D, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_smokes_tree2(D, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_smokes_tree2(D, TreesToUse, Total2) :- smokes_tree2(D, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_smokes_tree3(D, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_smokes_tree3(D, TreesToUse, Total3) :- smokes_tree3(D, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_smokes_tree4(D, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_smokes_tree4(D, TreesToUse, Total4) :- smokes_tree4(D, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_smokes_tree5(D, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_smokes_tree5(D, TreesToUse, Total5) :- smokes_tree5(D, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_smokes_tree6(D, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_smokes_tree6(D, TreesToUse, Total6) :- smokes_tree6(D, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_smokes_tree7(D, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_smokes_tree7(D, TreesToUse, Total7) :- smokes_tree7(D, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_smokes_tree8(D, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_smokes_tree8(D, TreesToUse, Total8) :- smokes_tree8(D, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_smokes_tree9(D, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_smokes_tree9(D, TreesToUse, Total9) :- smokes_tree9(D, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_smokes_tree10(D, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_smokes_tree10(D, TreesToUse, Total10) :- smokes_tree10(D, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

getScore_smokes_tree11(D, TreesToUse, 0.0) :- 11 > TreesToUse, !.
getScore_smokes_tree11(D, TreesToUse, Total11) :- smokes_tree11(D, Total), stepLength_tree11(StepLen), Total11 is Total * StepLen.

getScore_smokes_tree12(D, TreesToUse, 0.0) :- 12 > TreesToUse, !.
getScore_smokes_tree12(D, TreesToUse, Total12) :- smokes_tree12(D, Total), stepLength_tree12(StepLen), Total12 is Total * StepLen.

getScore_smokes_tree13(D, TreesToUse, 0.0) :- 13 > TreesToUse, !.
getScore_smokes_tree13(D, TreesToUse, Total13) :- smokes_tree13(D, Total), stepLength_tree13(StepLen), Total13 is Total * StepLen.

getScore_smokes_tree14(D, TreesToUse, 0.0) :- 14 > TreesToUse, !.
getScore_smokes_tree14(D, TreesToUse, Total14) :- smokes_tree14(D, Total), stepLength_tree14(StepLen), Total14 is Total * StepLen.

getScore_smokes_tree15(D, TreesToUse, 0.0) :- 15 > TreesToUse, !.
getScore_smokes_tree15(D, TreesToUse, Total15) :- smokes_tree15(D, Total), stepLength_tree15(StepLen), Total15 is Total * StepLen.

getScore_smokes_tree16(D, TreesToUse, 0.0) :- 16 > TreesToUse, !.
getScore_smokes_tree16(D, TreesToUse, Total16) :- smokes_tree16(D, Total), stepLength_tree16(StepLen), Total16 is Total * StepLen.

getScore_smokes_tree17(D, TreesToUse, 0.0) :- 17 > TreesToUse, !.
getScore_smokes_tree17(D, TreesToUse, Total17) :- smokes_tree17(D, Total), stepLength_tree17(StepLen), Total17 is Total * StepLen.

getScore_smokes_tree18(D, TreesToUse, 0.0) :- 18 > TreesToUse, !.
getScore_smokes_tree18(D, TreesToUse, Total18) :- smokes_tree18(D, Total), stepLength_tree18(StepLen), Total18 is Total * StepLen.

getScore_smokes_tree19(D, TreesToUse, 0.0) :- 19 > TreesToUse, !.
getScore_smokes_tree19(D, TreesToUse, Total19) :- smokes_tree19(D, Total), stepLength_tree19(StepLen), Total19 is Total * StepLen.

getScore_smokes_tree20(D, TreesToUse, 0.0) :- 20 > TreesToUse, !.
getScore_smokes_tree20(D, TreesToUse, Total20) :- smokes_tree20(D, Total), stepLength_tree20(StepLen), Total20 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(0, []).
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 360 1222 1388 1543 1781 2055 2123
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 2.643,0/2.643,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 2.643,0/2.643,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 2.643,0/2.643,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 2.643,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 2.643,0/2.643,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 2.643,0/2.643,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 3 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 2.643,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 2.643,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 2.643,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 2.643,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 2.643,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -148.419,755961 (regressionFit = 148.419,755959, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -148.419,755961): smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), not_smokes(B).  [covers 2.643,0/2.643,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), recursive_smokes(B).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]' score=-148419.7559613425
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 3 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -151.252,827442 (regressionFit = 151.252,827439, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(A, _).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -148.419,755962 (regressionFit = 148.419,755959, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -149.285,395117 (regressionFit = 149.285,395114, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -151.252,827442 (regressionFit = 151.252,827439, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, A).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -149.285,395117 (regressionFit = 149.285,395114, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(_, B).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]' score=-148419.7559622425
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -151.252,827443 (regressionFit = 151.252,827439, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(A, _).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -149.285,395118 (regressionFit = 149.285,395114, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(B, _).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -151.252,827443 (regressionFit = 151.252,827439, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, A).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -149.285,395118 (regressionFit = 149.285,395114, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, A), friends(_, B).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]' score=-149285.3951167849
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 12 items to OPEN for evaluation and possible insertion.
% Have created 12 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -132.739,537972 (regressionFit = 132.739,537968, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -132.739,537972): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -152.093,517592 (regressionFit = 152.093,517588, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(A, _).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -150.256,490847 (regressionFit = 150.256,490843, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(B, _).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -132.739,537972 (regressionFit = 132.739,537968, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, A).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -149.285,395118 (regressionFit = 149.285,395114, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, B).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -149.443,869585 (regressionFit = 149.443,869581, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(C, _).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -152.093,517592 (regressionFit = 152.093,517588, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(_, A).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -150.256,490847 (regressionFit = 150.256,490843, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, _), friends(_, B).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -149.443,869585 (regressionFit = 149.443,869581, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(_, C).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -144.661,106676 (regressionFit = 144.661,106673, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), recursive_smokes(C).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -154.196,051749 (regressionFit = 154.196,051745, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), not_smokes(C).  [covers 2.428,0/2.643,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]' score=-132739.53797192452
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 6 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -136.249,839599 (regressionFit = 136.249,839594, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(A, _).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -132.739,537973 (regressionFit = 132.739,537968, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(B, A).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -133.083,228414 (regressionFit = 133.083,228409, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(B, _).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -132.739,537973 (regressionFit = 132.739,537968, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, A).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -132.739,537973 (regressionFit = 132.739,537968, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, B).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -132.871,578590 (regressionFit = 132.871,578586, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(C, _).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -136.249,839599 (regressionFit = 136.249,839594, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(_, A).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -133.083,228414 (regressionFit = 133.083,228409, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(_, B).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -132.871,578590 (regressionFit = 132.871,578586, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), friends(_, C).  [covers 2.151,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -95.120,816364 (regressionFit = 95.120,816359, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -95.120,816364): smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -134.832,077720 (regressionFit = 134.832,077715, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), not_smokes(C).  [covers 2.132,0/2.643,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]' score=-95120.81636411058
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 6 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -98.334,371125 (regressionFit = 98.334,371119, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C), friends(A, _).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -95.120,816365 (regressionFit = 95.120,816359, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C), friends(B, A).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -95.453,129308 (regressionFit = 95.453,129302, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C), friends(B, _).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -95.120,816365 (regressionFit = 95.120,816359, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C), friends(C, A).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -95.120,816365 (regressionFit = 95.120,816359, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C), friends(C, B).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -95.453,129308 (regressionFit = 95.453,129302, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C), friends(C, _).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -98.334,371125 (regressionFit = 98.334,371119, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C), friends(_, A).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -95.453,129308 (regressionFit = 95.453,129302, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C), friends(_, B).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]
%     Score = -95.453,129308 (regressionFit = 95.453,129302, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C), friends(_, C).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=5:6] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C), friends(B, A).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]' score=-95120.81636501059

% Consider expanding [#9 of outerLoop #1, bodyLen=5:6] 'smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C), friends(C, A).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]' score=-95120.81636501059

***** Warning: #21 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]
Setting 0.16318449223547357 for 
 // Learned this clause on outer loop cycle #1.  It scores=-95.120,82 and has recall=0,45, precision=1,00, and F1=0,62 (using m-estimates).
 // It covers 44,7% of the positive examples, 1181 of 2643 (of which 61 are newly covered),
(smokes(D) :- friends(D, Anon13591), recursive_smokes(Anon13591), friends(Anon13591, Anon13699), friends(D, Anon13699), recursive_smokes(Anon13699))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C).  [covers 1.181,0/2.643,0 pos, 0,0/0,0 neg]
% This clause covers 1181 positive examples, of which 61 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 2,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.16318449223547357 to wgt = 0,1632 (smokes(A) :- friends(A, B), recursive_smokes(B), friends(B, C), friends(A, C), recursive_smokes(C))
% Time taken to learn model for 'smokes': 8 minutes and 1,710 seconds.
% Saving model in: smokegen_smokes\smokes_65_7\train/models/bRDNs/smokes.model
cached groundings hit: 0
Misses: 0

% Switching to standard-logic notation for variables; previous setting = uppercase

% Switching to VarIndicator = lowercase.

% Switching to Prolog notation for variables; previous setting = lowercase

% Switching to VarIndicator = uppercase.

% Total learning time (20 trees): 8 minutes and 2,439 seconds.
