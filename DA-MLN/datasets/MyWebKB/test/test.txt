% Running on host: DESKTOP-0S2LA4F

% Creating string handler #1.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Switching to VarIndicator = questionMarks.

% getInputArgWithDefaultValue: args=[datasets\MyWebKB\test/test_pos.txt, datasets\MyWebKB\test/test_neg.txt, datasets\MyWebKB\test/test_bk.txt, datasets\MyWebKB\test/test_facts.txt, null]
%  for N=0: args[N]=datasets\MyWebKB\test/test_pos.txt

% getInputArgWithDefaultValue: args=[datasets\MyWebKB\test/test_pos.txt, datasets\MyWebKB\test/test_neg.txt, datasets\MyWebKB\test/test_bk.txt, datasets\MyWebKB\test/test_facts.txt, null]
%  for N=1: args[N]=datasets\MyWebKB\test/test_neg.txt

% getInputArgWithDefaultValue: args=[datasets\MyWebKB\test/test_pos.txt, datasets\MyWebKB\test/test_neg.txt, datasets\MyWebKB\test/test_bk.txt, datasets\MyWebKB\test/test_facts.txt, null]
%  for N=2: args[N]=datasets\MyWebKB\test/test_bk.txt

% getInputArgWithDefaultValue: args=[datasets\MyWebKB\test/test_pos.txt, datasets\MyWebKB\test/test_neg.txt, datasets\MyWebKB\test/test_bk.txt, datasets\MyWebKB\test/test_facts.txt, null]
%  for N=3: args[N]=datasets\MyWebKB\test/test_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% Reading background theory from dir: null
% Load '../mywebkb_bk.txt'.

***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'r_person'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'course'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'department'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'faculty'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'person'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'researchproject'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'staff'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'student'. *****

% LoadAllModes() called.  Currently loaded modes: []

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 53.074 facts.

%  LearnOneClause initialized.
% Have read 0 examples from 'datasets\MyWebKB\test' [datasets\MyWebKB\test/test*].
% Have read 0 examples from 'datasets\MyWebKB\test' [datasets\MyWebKB\test/test*].

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.

***** Warning: targetPredicates=null *****


***** Warning: targetArgSpecs=null *****

% Time to collect constants: 230 milliseconds
% Time to collect examples: 0 seconds

% Read 0 pos examples and 0 neg examples.
% Time to init learnOneClause: 247 milliseconds
Domain sizes loaded!

Train domain sizes: 
Word: 734
Page: 161

Test domain sizes: 
Word: 765
Page: 803

Domain size scales: 
Word: 1.042234332425068
Page: 4.987577639751553

Scaling weights...

Target: person

Tree #0

Clause: (person(A, 0.597279369882121) :- has(A, tx))
Connection variables: 
Scaling factor: 1.0, Weight: 0.597279369882121, Scaled weight: 0.597279369882121

Clause: (person(A, 0.7088290926289819) :- linkto(B, A), has(B, robert))
Connection variables: B (Page), 
Scaling factor: 4.987577639751553, Weight: 0.7088290926289819, Scaled weight: 0.14211890898289672

Clause: (person(A, 0.6581489350995122) :- has(A, download))
Connection variables: 
Scaling factor: 1.0, Weight: 0.6581489350995122, Scaled weight: 0.6581489350995122

Clause: (person(A, -0.5002186868297605) :- has(A, symposium))
Connection variables: 
Scaling factor: 1.0, Weight: -0.5002186868297605, Scaled weight: -0.5002186868297605

Clause: (person(A, 0.11967078303803057) :- has(A, scienc))
Connection variables: 
Scaling factor: 1.0, Weight: 0.11967078303803057, Scaled weight: 0.11967078303803057

Clause: (person(A, 0.0062149838574334084) :- has(A, mondai))
Connection variables: 
Scaling factor: 1.0, Weight: 0.0062149838574334084, Scaled weight: 0.0062149838574334084

Clause: (person(A, 0.44089175716920287) :- linkto(B, A), has(B, job))
Connection variables: B (Page), 
Scaling factor: 4.987577639751553, Weight: 0.44089175716920287, Scaled weight: 0.088397973728819

Clause: (person(A, -0.21821477391977864) :- has(A, www))
Connection variables: 
Scaling factor: 1.0, Weight: -0.21821477391977864, Scaled weight: -0.21821477391977864

Tree #1

Clause: (person(A, 0.3656565392515143) :- has(A, scienc))
Connection variables: 
Scaling factor: 1.0, Weight: 0.3656565392515143, Scaled weight: 0.3656565392515143

Clause: (person(A, -0.28232490776624236) :- has(A, gener))
Connection variables: 
Scaling factor: 1.0, Weight: -0.28232490776624236, Scaled weight: -0.28232490776624236

Clause: (person(A, 0.6133424990767713) :- has(A, download))
Connection variables: 
Scaling factor: 1.0, Weight: 0.6133424990767713, Scaled weight: 0.6133424990767713

Clause: (person(A, 0.26264697028481787) :- has(A, email))
Connection variables: 
Scaling factor: 1.0, Weight: 0.26264697028481787, Scaled weight: 0.26264697028481787

Clause: (person(A, -0.25550440323238943) :- has(A, sourc))
Connection variables: 
Scaling factor: 1.0, Weight: -0.25550440323238943, Scaled weight: -0.25550440323238943

Clause: (person(A, 0.48779451826673376) :- has(A, true))
Connection variables: 
Scaling factor: 1.0, Weight: 0.48779451826673376, Scaled weight: 0.48779451826673376

Clause: (person(A, -0.3373641386429598) :- has(A, answer))
Connection variables: 
Scaling factor: 1.0, Weight: -0.3373641386429598, Scaled weight: -0.3373641386429598

Clause: (person(A, 0.02830664990172289) :- has(A, version))
Connection variables: 
Scaling factor: 1.0, Weight: 0.02830664990172289, Scaled weight: 0.02830664990172289

Tree #2

Clause: (person(A, 0.36763598136277736) :- has(A, email))
Connection variables: 
Scaling factor: 1.0, Weight: 0.36763598136277736, Scaled weight: 0.36763598136277736

Clause: (person(A, 0.4158159704570811) :- has(A, homepag))
Connection variables: 
Scaling factor: 1.0, Weight: 0.4158159704570811, Scaled weight: 0.4158159704570811

Clause: (person(A, 0.6638684471400819) :- linkto(B, A), has(B, don))
Connection variables: B (Page), 
Scaling factor: 4.987577639751553, Weight: 0.6638684471400819, Scaled weight: 0.1331043835486341

Clause: (person(A, 0.07601877317720064) :- has(A, scienc))
Connection variables: 
Scaling factor: 1.0, Weight: 0.07601877317720064, Scaled weight: 0.07601877317720064

Clause: (person(A, 0.4824398773867547) :- has(A, browser))
Connection variables: 
Scaling factor: 1.0, Weight: 0.4824398773867547, Scaled weight: 0.4824398773867547

Clause: (person(A, 0.325320316912688) :- linkto(B, A), has(B, unix))
Connection variables: B (Page), 
Scaling factor: 4.987577639751553, Weight: 0.325320316912688, Scaled weight: 0.06522611584426247

Tree #3

Clause: (person(A, 0.23026223550599473) :- has(A, austin))
Connection variables: 
Scaling factor: 1.0, Weight: 0.23026223550599473, Scaled weight: 0.23026223550599473

Clause: (person(A, 0.021223132274818108) :- has(A, version))
Connection variables: 
Scaling factor: 1.0, Weight: 0.021223132274818108, Scaled weight: 0.021223132274818108

Tree #4

Clause: (person(A, 0.5065335579898574) :- has(A, ph), has(A, mondai))
Connection variables: 
Scaling factor: 1.0, Weight: 0.5065335579898574, Scaled weight: 0.5065335579898574

Clause: (person(A, 0.3540815766160903) :- has(A, mondai), has(A, homepag))
Connection variables: 
Scaling factor: 1.0, Weight: 0.3540815766160903, Scaled weight: 0.3540815766160903

Clause: (person(A, 0.11088145920841624) :- linkto(B, A), linkto(B, C), r_person(C))
Connection variables: B (Page), C (Page), 
Scaling factor: 24.87593071254967, Weight: 0.11088145920841624, Scaled weight: 0.0044573793233986456

Clause: (person(A, 0.0539192048557579) :- linkto(B, A), linkto(_, B), has(B, home))
Connection variables: _0 (Page), B (Page), 
Scaling factor: 24.87593071254967, Weight: 0.0539192048557579, Scaled weight: 0.0021675251261475885

Tree #5

Clause: (person(A, 0.14354172916344327) :- has(A, scienc))
Connection variables: 
Scaling factor: 1.0, Weight: 0.14354172916344327, Scaled weight: 0.14354172916344327

Clause: (person(A, 0.07578212458649884) :- has(A, email))
Connection variables: 
Scaling factor: 1.0, Weight: 0.07578212458649884, Scaled weight: 0.07578212458649884

Clause: (person(A, -0.28649669054362825) :- has(A, refer))
Connection variables: 
Scaling factor: 1.0, Weight: -0.28649669054362825, Scaled weight: -0.28649669054362825

Tree #6

Clause: (person(A, 0.43652459531005866) :- has(A, browser))
Connection variables: 
Scaling factor: 1.0, Weight: 0.43652459531005866, Scaled weight: 0.43652459531005866

Clause: (person(A, 0.1665481748705476) :- has(A, univers))
Connection variables: 
Scaling factor: 1.0, Weight: 0.1665481748705476, Scaled weight: 0.1665481748705476

Tree #7

Clause: (person(A, 0.25819360040841316) :- has(A, hall))
Connection variables: 
Scaling factor: 1.0, Weight: 0.25819360040841316, Scaled weight: 0.25819360040841316

Clause: (person(A, 0.0699921479006159) :- linkto(B, A), linkto(B, C), r_person(C))
Connection variables: B (Page), C (Page), 
Scaling factor: 24.87593071254967, Weight: 0.0699921479006159, Scaled weight: 0.002813649415147532

Tree #8

Clause: (person(A, 0.18389373226551264) :- has(A, hall))
Connection variables: 
Scaling factor: 1.0, Weight: 0.18389373226551264, Scaled weight: 0.18389373226551264

Clause: (person(A, 0.11388459756778754) :- linkto(B, A), has(B, www))
Connection variables: B (Page), 
Scaling factor: 4.987577639751553, Weight: 0.11388459756778754, Scaled weight: 0.02283364907648044

Tree #9

Clause: (person(A, -0.2665244410540717) :- has(A, part))
Connection variables: 
Scaling factor: 1.0, Weight: -0.2665244410540717, Scaled weight: -0.2665244410540717

Clause: (person(A, 0.16150253139188345) :- has(A, email))
Connection variables: 
Scaling factor: 1.0, Weight: 0.16150253139188345, Scaled weight: 0.16150253139188345

% for person |lookupPos| = 197
% for person |lookupNeg| = 606
% getJointExamples: |pos| = 197, |neg| = 606

% Starting inference in bRDN.

% Subsampling the negative examples.
% Trees = 10
% [ LazyGroundClauseIndex ]  Building full index for has/2 with 50.175 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for linkto/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for has/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for linkto/2.
% [ LazyGroundClauseIndex ]  Building full index for r_person/1 with 197 assertions.
 (Arithmetic) Mean Probability Assigned to Correct Output Class: 568,278/803,00 = 0,707694

 The weighted count of positive examples = 197,000 and the weighted count of negative examples = 606,000

printExamples: Writing out predictions (for Tuffy?) on 803 examples for 'person' to:
  datasets\MyWebKB\test/results_person.db
 and to:
  datasets\MyWebKB\test/query_person.db
%    No need to compress since small: datasets\MyWebKB\test/query_person.db

% Computing Area Under Curves.
%Pos=197
%Neg=606
%LL:-111.16291837361116
%LL:-323.88052378483

% Running command: java -jar src/edu/wisc/cs/will/DataSetUtils/auc.jar datasets\MyWebKB\test/AUC/aucTemp.txt list 0.0
% WAITING FOR command: java -jar src/edu/wisc/cs/will/DataSetUtils/auc.jar datasets\MyWebKB\test/AUC/aucTemp.txt list 0.0
% DONE WAITING FOR command: java -jar src/edu/wisc/cs/will/DataSetUtils/auc.jar datasets\MyWebKB\test/AUC/aucTemp.txt list 0.0

%   AUC ROC   = 0,889364
%   AUC PR    = 0,730094
%   CLL	      = -0,403338
%   Precision = 0,689474 at threshold = 0,519
%   Recall    = 0,664975
%   F1        = 0,677003

% Total inference time (10 trees): 6,564 seconds.
