% Running on host: DESKTOP-0S2LA4F

% Creating string handler #1.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Switching to VarIndicator = questionMarks.

% getInputArgWithDefaultValue: args=[datasets\MyWebKB\train/train_pos.txt, datasets\MyWebKB\train/train_neg.txt, datasets\MyWebKB\train/train_bk.txt, datasets\MyWebKB\train/train_facts.txt, null]
%  for N=0: args[N]=datasets\MyWebKB\train/train_pos.txt

% getInputArgWithDefaultValue: args=[datasets\MyWebKB\train/train_pos.txt, datasets\MyWebKB\train/train_neg.txt, datasets\MyWebKB\train/train_bk.txt, datasets\MyWebKB\train/train_facts.txt, null]
%  for N=1: args[N]=datasets\MyWebKB\train/train_neg.txt

% getInputArgWithDefaultValue: args=[datasets\MyWebKB\train/train_pos.txt, datasets\MyWebKB\train/train_neg.txt, datasets\MyWebKB\train/train_bk.txt, datasets\MyWebKB\train/train_facts.txt, null]
%  for N=2: args[N]=datasets\MyWebKB\train/train_bk.txt

% getInputArgWithDefaultValue: args=[datasets\MyWebKB\train/train_pos.txt, datasets\MyWebKB\train/train_neg.txt, datasets\MyWebKB\train/train_bk.txt, datasets\MyWebKB\train/train_facts.txt, null]
%  for N=3: args[N]=datasets\MyWebKB\train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% Reading background theory from dir: null
% Load '../mywebkb_bk.txt'.

***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'r_faculty'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'course'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'department'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'faculty'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'person'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'researchproject'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'staff'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Page] for 'student'. *****

% LoadAllModes() called.  Currently loaded modes: []

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 10.472 facts.

%  LearnOneClause initialized.
% Have read 0 examples from 'datasets\MyWebKB\train' [datasets\MyWebKB\train/train*].
% Have read 0 examples from 'datasets\MyWebKB\train' [datasets\MyWebKB\train/train*].

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.

***** Warning: targetPredicates=null *****


***** Warning: targetArgSpecs=null *****

% Time to collect constants: 177 milliseconds
% Time to collect examples: 0 seconds

% Read 0 pos examples and 0 neg examples.
% Time to init learnOneClause: 187 milliseconds

% 'models/domain_sizes.txt' saved.
File: datasets\MyWebKB\train/advice.txt doesnt exist.Hence no advice loaded
% Learning 10 trees in this iteration for faculty

% Learn model for: faculty
% Kept 10 of the 10 positive examples.
% Kept 151 of the 151 negative examples.
% Dataset size: 161
Computing probabilities
prob time:46 milliseconds
No hidden examples for : faculty
Time to build dataset: 51 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #8 as the next seed: faculty(httpwwwcsutexaseduuserskincaid)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (0):
%    
%  Modes (47):
%    r_faculty(`Page),
%    course(`Page),
%    department(`Page),
%    person(`Page),
%    researchproject(`Page),
%    staff(`Page),
%    student(`Page),
%    has(+Page, -Word),
%    has(+Page, #Word),
%    linkto(+Page, -Page),
%    linkto(-Page, +Page),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber)

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for has/2.
% [ LazyGroundClauseIndex ]  Building full index for has/2 with 10.199 assertions.
% [ LazyGroundClauseIndex ]  Building full index for linkto/2 with 73 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for linkto/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for linkto/2.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 75 items to OPEN for evaluation and possible insertion.
% Have created 75 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,237137 (regressionFit = 9,237136, penalties=1.03E-6) for clause:  faculty(A) :- has(A, implement).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,237137): faculty(A) :- has(A, implement).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,324325 (regressionFit = 9,324324, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,352382 (regressionFit = 9,352381, penalties=1.03E-6) for clause:  faculty(A) :- has(A, applic).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,305580 (regressionFit = 9,305579, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,062133 (regressionFit = 7,062132, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ph).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,062133): faculty(A) :- has(A, ph).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,789745 (regressionFit = 8,789744, penalties=1.03E-6) for clause:  faculty(A) :- has(A, equat).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,887508 (regressionFit = 8,887507, penalties=1.03E-6) for clause:  faculty(A) :- has(A, softwar).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,358486 (regressionFit = 9,358485, penalties=1.03E-6) for clause:  faculty(A) :- has(A, world).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,310754 (regressionFit = 9,310753, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ca).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,378012 (regressionFit = 9,378011, penalties=1.03E-6) for clause:  faculty(A) :- has(A, solution).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,338770 (regressionFit = 9,338769, penalties=1.03E-6) for clause:  faculty(A) :- has(A, organ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,238392 (regressionFit = 9,238391, penalties=1.03E-6) for clause:  faculty(A) :- has(A, center).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,508155 (regressionFit = 8,508154, penalties=1.03E-6) for clause:  faculty(A) :- has(A, associ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,480521 (regressionFit = 7,480519, penalties=1.03E-6) for clause:  faculty(A) :- has(A, summari).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,863765 (regressionFit = 8,863764, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,378678 (regressionFit = 9,378676, penalties=1.03E-6) for clause:  faculty(A) :- has(A, larg).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,345589 (regressionFit = 9,345588, penalties=1.03E-6) for clause:  faculty(A) :- has(A, session).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,099570 (regressionFit = 9,099569, penalties=1.03E-6) for clause:  faculty(A) :- has(A, analysi).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,226495 (regressionFit = 9,226494, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,369092 (regressionFit = 9,369091, penalties=1.03E-6) for clause:  faculty(A) :- has(A, variabl).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,396105 (regressionFit = 8,396104, penalties=1.03E-6) for clause:  faculty(A) :- has(A, vol).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,944682 (regressionFit = 8,944681, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mathemat).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,442354 (regressionFit = 8,442353, penalties=1.03E-6) for clause:  faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,099570 (regressionFit = 9,099569, penalties=1.03E-6) for clause:  faculty(A) :- has(A, appli).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,130311 (regressionFit = 9,130310, penalties=1.03E-6) for clause:  faculty(A) :- has(A, method).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,396105 (regressionFit = 8,396104, penalties=1.03E-6) for clause:  faculty(A) :- has(A, committe).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,320262 (regressionFit = 9,320261, penalties=1.03E-6) for clause:  faculty(A) :- has(A, perform).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,823530 (regressionFit = 8,823529, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,836133 (regressionFit = 7,836132, penalties=1.03E-6) for clause:  faculty(A) :- has(A, public).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,775853 (regressionFit = 8,775852, penalties=1.03E-6) for clause:  faculty(A) :- has(A, algorithm).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,181246 (regressionFit = 9,181245, penalties=1.03E-6) for clause:  faculty(A) :- has(A, parallel).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,154009 (regressionFit = 9,154008, penalties=1.03E-6) for clause:  faculty(A) :- has(A, iter).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,525989 (regressionFit = 8,525988, penalties=1.03E-6) for clause:  faculty(A) :- has(A, proceed).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,378678 (regressionFit = 9,378676, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thursdai).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,358975 (regressionFit = 9,358974, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,396105 (regressionFit = 8,396104, penalties=1.03E-6) for clause:  faculty(A) :- has(A, solv).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,377552 (regressionFit = 9,377551, penalties=1.03E-6) for clause:  faculty(A) :- has(A, high).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,677633 (regressionFit = 8,677632, penalties=1.03E-6) for clause:  faculty(A) :- has(A, pp).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,331170 (regressionFit = 9,331169, penalties=1.03E-6) for clause:  faculty(A) :- has(A, numer).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,319729 (regressionFit = 9,319728, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,920431 (regressionFit = 8,920430, penalties=1.03E-6) for clause:  faculty(A) :- has(A, degre).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,405692 (regressionFit = 8,405691, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interest).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,363577 (regressionFit = 9,363576, penalties=1.03E-6) for clause:  faculty(A) :- has(A, topic).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,093693 (regressionFit = 9,093692, penalties=1.03E-6) for clause:  faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,346406 (regressionFit = 9,346405, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,324325 (regressionFit = 9,324324, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,012988 (regressionFit = 9,012987, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scientif).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,859364 (regressionFit = 8,859363, penalties=1.03E-6) for clause:  faculty(A) :- has(A, servic).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,789745 (regressionFit = 8,789744, penalties=1.03E-6) for clause:  faculty(A) :- has(A, award).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,290884 (regressionFit = 9,290883, penalties=1.03E-6) for clause:  faculty(A) :- has(A, develop).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,976612 (regressionFit = 8,976611, penalties=1.03E-6) for clause:  faculty(A) :- has(A, lectur).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,161590 (regressionFit = 8,161589, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ed).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,369092 (regressionFit = 9,369091, penalties=1.03E-6) for clause:  faculty(A) :- has(A, basic).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,369092 (regressionFit = 9,369091, penalties=1.03E-6) for clause:  faculty(A) :- has(A, david).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,234077 (regressionFit = 9,234076, penalties=1.03E-6) for clause:  faculty(A) :- has(A, partial).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,234077 (regressionFit = 9,234076, penalties=1.03E-6) for clause:  faculty(A) :- has(A, linear).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,234077 (regressionFit = 9,234076, penalties=1.03E-6) for clause:  faculty(A) :- has(A, algebra).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,544049 (regressionFit = 8,544048, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,355802 (regressionFit = 8,355801, penalties=1.03E-6) for clause:  faculty(A) :- has(A, select).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,023811 (regressionFit = 9,023810, penalties=1.03E-6) for clause:  faculty(A) :- has(A, technic).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,525989 (regressionFit = 8,525988, penalties=1.03E-6) for clause:  faculty(A) :- has(A, recent).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,015814 (regressionFit = 9,015813, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,373044 (regressionFit = 9,373043, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mar).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,176160 (regressionFit = 9,176159, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,448955 (regressionFit = 9,448954, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,304903 (regressionFit = 9,304902, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-9.176159950397352
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -9,199545 (regressionFit = 9,199543, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,116404 (regressionFit = 9,116402, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,204723 (regressionFit = 9,204721, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-9.116404409624158

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-9.204723321521803

% Consider expanding [#5 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-9.304902913599605
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
% [ LazyGroundClauseIndex ]  Building full index for r_faculty/1 with 10 assertions.
%     Score = -9,490042 (regressionFit = 9,490040, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
% [ LazyGroundClauseIndex ]  Building full index for course/1 with 7 assertions.
%     Score = -8,774657 (regressionFit = 8,774655, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
% [ LazyGroundClauseIndex ]  Building full index for department/1 with 9 assertions.
%     Score = -9,430972 (regressionFit = 9,430970, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% [ LazyGroundClauseIndex ]  Building full index for person/1 with 41 assertions.
%     Score = -9,594055 (regressionFit = 9,594053, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
% [ LazyGroundClauseIndex ]  Building full index for researchproject/1 with 2 assertions.
%     Score = -9,703128 (regressionFit = 9,703126, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
% [ LazyGroundClauseIndex ]  Building full index for staff/1 with 1 assertions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
% [ LazyGroundClauseIndex ]  Building full index for student/1 with 30 assertions.
%     Score = -9,705683 (regressionFit = 9,705681, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,305342 (regressionFit = 9,305340, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,199528 (regressionFit = 9,199526, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,165872 (regressionFit = 9,165870, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,285767 (regressionFit = 9,285765, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,619056 (regressionFit = 9,619054, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,258170 (regressionFit = 9,258168, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,327722 (regressionFit = 9,327719, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,244942 (regressionFit = 9,244940, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-9.165871797800527

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-9.24494228085773

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-9.258169986315933

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-9.285766943717666

***** Warning: #1 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, ph).  [covers 22,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, ph).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
Setting 0.221785298735876 for 
 // Learned this clause on outer loop cycle #1.  It scores=-7,06 and has recall=0,14, precision=1,00, and F1=0,24 (using m-estimates).
 // It covers 13,7% of the positive examples, 22 of 161,
(faculty(D) :- has(D, ph))

% On cycle #1, the best clause found is:
%      faculty(A) :- has(A, ph).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 22 positive examples, of which 22 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 13,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #90 as the next seed: faculty(httpwwwcsutexaseduusersjyluochinesepapersnewspapershtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,231401 (regressionFit = 7,231400, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,231401): faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,356414 (regressionFit = 7,356413, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,369639 (regressionFit = 7,369638, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oct).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,356414 (regressionFit = 7,356413, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,338368 (regressionFit = 7,338367, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,355208 (regressionFit = 7,355207, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,365500 (regressionFit = 7,365499, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,362204 (regressionFit = 7,362203, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,260531 (regressionFit = 7,260530, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,538691 (regressionFit = 7,538690, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,305052 (regressionFit = 7,305051, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.26053077490094
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -7,254190 (regressionFit = 7,254188, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,253781 (regressionFit = 7,253779, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,240669 (regressionFit = 7,240667, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.240669072553585

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.253781388698074

% Consider expanding [#5 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.30505248512972
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,491902 (regressionFit = 7,491900, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,079258 (regressionFit = 7,079256, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,079258): faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,620694 (regressionFit = 7,620692, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,543463 (regressionFit = 7,543461, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,809214 (regressionFit = 7,809212, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,797494 (regressionFit = 7,797492, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,307696 (regressionFit = 7,307693, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,192590 (regressionFit = 7,192588, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,324659 (regressionFit = 7,324657, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,459837 (regressionFit = 7,459835, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,652631 (regressionFit = 7,652629, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,261162 (regressionFit = 7,261160, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,379020 (regressionFit = 7,379018, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,212862 (regressionFit = 7,212860, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.212861917042958

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.261161670666573

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.32465935239554

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.379020231495553

***** Warning: #2 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
Setting 0.2472562857315742 for 
 // Learned this clause on outer loop cycle #2.  It scores=-7,08 and has recall=0,02, precision=0,98, and F1=0,05 (using m-estimates).
 // It covers 2,5% of the positive examples, 4 of 161 (of which 2 are newly covered),
 // So far 24 (14,9%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon1663, D), course(Anon1663))

% On cycle #2, the best clause found is:
%      faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 2 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 14,9% of the positive examples and NaN% of the negatives.}
% Have selected pos example #20 as the next seed: faculty(httpwwwcsutexaseduusersbertdomindexhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 25 items to OPEN for evaluation and possible insertion.
% Have created 25 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,850152 (regressionFit = 6,850151, penalties=1.03E-6) for clause:  faculty(A) :- has(A, de).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,850152): faculty(A) :- has(A, de).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,893113 (regressionFit = 6,893112, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,794555 (regressionFit = 6,794554, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,794555): faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,898322 (regressionFit = 6,898321, penalties=1.03E-6) for clause:  faculty(A) :- has(A, past).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,886350 (regressionFit = 6,886349, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,851016 (regressionFit = 6,851015, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jame).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,899725 (regressionFit = 6,899724, penalties=1.03E-6) for clause:  faculty(A) :- has(A, save).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,892328 (regressionFit = 6,892327, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,890100 (regressionFit = 6,890099, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,893113 (regressionFit = 6,893112, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,899028 (regressionFit = 6,899027, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,899147 (regressionFit = 6,899146, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,896882 (regressionFit = 6,896881, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,778518 (regressionFit = 6,778517, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,778518): faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,172774 (regressionFit = 7,172773, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,930003 (regressionFit = 6,930002, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.7785179928578
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,772177 (regressionFit = 6,772175, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,772177): faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,771769 (regressionFit = 6,771767, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,771769): faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,758656 (regressionFit = 6,758654, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,758656): faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.758656290510445

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.771768606654934

% Consider expanding [#5 of outerLoop #3, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.930002867488975
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,955663 (regressionFit = 6,955661, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,079258 (regressionFit = 7,079256, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,230964 (regressionFit = 7,230962, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,999050 (regressionFit = 6,999048, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,321347 (regressionFit = 7,321345, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,311804 (regressionFit = 7,311802, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,956660 (regressionFit = 6,956658, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,795128 (regressionFit = 6,795126, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,943604 (regressionFit = 6,943602, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,107488 (regressionFit = 7,107486, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,125931 (regressionFit = 7,125929, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,943843 (regressionFit = 6,943841, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,054711 (regressionFit = 7,054709, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,864820 (regressionFit = 6,864818, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.864819651182695

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.943604397926543

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.943843070387831

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.054711059635809

***** Warning: #3 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
Setting -0.023263972648000942 for 
 // Learned this clause on outer loop cycle #3.  It scores=-6,76 and has recall=0,06, precision=0,99, and F1=0,12 (using m-estimates).
 // It covers 6,2% of the positive examples, 10 of 161 (of which 7 are newly covered),
 // So far 31 (19,3%) of the positive examples have been covered.
(faculty(D) :- linkto(D, D), linkto(Anon2153, D))

% On cycle #3, the best clause found is:
%      faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 10 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 19,3% of the positive examples and NaN% of the negatives.}
% Have selected pos example #40 as the next seed: faculty(httpwwwcsutexaseduusersclancy)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 70 items to OPEN for evaluation and possible insertion.
% Have created 70 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,954992 (regressionFit = 6,954991, penalties=1.03E-6) for clause:  faculty(A) :- has(A, detail).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,954992): faculty(A) :- has(A, detail).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,582015 (regressionFit = 6,582014, penalties=1.03E-6) for clause:  faculty(A) :- has(A, automat).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,582015): faculty(A) :- has(A, automat).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,910498 (regressionFit = 6,910497, penalties=1.03E-6) for clause:  faculty(A) :- has(A, result).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,772497 (regressionFit = 6,772496, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,853971 (regressionFit = 6,853970, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,948986 (regressionFit = 6,948985, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,952711 (regressionFit = 6,952710, penalties=1.03E-6) for clause:  faculty(A) :- has(A, network).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,844831 (regressionFit = 6,844830, penalties=1.03E-6) for clause:  faculty(A) :- has(A, address).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,937360 (regressionFit = 6,937359, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fridai).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957651 (regressionFit = 6,957650, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,777781 (regressionFit = 6,777779, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,945445 (regressionFit = 6,945444, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,530438 (regressionFit = 6,530437, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,530438): faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,653610 (regressionFit = 6,653609, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,954646 (regressionFit = 6,954645, penalties=1.03E-6) for clause:  faculty(A) :- has(A, retriev).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,952730 (regressionFit = 6,952729, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,877788 (regressionFit = 6,877787, penalties=1.03E-6) for clause:  faculty(A) :- has(A, requir).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,845396 (regressionFit = 6,845395, penalties=1.03E-6) for clause:  faculty(A) :- has(A, number).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,717918 (regressionFit = 6,717917, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,855541 (regressionFit = 6,855540, penalties=1.03E-6) for clause:  faculty(A) :- has(A, contact).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,950327 (regressionFit = 6,950326, penalties=1.03E-6) for clause:  faculty(A) :- has(A, model).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,953520 (regressionFit = 6,953519, penalties=1.03E-6) for clause:  faculty(A) :- has(A, netscap).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,682113 (regressionFit = 6,682112, penalties=1.03E-6) for clause:  faculty(A) :- has(A, hall).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,954682 (regressionFit = 6,954681, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sep).  [covers 23,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957214 (regressionFit = 6,957213, penalties=1.03E-6) for clause:  faculty(A) :- has(A, problem).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,929068 (regressionFit = 6,929067, penalties=1.03E-6) for clause:  faculty(A) :- has(A, descript).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,948595 (regressionFit = 6,948594, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dynam).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,897756 (regressionFit = 6,897755, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scale).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,929688 (regressionFit = 6,929687, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tx).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,900288 (regressionFit = 6,900287, penalties=1.03E-6) for clause:  faculty(A) :- has(A, qualit).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,931279 (regressionFit = 6,931278, penalties=1.03E-6) for clause:  faculty(A) :- has(A, simul).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,949336 (regressionFit = 6,949335, penalties=1.03E-6) for clause:  faculty(A) :- has(A, techniqu).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,949831 (regressionFit = 6,949830, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,874553 (regressionFit = 6,874552, penalties=1.03E-6) for clause:  faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,956963 (regressionFit = 6,956962, penalties=1.03E-6) for clause:  faculty(A) :- has(A, larg).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,955058 (regressionFit = 6,955057, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,842650 (regressionFit = 6,842649, penalties=1.03E-6) for clause:  faculty(A) :- has(A, constraint).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,927841 (regressionFit = 6,927840, penalties=1.03E-6) for clause:  faculty(A) :- has(A, integr).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,945749 (regressionFit = 6,945748, penalties=1.03E-6) for clause:  faculty(A) :- has(A, abstract).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957627 (regressionFit = 6,957626, penalties=1.03E-6) for clause:  faculty(A) :- has(A, knowledg).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,913108 (regressionFit = 6,913107, penalties=1.03E-6) for clause:  faculty(A) :- has(A, develop).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957637 (regressionFit = 6,957636, penalties=1.03E-6) for clause:  faculty(A) :- has(A, issu).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,956408 (regressionFit = 6,956407, penalties=1.03E-6) for clause:  faculty(A) :- has(A, base).  [covers 23,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,896592 (regressionFit = 6,896591, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,645546 (regressionFit = 6,645545, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interest).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,952222 (regressionFit = 6,952221, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,904430 (regressionFit = 6,904429, penalties=1.03E-6) for clause:  faculty(A) :- has(A, complex).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,932365 (regressionFit = 6,932364, penalties=1.03E-6) for clause:  faculty(A) :- has(A, behavior).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,933458 (regressionFit = 6,933457, penalties=1.03E-6) for clause:  faculty(A) :- has(A, reason).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,949831 (regressionFit = 6,949830, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,470295 (regressionFit = 6,470294, penalties=1.03E-6) for clause:  faculty(A) :- has(A, offic).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,470295): faculty(A) :- has(A, offic).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957312 (regressionFit = 6,957311, penalties=1.03E-6) for clause:  faculty(A) :- has(A, variabl).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,901290 (regressionFit = 6,901289, penalties=1.03E-6) for clause:  faculty(A) :- has(A, build).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,955458 (regressionFit = 6,955457, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,938948 (regressionFit = 6,938947, penalties=1.03E-6) for clause:  faculty(A) :- has(A, appli).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,937202 (regressionFit = 6,937201, penalties=1.03E-6) for clause:  faculty(A) :- has(A, email).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,855221 (regressionFit = 6,855220, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,947386 (regressionFit = 6,947385, penalties=1.03E-6) for clause:  faculty(A) :- has(A, real).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,778518 (regressionFit = 6,778517, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,198812 (regressionFit = 7,198811, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971513 (regressionFit = 6,971512, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.7785179928578
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,780493 (regressionFit = 6,780491, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,757587 (regressionFit = 6,757585, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,775035 (regressionFit = 6,775033, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.7575871114765205

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.775035375926699

% Consider expanding [#5 of outerLoop #4, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.971512733525142
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 158 items to OPEN for evaluation and possible insertion.
% Have created 158 valid-on-seeds descendants.
%     Score = -7,013423 (regressionFit = 7,013421, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,156270 (regressionFit = 7,156268, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,290696 (regressionFit = 7,290694, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,056830 (regressionFit = 7,056828, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,393503 (regressionFit = 7,393501, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,379526 (regressionFit = 7,379524, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,991824 (regressionFit = 6,991822, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,841331 (regressionFit = 6,841329, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,366428 (regressionFit = 7,366426, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, detail).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,863942 (regressionFit = 6,863939, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, automat).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,371392 (regressionFit = 7,371390, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, result).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,930916 (regressionFit = 6,930914, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, scienc).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,911351 (regressionFit = 6,911349, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mondai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,964879 (regressionFit = 6,964876, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, cern).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,328792 (regressionFit = 7,328790, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, network).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,042783 (regressionFit = 7,042781, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, address).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,340230 (regressionFit = 7,340228, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, fridai).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,944934 (regressionFit = 6,944932, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, austin).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,006972 (regressionFit = 7,006970, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, univers).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,327318 (regressionFit = 7,327316, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, list).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,977952 (regressionFit = 6,977950, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, research).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,772625 (regressionFit = 6,772623, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, inform).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, retriev).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,948024 (regressionFit = 6,948022, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,373547 (regressionFit = 7,373545, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, requir).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,372921 (regressionFit = 7,372919, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, number).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,880991 (regressionFit = 6,880989, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, comput).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,280710 (regressionFit = 7,280708, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, contact).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,364748 (regressionFit = 7,364746, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, model).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, netscap).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,312099 (regressionFit = 7,312097, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, hall).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,207912 (regressionFit = 7,207910, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, sep).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,254456 (regressionFit = 7,254454, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, problem).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,376150 (regressionFit = 7,376148, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, descript).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,372780 (regressionFit = 7,372778, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, dynam).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,376394 (regressionFit = 7,376392, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, scale).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,327621 (regressionFit = 7,327618, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, tx).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,365672 (regressionFit = 7,365669, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, qualit).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,377266 (regressionFit = 7,377264, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, simul).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,355850 (regressionFit = 7,355848, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, techniqu).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,964879 (regressionFit = 6,964876, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mime).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,996728 (regressionFit = 6,996726, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, system).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,375520 (regressionFit = 7,375517, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, larg).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957240 (regressionFit = 6,957237, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, constraint).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,376394 (regressionFit = 7,376392, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, integr).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,332924 (regressionFit = 7,332921, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, abstract).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,319807 (regressionFit = 7,319805, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, knowledg).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,321868 (regressionFit = 7,321866, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, develop).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,315894 (regressionFit = 7,315892, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, issu).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,966316 (regressionFit = 6,966314, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, jan).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,274830 (regressionFit = 7,274828, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, base).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,161055 (regressionFit = 7,161053, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, depart).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,279863 (regressionFit = 7,279861, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, interest).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,371478 (regressionFit = 7,371475, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, paper).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,366483 (regressionFit = 7,366481, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, complex).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,366483 (regressionFit = 7,366481, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, behavior).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,370005 (regressionFit = 7,370003, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, reason).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,964879 (regressionFit = 6,964876, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, version).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,232470 (regressionFit = 7,232468, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, offic).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,370833 (regressionFit = 7,370831, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, variabl).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,366477 (regressionFit = 7,366475, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, build).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,983263 (regressionFit = 6,983261, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, utexa).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032180 (regressionFit = 7,032178, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, appli).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,327651 (regressionFit = 7,327649, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, email).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,969624 (regressionFit = 6,969622, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, texa).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,370026 (regressionFit = 7,370024, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, real).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for has/2.
%     Score = -7,289348 (regressionFit = 7,289346, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, user).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,996733 (regressionFit = 6,996731, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, comput).  [covers 33,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,859382 (regressionFit = 6,859380, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, utexa).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,294282 (regressionFit = 7,294280, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, group).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,999791 (regressionFit = 6,999789, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, research).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,318962 (regressionFit = 7,318960, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, intern).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,011222 (regressionFit = 7,011220, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,075044 (regressionFit = 7,075042, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, jan).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,354321 (regressionFit = 7,354319, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, review).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,271184 (regressionFit = 7,271182, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, link).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,837547 (regressionFit = 6,837545, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, austin).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,963707 (regressionFit = 6,963705, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, scienc).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,310596 (regressionFit = 7,310594, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, site).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,304104 (regressionFit = 7,304102, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, guid).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,736877 (regressionFit = 6,736875, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,885469 (regressionFit = 6,885467, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, graphic).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,345662 (regressionFit = 7,345660, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, project).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,019548 (regressionFit = 7,019545, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mime).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,042043 (regressionFit = 7,042041, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,342372 (regressionFit = 7,342370, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, virtual).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,367268 (regressionFit = 7,367266, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ai).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,219869 (regressionFit = 7,219867, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ut).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,387785 (regressionFit = 7,387783, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, dr).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,190119 (regressionFit = 7,190117, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, depart).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,969312 (regressionFit = 6,969310, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cern).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,170010 (regressionFit = 7,170008, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ftp).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,297149 (regressionFit = 7,297147, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, apr).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,392251 (regressionFit = 7,392249, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, archiv).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,393546 (regressionFit = 7,393544, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, citi).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,362097 (regressionFit = 7,362095, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, washington).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,382918 (regressionFit = 7,382916, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, qualit).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,287249 (regressionFit = 7,287247, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, usa).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,386563 (regressionFit = 7,386561, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, data).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,293716 (regressionFit = 7,293714, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, limit).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,184387 (regressionFit = 7,184385, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, time).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,371325 (regressionFit = 7,371323, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, page).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,351651 (regressionFit = 7,351649, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, natur).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, document).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, menu).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,322999 (regressionFit = 7,322997, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, workshop).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,303073 (regressionFit = 7,303071, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, info).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,896084 (regressionFit = 6,896082, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, univers).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,201406 (regressionFit = 7,201404, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, laboratori).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, music).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,051861 (regressionFit = 7,051859, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, www).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,019548 (regressionFit = 7,019545, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, version).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,319048 (regressionFit = 7,319046, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, electron).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,050165 (regressionFit = 7,050163, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, web).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,271993 (regressionFit = 7,271991, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, center).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,336607 (regressionFit = 7,336605, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mar).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,237657 (regressionFit = 7,237655, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, home).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,198934 (regressionFit = 7,198932, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, internet).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,897491 (regressionFit = 6,897489, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mondai).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,202083 (regressionFit = 7,202081, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, directori).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,316598 (regressionFit = 7,316596, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, softwar).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,346973 (regressionFit = 7,346970, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, colleg).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, util).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,343845 (regressionFit = 7,343843, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, introduct).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,329898 (regressionFit = 7,329896, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, great).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,343466 (regressionFit = 7,343464, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, reason).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,315894 (regressionFit = 7,315892, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, faq).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,061861 (regressionFit = 7,061859, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, http).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,335033 (regressionFit = 7,335031, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, tx).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,342273 (regressionFit = 7,342271, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, index).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,386360 (regressionFit = 7,386358, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, main).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,362097 (regressionFit = 7,362095, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, retriev).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, microsoft).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,134168 (regressionFit = 7,134166, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, onlin).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,181318 (regressionFit = 7,181316, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, connect).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971514 (regressionFit = 6,971512, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,982738 (regressionFit = 6,982736, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,137307 (regressionFit = 7,137305, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,164305 (regressionFit = 7,164303, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,983012 (regressionFit = 6,983010, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,081888 (regressionFit = 7,081885, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,912267 (regressionFit = 6,912265, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.9122665591812344

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.982738302898631

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.9830115583783146

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.081887612575169

***** Warning: #4 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, offic).  [covers 35,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, offic).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
Setting -0.010351761171745678 for 
 // Learned this clause on outer loop cycle #4.  It scores=-6,47 and has recall=0,22, precision=1,00, and F1=0,36 (using m-estimates).
 // It covers 21,7% of the positive examples, 35 of 161 (of which 24 are newly covered),
 // So far 55 (34,2%) of the positive examples have been covered.
(faculty(D) :- has(D, offic))

% On cycle #4, the best clause found is:
%      faculty(A) :- has(A, offic).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 35 positive examples, of which 24 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 4 best clauses covers 34,2% of the positive examples and NaN% of the negatives.}
% Have selected pos example #88 as the next seed: faculty(httpwwwcsutexaseduusersmlchillinhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 72 items to OPEN for evaluation and possible insertion.
% Have created 72 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032329 (regressionFit = 7,032328, penalties=1.03E-6) for clause:  faculty(A) :- has(A, logic).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,032329): faculty(A) :- has(A, logic).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,011550 (regressionFit = 7,011549, penalties=1.03E-6) for clause:  faculty(A) :- has(A, singl).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,011550): faculty(A) :- has(A, singl).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,033196 (regressionFit = 7,033195, penalties=1.03E-6) for clause:  faculty(A) :- has(A, detail).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,008749 (regressionFit = 7,008747, penalties=1.03E-6) for clause:  faculty(A) :- has(A, open).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,008749): faculty(A) :- has(A, open).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,950758 (regressionFit = 6,950757, penalties=1.03E-6) for clause:  faculty(A) :- has(A, approach).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,950758): faculty(A) :- has(A, approach).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,989312 (regressionFit = 6,989311, penalties=1.03E-6) for clause:  faculty(A) :- has(A, book).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,889169 (regressionFit = 6,889168, penalties=1.03E-6) for clause:  faculty(A) :- has(A, languag).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,889169): faculty(A) :- has(A, languag).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,397756 (regressionFit = 6,397755, penalties=1.03E-6) for clause:  faculty(A) :- has(A, proceed).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,397756): faculty(A) :- has(A, proceed).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,021415 (regressionFit = 7,021414, penalties=1.03E-6) for clause:  faculty(A) :- has(A, code).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,033184 (regressionFit = 7,033183, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,008673 (regressionFit = 7,008671, penalties=1.03E-6) for clause:  faculty(A) :- has(A, machin).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,995269 (regressionFit = 6,995268, penalties=1.03E-6) for clause:  faculty(A) :- has(A, intern).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,977997 (regressionFit = 6,977996, penalties=1.03E-6) for clause:  faculty(A) :- has(A, refer).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,010817 (regressionFit = 7,010815, penalties=1.03E-6) for clause:  faculty(A) :- has(A, learn).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,591314 (regressionFit = 6,591313, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,029021 (regressionFit = 7,029020, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,030913 (regressionFit = 7,030912, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,798234 (regressionFit = 6,798233, penalties=1.03E-6) for clause:  faculty(A) :- has(A, algorithm).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028074 (regressionFit = 7,028073, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028655 (regressionFit = 7,028654, penalties=1.03E-6) for clause:  faculty(A) :- has(A, found).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,977550 (regressionFit = 6,977549, penalties=1.03E-6) for clause:  faculty(A) :- has(A, pointer).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,934131 (regressionFit = 6,934130, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,906423 (regressionFit = 6,906422, penalties=1.03E-6) for clause:  faculty(A) :- has(A, imag).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,033292 (regressionFit = 7,033291, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,979336 (regressionFit = 6,979335, penalties=1.03E-6) for clause:  faculty(A) :- has(A, top).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,015527 (regressionFit = 7,015526, penalties=1.03E-6) for clause:  faculty(A) :- has(A, search).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,983290 (regressionFit = 6,983289, penalties=1.03E-6) for clause:  faculty(A) :- has(A, rang).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,951278 (regressionFit = 6,951277, penalties=1.03E-6) for clause:  faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,031481 (regressionFit = 7,031480, penalties=1.03E-6) for clause:  faculty(A) :- has(A, similar).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,998014 (regressionFit = 6,998013, penalties=1.03E-6) for clause:  faculty(A) :- has(A, induct).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,010277 (regressionFit = 7,010276, penalties=1.03E-6) for clause:  faculty(A) :- has(A, exist).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,886191 (regressionFit = 6,886190, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,951201 (regressionFit = 6,951200, penalties=1.03E-6) for clause:  faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,036135 (regressionFit = 7,036134, penalties=1.03E-6) for clause:  faculty(A) :- has(A, problem).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,629522 (regressionFit = 6,629521, penalties=1.03E-6) for clause:  faculty(A) :- has(A, pp).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,021475 (regressionFit = 7,021474, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ftp).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,029021 (regressionFit = 7,029020, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,008666 (regressionFit = 7,008665, penalties=1.03E-6) for clause:  faculty(A) :- has(A, standard).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,033596 (regressionFit = 7,033595, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,004041 (regressionFit = 7,004040, penalties=1.03E-6) for clause:  faculty(A) :- has(A, integr).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,020402 (regressionFit = 7,020401, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,035442 (regressionFit = 7,035441, penalties=1.03E-6) for clause:  faculty(A) :- has(A, complet).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,932237 (regressionFit = 6,932236, penalties=1.03E-6) for clause:  faculty(A) :- has(A, workshop).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028656 (regressionFit = 7,028655, penalties=1.03E-6) for clause:  faculty(A) :- has(A, techniqu).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,010420 (regressionFit = 7,010419, penalties=1.03E-6) for clause:  faculty(A) :- has(A, describ).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,971470 (regressionFit = 6,971469, penalties=1.03E-6) for clause:  faculty(A) :- has(A, method).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,940489 (regressionFit = 6,940488, penalties=1.03E-6) for clause:  faculty(A) :- has(A, john).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957950 (regressionFit = 6,957949, penalties=1.03E-6) for clause:  faculty(A) :- has(A, requir).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,031680 (regressionFit = 7,031679, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,019885 (regressionFit = 7,019884, penalties=1.03E-6) for clause:  faculty(A) :- has(A, exampl).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,034764 (regressionFit = 7,034763, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,031304 (regressionFit = 7,031303, penalties=1.03E-6) for clause:  faculty(A) :- has(A, combin).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,029642 (regressionFit = 7,029641, penalties=1.03E-6) for clause:  faculty(A) :- has(A, solution).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,873418 (regressionFit = 6,873417, penalties=1.03E-6) for clause:  faculty(A) :- has(A, includ).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,998642 (regressionFit = 6,998641, penalties=1.03E-6) for clause:  faculty(A) :- has(A, click).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,983794 (regressionFit = 6,983793, penalties=1.03E-6) for clause:  faculty(A) :- has(A, index).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,034331 (regressionFit = 7,034329, penalties=1.03E-6) for clause:  faculty(A) :- has(A, juli).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,034985 (regressionFit = 7,034984, penalties=1.03E-6) for clause:  faculty(A) :- has(A, natur).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,984370 (regressionFit = 6,984369, penalties=1.03E-6) for clause:  faculty(A) :- has(A, set).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,011938 (regressionFit = 7,011937, penalties=1.03E-6) for clause:  faculty(A) :- has(A, demonstr).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,851835 (regressionFit = 6,851834, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,260808 (regressionFit = 7,260807, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,036381 (regressionFit = 7,036380, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.851834678940349
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,855431 (regressionFit = 6,855429, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,828125 (regressionFit = 6,828123, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,851603 (regressionFit = 6,851601, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.828124738153164

% Consider expanding [#4 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.851603073555205

% Consider expanding [#5 of outerLoop #5, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.036381171435702
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,085663 (regressionFit = 7,085661, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,223827 (regressionFit = 7,223825, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,352673 (regressionFit = 7,352671, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,134255 (regressionFit = 7,134253, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,457415 (regressionFit = 7,457413, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,445340 (regressionFit = 7,445338, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,055091 (regressionFit = 7,055089, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,905235 (regressionFit = 6,905233, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,050306 (regressionFit = 7,050304, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,196972 (regressionFit = 7,196970, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,234116 (regressionFit = 7,234114, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,044236 (regressionFit = 7,044234, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,136307 (regressionFit = 7,136305, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,984924 (regressionFit = 6,984922, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.9849244002386

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.044235889326287

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.0503057794985935

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.136307230881919

***** Warning: #5 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, proceed).  [covers 13,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, proceed).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
Setting 0.09998848037426097 for 
 // Learned this clause on outer loop cycle #5.  It scores=-6,40 and has recall=0,08, precision=0,99, and F1=0,15 (using m-estimates).
 // It covers 8,1% of the positive examples, 13 of 161 (of which 7 are newly covered),
 // So far 62 (38,5%) of the positive examples have been covered.
(faculty(D) :- has(D, proceed))

% On cycle #5, the best clause found is:
%      faculty(A) :- has(A, proceed).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 13 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 5 best clauses covers 38,5% of the positive examples and NaN% of the negatives.}
% Have selected pos example #154 as the next seed: faculty(httpwwwcsutexaseduusersdwipcspprogassnhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 41 items to OPEN for evaluation and possible insertion.
% Have created 41 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,600671 (regressionFit = 6,600670, penalties=1.03E-6) for clause:  faculty(A) :- has(A, studi).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,600671): faculty(A) :- has(A, studi).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,568883 (regressionFit = 6,568881, penalties=1.03E-6) for clause:  faculty(A) :- has(A, suggest).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,568883): faculty(A) :- has(A, suggest).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,602767 (regressionFit = 6,602766, penalties=1.03E-6) for clause:  faculty(A) :- has(A, week).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,594631 (regressionFit = 6,594630, penalties=1.03E-6) for clause:  faculty(A) :- has(A, guid).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,600346 (regressionFit = 6,600345, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601516 (regressionFit = 6,601515, penalties=1.03E-6) for clause:  faculty(A) :- has(A, solution).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,528447 (regressionFit = 6,528446, penalties=1.03E-6) for clause:  faculty(A) :- has(A, test).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,528447): faculty(A) :- has(A, test).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,602233 (regressionFit = 6,602232, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,588625 (regressionFit = 6,588624, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ta).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,598638 (regressionFit = 6,598637, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,523799 (regressionFit = 6,523798, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nov).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,523799): faculty(A) :- has(A, nov).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601229 (regressionFit = 6,601228, penalties=1.03E-6) for clause:  faculty(A) :- has(A, option).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601942 (regressionFit = 6,601941, penalties=1.03E-6) for clause:  faculty(A) :- has(A, credit).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,588632 (regressionFit = 6,588631, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sundai).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,600346 (regressionFit = 6,600345, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,519482 (regressionFit = 6,519481, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,519482): faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,562310 (regressionFit = 6,562309, penalties=1.03E-6) for clause:  faculty(A) :- has(A, articl).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,537983 (regressionFit = 6,537982, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comment).  [covers 28,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,599876 (regressionFit = 6,599875, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,600227 (regressionFit = 6,600226, penalties=1.03E-6) for clause:  faculty(A) :- has(A, addition).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,593487 (regressionFit = 6,593486, penalties=1.03E-6) for clause:  faculty(A) :- has(A, assign).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,600871 (regressionFit = 6,600870, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,597223 (regressionFit = 6,597222, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,559018 (regressionFit = 6,559017, penalties=1.03E-6) for clause:  faculty(A) :- has(A, discuss).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,503879 (regressionFit = 6,503878, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,503879): faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,556494 (regressionFit = 6,556493, penalties=1.03E-6) for clause:  faculty(A) :- has(A, send).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,487621 (regressionFit = 6,487620, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,487621): faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,570307 (regressionFit = 6,570306, penalties=1.03E-6) for clause:  faculty(A) :- has(A, descript).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,603289 (regressionFit = 6,603288, penalties=1.03E-6) for clause:  faculty(A) :- has(A, session).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,395585 (regressionFit = 6,395584, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,395585): faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,817487 (regressionFit = 6,817486, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601980 (regressionFit = 6,601979, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.395585393706036
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,399181 (regressionFit = 6,399179, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,371875 (regressionFit = 6,371873, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,371875): faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,395354 (regressionFit = 6,395352, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.371875452918852

% Consider expanding [#4 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.395353788320893

% Consider expanding [#5 of outerLoop #6, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.601979844185275
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 153 items to OPEN for evaluation and possible insertion.
% Have created 153 valid-on-seeds descendants.
%     Score = -6,690817 (regressionFit = 6,690815, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,859091 (regressionFit = 6,859089, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,989437 (regressionFit = 6,989435, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,730519 (regressionFit = 6,730517, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,097425 (regressionFit = 7,097423, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,097413 (regressionFit = 7,097411, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,603199 (regressionFit = 6,603196, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,468681 (regressionFit = 6,468679, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,094288 (regressionFit = 7,094286, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, studi).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,096219 (regressionFit = 7,096217, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, suggest).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,596944 (regressionFit = 6,596942, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, jan).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, week).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,070524 (regressionFit = 7,070522, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, guid).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601264 (regressionFit = 6,601262, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mime).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,091772 (regressionFit = 7,091769, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, solution).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,063457 (regressionFit = 7,063455, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, test).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,589505 (regressionFit = 6,589503, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,046903 (regressionFit = 7,046901, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, ta).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,630496 (regressionFit = 6,630493, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, utexa).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,060857 (regressionFit = 7,060855, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, nov).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,090208 (regressionFit = 7,090205, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, option).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, credit).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, sundai).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601264 (regressionFit = 6,601262, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, version).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,072414 (regressionFit = 7,072412, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, home).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,070828 (regressionFit = 7,070826, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, articl).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,095961 (regressionFit = 7,095959, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, comment).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601264 (regressionFit = 6,601262, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, cern).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,078331 (regressionFit = 7,078329, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, addition).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,096915 (regressionFit = 7,096913, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, assign).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,580079 (regressionFit = 6,580077, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,034018 (regressionFit = 7,034016, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, link).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,067220 (regressionFit = 7,067217, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, discuss).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,548663 (regressionFit = 6,548661, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mondai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,072802 (regressionFit = 7,072800, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, send).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,934563 (regressionFit = 6,934561, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, program).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,095382 (regressionFit = 7,095380, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, descript).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,046956 (regressionFit = 7,046954, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, session).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,955590 (regressionFit = 6,955588, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, read).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,985780 (regressionFit = 6,985778, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, send).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,047070 (regressionFit = 7,047068, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ii).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,925801 (regressionFit = 6,925799, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, home).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,934889 (regressionFit = 6,934887, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, start).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,867555 (regressionFit = 6,867553, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, turn).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,992542 (regressionFit = 6,992540, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, requir).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,080380 (regressionFit = 7,080378, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, lectur).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,012090 (regressionFit = 7,012088, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, includ).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,905462 (regressionFit = 6,905460, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, present).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,067922 (regressionFit = 7,067920, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, midterm).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,075850 (regressionFit = 7,075848, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mit).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,719951 (regressionFit = 6,719949, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, jan).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,860425 (regressionFit = 6,860423, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, copi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028507 (regressionFit = 7,028505, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, semest).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,096844 (regressionFit = 7,096842, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, final).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,109736 (regressionFit = 7,109734, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, exam).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,107328 (regressionFit = 7,107326, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, teach).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,893045 (regressionFit = 6,893043, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, lab).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,089907 (regressionFit = 7,089905, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cost).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,992259 (regressionFit = 6,992257, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, discuss).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,927936 (regressionFit = 6,927934, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, comment).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,072792 (regressionFit = 7,072790, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, complet).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,043762 (regressionFit = 7,043760, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, note).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,868032 (regressionFit = 6,868030, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, algorithm).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,075850 (regressionFit = 7,075848, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, press).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,887213 (regressionFit = 6,887211, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, syllabu).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,009853 (regressionFit = 7,009851, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, studi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,562158 (regressionFit = 6,562156, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mondai).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,066302 (regressionFit = 7,066300, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, project).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,011131 (regressionFit = 7,011129, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, materi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,979247 (regressionFit = 6,979245, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, user).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,044840 (regressionFit = 7,044838, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, solution).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,907235 (regressionFit = 6,907233, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, class).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,069703 (regressionFit = 7,069701, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, set).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,002400 (regressionFit = 7,002398, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, test).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,089907 (regressionFit = 7,089905, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, major).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,355423 (regressionFit = 6,355421, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,355423): faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,013247 (regressionFit = 7,013245, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, written).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,021106 (regressionFit = 7,021103, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, parallel).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,621683 (regressionFit = 6,621681, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cern).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,118553 (regressionFit = 7,118551, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, involv).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,994987 (regressionFit = 6,994985, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, languag).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,075850 (regressionFit = 7,075848, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, principl).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,088280 (regressionFit = 7,088278, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, result).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,072792 (regressionFit = 7,072790, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, idea).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,144035 (regressionFit = 7,144033, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ta).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,999176 (regressionFit = 6,999174, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, group).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,490820 (regressionFit = 6,490818, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, utexa).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,046984 (regressionFit = 7,046982, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, session).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,990808 (regressionFit = 6,990806, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, due).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,048073 (regressionFit = 7,048071, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, articl).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,879269 (regressionFit = 6,879267, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, assign).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,909221 (regressionFit = 6,909219, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, descript).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,475841 (regressionFit = 6,475839, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, austin).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672142 (regressionFit = 6,672140, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mime).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,075972 (regressionFit = 7,075970, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, suggest).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,066580 (regressionFit = 7,066578, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, base).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,076778 (regressionFit = 7,076776, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, week).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,863124 (regressionFit = 6,863122, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, sep).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,019915 (regressionFit = 7,019913, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, object).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,973693 (regressionFit = 6,973691, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, link).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,009821 (regressionFit = 7,009819, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, problem).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,072792 (regressionFit = 7,072790, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, formal).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,089907 (regressionFit = 7,089905, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, receiv).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672142 (regressionFit = 6,672140, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, version).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,635508 (regressionFit = 6,635506, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, comput).  [covers 33,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,530835 (regressionFit = 6,530833, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, univers).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,923538 (regressionFit = 6,923536, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, intellig).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,085288 (regressionFit = 7,085286, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, print).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,038370 (regressionFit = 7,038368, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, chapter).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,073844 (regressionFit = 7,073842, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, review).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,655330 (regressionFit = 6,655328, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,760033 (regressionFit = 6,760031, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, work).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,950375 (regressionFit = 6,950373, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, wide).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,075850 (regressionFit = 7,075848, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, compon).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601981 (regressionFit = 6,601979, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,880675 (regressionFit = 6,880673, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, state).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,686054 (regressionFit = 6,686052, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,046397 (regressionFit = 7,046394, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, great).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,854788 (regressionFit = 6,854786, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, fall).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,084277 (regressionFit = 7,084275, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, architectur).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,075850 (regressionFit = 7,075848, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, miss).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,115826 (regressionFit = 7,115824, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, sundai).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,858290 (regressionFit = 6,858288, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, option).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,089907 (regressionFit = 7,089905, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, addition).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,089907 (regressionFit = 7,089905, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, proof).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,105253 (regressionFit = 7,105251, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, don).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,923538 (regressionFit = 6,923536, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, artifici).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,082534 (regressionFit = 7,082532, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, understand).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,046956 (regressionFit = 7,046954, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cover).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,598311 (regressionFit = 6,598309, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, scienc).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,024058 (regressionFit = 7,024056, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, guid).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,082563 (regressionFit = 7,082561, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, grade).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,098585 (regressionFit = 7,098583, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, area).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,641392 (regressionFit = 6,641390, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,793156 (regressionFit = 6,793154, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,851051 (regressionFit = 6,851049, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,598708 (regressionFit = 6,598706, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714524 (regressionFit = 6,714522, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,538337 (regressionFit = 6,538335, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.538337209404247

% Consider expanding [#7 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.598708318853473

% Consider expanding [#8 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.641391786448828

% Consider expanding [#9 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.714524177927965

***** Warning: #6 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
Setting -0.05159232057047953 for 
 // Learned this clause on outer loop cycle #6.  It scores=-6,36 and has recall=0,19, precision=1,00, and F1=0,31 (using m-estimates).
 // It covers 18,6% of the positive examples, 30 of 161 (of which 13 are newly covered),
 // So far 75 (46,6%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon4671, D), has(Anon4671, texa))

% On cycle #6, the best clause found is:
%      faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 30 positive examples, of which 13 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 6 best clauses covers 46,6% of the positive examples and NaN% of the negatives.}
% Have selected pos example #55 as the next seed: faculty(httpwwwphutexasedu)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #7, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 39 items to OPEN for evaluation and possible insertion.
% Have created 39 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,514386 (regressionFit = 6,514385, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,514386): faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,849334 (regressionFit = 6,849333, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mon).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,871976 (regressionFit = 6,871975, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,754596 (regressionFit = 6,754595, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,857228 (regressionFit = 6,857227, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ncsa).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,856283 (regressionFit = 6,856282, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tx).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,872965 (regressionFit = 6,872964, penalties=1.03E-6) for clause:  faculty(A) :- has(A, colleg).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,862753 (regressionFit = 6,862752, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,872589 (regressionFit = 6,872588, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thu).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,832589 (regressionFit = 6,832588, penalties=1.03E-6) for clause:  faculty(A) :- has(A, undergradu).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,872901 (regressionFit = 6,872900, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,763457 (regressionFit = 6,763456, penalties=1.03E-6) for clause:  faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,855894 (regressionFit = 6,855893, penalties=1.03E-6) for clause:  faculty(A) :- has(A, natur).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,858702 (regressionFit = 6,858701, penalties=1.03E-6) for clause:  faculty(A) :- has(A, event).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,870304 (regressionFit = 6,870303, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,859581 (regressionFit = 6,859580, penalties=1.03E-6) for clause:  faculty(A) :- has(A, peopl).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,856893 (regressionFit = 6,856892, penalties=1.03E-6) for clause:  faculty(A) :- has(A, give).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,715672 (regressionFit = 6,715671, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,871364 (regressionFit = 6,871363, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,650033 (regressionFit = 6,650032, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,872243 (regressionFit = 6,872242, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graduat).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,868634 (regressionFit = 6,868633, penalties=1.03E-6) for clause:  faculty(A) :- has(A, physic).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,698966 (regressionFit = 6,698965, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,586901 (regressionFit = 6,586900, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,810166 (regressionFit = 6,810165, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,761705 (regressionFit = 6,761704, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,805831 (regressionFit = 6,805830, penalties=1.03E-6) for clause:  faculty(A) :- has(A, center).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,560298 (regressionFit = 6,560297, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,921751 (regressionFit = 6,921750, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714574 (regressionFit = 6,714573, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.56029768589215
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,582953 (regressionFit = 6,582950, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,508652 (regressionFit = 6,508650, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,508652): faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,591485 (regressionFit = 6,591483, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.508652236891788

% Consider expanding [#4 of outerLoop #7, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.591485080993202

% Consider expanding [#5 of outerLoop #7, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.714574430928513
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 100 items to OPEN for evaluation and possible insertion.
% Have created 100 valid-on-seeds descendants.
%     Score = -6,936796 (regressionFit = 6,936794, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,229877 (regressionFit = 7,229875, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,306453 (regressionFit = 7,306451, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957087 (regressionFit = 6,957085, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,450138 (regressionFit = 7,450136, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,437480 (regressionFit = 7,437478, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,703153 (regressionFit = 6,703150, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,624046 (regressionFit = 6,624044, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,881825 (regressionFit = 6,881823, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, research).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mon).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,706285 (regressionFit = 6,706283, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,807106 (regressionFit = 6,807104, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, texa).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,450327 (regressionFit = 7,450325, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, ncsa).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,341143 (regressionFit = 7,341141, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, tx).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,181905 (regressionFit = 7,181903, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, colleg).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,354961 (regressionFit = 7,354959, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, link).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,442480 (regressionFit = 7,442478, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, thu).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,435010 (regressionFit = 7,435008, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, undergradu).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,782752 (regressionFit = 6,782750, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, utexa).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,148766 (regressionFit = 7,148764, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, group).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,414283 (regressionFit = 7,414281, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, natur).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,451643 (regressionFit = 7,451641, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, event).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,754954 (regressionFit = 6,754952, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, austin).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,445895 (regressionFit = 7,445893, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, peopl).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,436658 (regressionFit = 7,436656, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, give).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,817084 (regressionFit = 6,817082, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, scienc).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,706257 (regressionFit = 6,706255, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, jan).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,703957 (regressionFit = 6,703954, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,711030 (regressionFit = 6,711028, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, comput).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,410507 (regressionFit = 7,410505, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, graduat).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,349013 (regressionFit = 7,349011, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, physic).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,877609 (regressionFit = 6,877607, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, univers).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,660533 (regressionFit = 6,660531, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, inform).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,103069 (regressionFit = 7,103067, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, depart).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,450126 (regressionFit = 7,450124, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, ut).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,309684 (regressionFit = 7,309682, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, center).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,399754 (regressionFit = 7,399752, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, foundat).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,989830 (regressionFit = 6,989828, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, program).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,401090 (regressionFit = 7,401088, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, electron).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,845453 (regressionFit = 6,845451, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,425719 (regressionFit = 7,425717, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, colleg).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,408010 (regressionFit = 7,408008, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mon).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,443560 (regressionFit = 7,443558, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, academ).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,429641 (regressionFit = 7,429639, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, lectur).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,433213 (regressionFit = 7,433211, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, report).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,648288 (regressionFit = 6,648286, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, austin).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,702109 (regressionFit = 6,702107, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, scienc).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,851923 (regressionFit = 6,851921, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, research).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,427855 (regressionFit = 7,427853, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, natur).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,041306 (regressionFit = 7,041304, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, offic).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,319648 (regressionFit = 7,319646, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, unit).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,388677 (regressionFit = 7,388675, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, dai).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,392250 (regressionFit = 7,392248, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, jame).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,227333 (regressionFit = 7,227331, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ncsa).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,419509 (regressionFit = 7,419507, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, question).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,363978 (regressionFit = 7,363976, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, dec).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, statist).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,380319 (regressionFit = 7,380317, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, undergradu).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,163381 (regressionFit = 7,163379, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, directori).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,291683 (regressionFit = 7,291681, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, center).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,866645 (regressionFit = 6,866643, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, jan).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,439160 (regressionFit = 7,439158, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, build).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,272863 (regressionFit = 7,272861, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ut).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,421890 (regressionFit = 7,421888, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, summer).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,331687 (regressionFit = 7,331685, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, robert).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,250182 (regressionFit = 7,250180, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, hall).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,309316 (regressionFit = 7,309314, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, problem).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,523336 (regressionFit = 7,523334, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, organ).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,376958 (regressionFit = 7,376956, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, develop).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,459080 (regressionFit = 7,459077, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, servic).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,184581 (regressionFit = 7,184579, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, student).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,425042 (regressionFit = 7,425040, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, job).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,935904 (regressionFit = 6,935902, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, public).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,375217 (regressionFit = 7,375215, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, event).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,818972 (regressionFit = 6,818970, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,453890 (regressionFit = 7,453888, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, schedul).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714575 (regressionFit = 6,714573, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,344683 (regressionFit = 7,344681, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, open).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,030975 (regressionFit = 7,030973, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, depart).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,871048 (regressionFit = 6,871046, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,952059 (regressionFit = 6,952057, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,106602 (regressionFit = 7,106600, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,712787 (regressionFit = 6,712785, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,759295 (regressionFit = 6,759293, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,697963 (regressionFit = 6,697961, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #7, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.697962874470251

% Consider expanding [#7 of outerLoop #7, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.71278689564432

% Consider expanding [#8 of outerLoop #7, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.759294820085298

% Consider expanding [#9 of outerLoop #7, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.871047884631386

***** Warning: #7 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
Setting 0.041951773692269496 for 
 // Learned this clause on outer loop cycle #7.  It scores=-6,51 and has recall=0,06, precision=0,99, and F1=0,12 (using m-estimates).
 // It covers 6,2% of the positive examples, 10 of 161 (of which 0 are newly covered),
 // So far 75 (46,6%) of the positive examples have been covered.
(faculty(D) :- linkto(D, D), linkto(D, Anon6409))

% On cycle #7, the best clause found is:
%      faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 10 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 7 best clauses covers 46,6% of the positive examples and NaN% of the negatives.}
% Have selected pos example #87 as the next seed: faculty(httpwwwcsutexaseduuserslamNRLipatmhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #8, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 25 items to OPEN for evaluation and possible insertion.
% Have created 25 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,721807 (regressionFit = 6,721806, penalties=1.03E-6) for clause:  faculty(A) :- has(A, workshop).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,721807): faculty(A) :- has(A, workshop).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,739043 (regressionFit = 6,739042, penalties=1.03E-6) for clause:  faculty(A) :- has(A, talk).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,730445 (regressionFit = 6,730444, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,739181 (regressionFit = 6,739180, penalties=1.03E-6) for clause:  faculty(A) :- has(A, position).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,652285 (regressionFit = 6,652284, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nov).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,652285): faculty(A) :- has(A, nov).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,743802 (regressionFit = 6,743801, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,740110 (regressionFit = 6,740109, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,739264 (regressionFit = 6,739263, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,743518 (regressionFit = 6,743517, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,727645 (regressionFit = 6,727644, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,700340 (regressionFit = 6,700339, penalties=1.03E-6) for clause:  faculty(A) :- has(A, integr).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,740110 (regressionFit = 6,740109, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, atm).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,560298 (regressionFit = 6,560297, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,560298): faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,864694 (regressionFit = 6,864692, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,637903 (regressionFit = 6,637902, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.5602976858921505
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,563621 (regressionFit = 6,563619, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,531983 (regressionFit = 6,531981, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,531983): faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,561099 (regressionFit = 6,561097, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.531983166851456

% Consider expanding [#4 of outerLoop #8, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.561098632778879

% Consider expanding [#5 of outerLoop #8, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.637903069891766
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,815780 (regressionFit = 6,815778, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,070556 (regressionFit = 7,070554, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,181545 (regressionFit = 7,181543, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,834805 (regressionFit = 6,834803, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,299059 (regressionFit = 7,299057, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,294555 (regressionFit = 7,294553, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,630462 (regressionFit = 6,630460, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,535678 (regressionFit = 6,535676, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,799864 (regressionFit = 6,799862, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,895589 (regressionFit = 6,895587, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,038075 (regressionFit = 7,038073, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,637644 (regressionFit = 6,637642, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,700235 (regressionFit = 6,700233, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,608227 (regressionFit = 6,608225, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #8, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.6082271805543265

% Consider expanding [#7 of outerLoop #8, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.637643869626065

% Consider expanding [#8 of outerLoop #8, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.700235272155204

% Consider expanding [#9 of outerLoop #8, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.799864260996169

***** Warning: #8 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
Setting 0.025171064215361673 for 
 // Learned this clause on outer loop cycle #8.  It scores=-6,53 and has recall=0,06, precision=0,99, and F1=0,12 (using m-estimates).
 // It covers 6,2% of the positive examples, 10 of 161 (of which 0 are newly covered),
 // So far 75 (46,6%) of the positive examples have been covered.
(faculty(D) :- linkto(D, D), linkto(D, Anon7467))

% On cycle #8, the best clause found is:
%      faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 10 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 8 best clauses covers 46,6% of the positive examples and NaN% of the negatives.}
% Have selected pos example #31 as the next seed: faculty(httpwwwcsutexaseduusersrupertcogscihtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #9, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 65 items to OPEN for evaluation and possible insertion.
% Have created 65 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,615242 (regressionFit = 6,615241, penalties=1.03E-6) for clause:  faculty(A) :- has(A, center).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,615242): faculty(A) :- has(A, center).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,684627 (regressionFit = 6,684626, penalties=1.03E-6) for clause:  faculty(A) :- has(A, neural).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,678267 (regressionFit = 6,678266, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,634466 (regressionFit = 6,634465, penalties=1.03E-6) for clause:  faculty(A) :- has(A, artifici).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,273376 (regressionFit = 6,273375, penalties=1.03E-6) for clause:  faculty(A) :- has(A, associ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,273376): faculty(A) :- has(A, associ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,667722 (regressionFit = 6,667721, penalties=1.03E-6) for clause:  faculty(A) :- has(A, school).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,677232 (regressionFit = 6,677231, penalties=1.03E-6) for clause:  faculty(A) :- has(A, human).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,683117 (regressionFit = 6,683116, penalties=1.03E-6) for clause:  faculty(A) :- has(A, architectur).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,399555 (regressionFit = 6,399554, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,677456 (regressionFit = 6,677455, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,666667 (regressionFit = 6,666666, penalties=1.03E-6) for clause:  faculty(A) :- has(A, reason).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,626446 (regressionFit = 6,626445, penalties=1.03E-6) for clause:  faculty(A) :- has(A, term).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,577248 (regressionFit = 6,577247, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,582725 (regressionFit = 6,582724, penalties=1.03E-6) for clause:  faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,632196 (regressionFit = 6,632195, penalties=1.03E-6) for clause:  faculty(A) :- has(A, defin).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,684761 (regressionFit = 6,684760, penalties=1.03E-6) for clause:  faculty(A) :- has(A, knowledg).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,643830 (regressionFit = 6,643829, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ai).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,579056 (regressionFit = 6,579055, penalties=1.03E-6) for clause:  faculty(A) :- has(A, explor).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,304046 (regressionFit = 6,304045, penalties=1.03E-6) for clause:  faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,647786 (regressionFit = 6,647785, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mathemat).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,633257 (regressionFit = 6,633256, penalties=1.03E-6) for clause:  faculty(A) :- has(A, learn).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,533511 (regressionFit = 6,533510, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,524631 (regressionFit = 6,524630, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,683150 (regressionFit = 6,683149, penalties=1.03E-6) for clause:  faculty(A) :- has(A, microsoft).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,682578 (regressionFit = 6,682577, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,680241 (regressionFit = 6,680240, penalties=1.03E-6) for clause:  faculty(A) :- has(A, directori).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,469552 (regressionFit = 6,469551, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601782 (regressionFit = 6,601781, penalties=1.03E-6) for clause:  faculty(A) :- has(A, book).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,625769 (regressionFit = 6,625768, penalties=1.03E-6) for clause:  faculty(A) :- has(A, formal).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,667378 (regressionFit = 6,667377, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,682601 (regressionFit = 6,682600, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,591221 (regressionFit = 6,591220, penalties=1.03E-6) for clause:  faculty(A) :- has(A, number).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,576999 (regressionFit = 6,576998, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nation).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,526406 (regressionFit = 6,526405, penalties=1.03E-6) for clause:  faculty(A) :- has(A, laboratori).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,644069 (regressionFit = 6,644068, penalties=1.03E-6) for clause:  faculty(A) :- has(A, represent).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,678267 (regressionFit = 6,678266, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,677763 (regressionFit = 6,677762, penalties=1.03E-6) for clause:  faculty(A) :- has(A, lot).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,682192 (regressionFit = 6,682191, penalties=1.03E-6) for clause:  faculty(A) :- has(A, intellig).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,675599 (regressionFit = 6,675598, penalties=1.03E-6) for clause:  faculty(A) :- has(A, understand).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,470182 (regressionFit = 6,470181, penalties=1.03E-6) for clause:  faculty(A) :- has(A, technologi).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,529867 (regressionFit = 6,529866, penalties=1.03E-6) for clause:  faculty(A) :- has(A, institut).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,647002 (regressionFit = 6,647001, penalties=1.03E-6) for clause:  faculty(A) :- has(A, www).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,333660 (regressionFit = 6,333658, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,684934 (regressionFit = 6,684933, penalties=1.03E-6) for clause:  faculty(A) :- has(A, intern).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,680482 (regressionFit = 6,680481, penalties=1.03E-6) for clause:  faculty(A) :- has(A, network).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,679220 (regressionFit = 6,679219, penalties=1.03E-6) for clause:  faculty(A) :- has(A, theori).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,670405 (regressionFit = 6,670404, penalties=1.03E-6) for clause:  faculty(A) :- has(A, decision).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,654965 (regressionFit = 6,654964, penalties=1.03E-6) for clause:  faculty(A) :- has(A, machin).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,680924 (regressionFit = 6,680923, penalties=1.03E-6) for clause:  faculty(A) :- has(A, academ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,618365 (regressionFit = 6,618364, penalties=1.03E-6) for clause:  faculty(A) :- has(A, click).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,642648 (regressionFit = 6,642647, penalties=1.03E-6) for clause:  faculty(A) :- has(A, integr).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,622422 (regressionFit = 6,622421, penalties=1.03E-6) for clause:  faculty(A) :- has(A, aug).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,662030 (regressionFit = 6,662029, penalties=1.03E-6) for clause:  faculty(A) :- has(A, simul).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,560298 (regressionFit = 6,560297, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,841860 (regressionFit = 6,841859, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,604913 (regressionFit = 6,604912, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #9, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.5602976858921505
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,554288 (regressionFit = 6,554286, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,549361 (regressionFit = 6,549359, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,545357 (regressionFit = 6,545355, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #9, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.545356631817239

% Consider expanding [#4 of outerLoop #9, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.549360831353837

% Consider expanding [#5 of outerLoop #9, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.60491340819123
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,757859 (regressionFit = 6,757857, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,989587 (regressionFit = 6,989585, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,121068 (regressionFit = 7,121066, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,776508 (regressionFit = 6,776506, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,222896 (regressionFit = 7,222894, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,223719 (regressionFit = 7,223717, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,600780 (regressionFit = 6,600777, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,496121 (regressionFit = 6,496119, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,765652 (regressionFit = 6,765650, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,872417 (regressionFit = 6,872415, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,003717 (regressionFit = 7,003715, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,605872 (regressionFit = 6,605870, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,679177 (regressionFit = 6,679175, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,566432 (regressionFit = 6,566430, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #9, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.566432145936341

% Consider expanding [#7 of outerLoop #9, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.605871593808244

% Consider expanding [#8 of outerLoop #9, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.679177310382796

% Consider expanding [#9 of outerLoop #9, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.765651545874529

***** Warning: #9 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, associ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, associ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
Setting 0.02316466932242951 for 
 // Learned this clause on outer loop cycle #9.  It scores=-6,27 and has recall=0,12, precision=0,99, and F1=0,21 (using m-estimates).
 // It covers 11,8% of the positive examples, 19 of 161 (of which 5 are newly covered),
 // So far 80 (49,7%) of the positive examples have been covered.
(faculty(D) :- has(D, associ))

% On cycle #9, the best clause found is:
%      faculty(A) :- has(A, associ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 19 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 9 best clauses covers 49,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #116 as the next seed: faculty(httpwwwcsutexaseduusersdwipcsptestsolmidtermsolhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #10, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 100 items to OPEN for evaluation and possible insertion.
% Have created 100 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,537069 (regressionFit = 6,537068, penalties=1.03E-6) for clause:  faculty(A) :- has(A, add).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,537069): faculty(A) :- has(A, add).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, averag).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,555419 (regressionFit = 6,555418, penalties=1.03E-6) for clause:  faculty(A) :- has(A, larg).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,565609 (regressionFit = 6,565608, penalties=1.03E-6) for clause:  faculty(A) :- has(A, complet).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,485467 (regressionFit = 6,485466, penalties=1.03E-6) for clause:  faculty(A) :- has(A, constraint).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,485467): faculty(A) :- has(A, constraint).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,570455 (regressionFit = 6,570454, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,522656 (regressionFit = 6,522655, penalties=1.03E-6) for clause:  faculty(A) :- has(A, correct).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,514471 (regressionFit = 6,514470, penalties=1.03E-6) for clause:  faculty(A) :- has(A, order).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,555440 (regressionFit = 6,555439, penalties=1.03E-6) for clause:  faculty(A) :- has(A, store).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,519244 (regressionFit = 6,519243, penalties=1.03E-6) for clause:  faculty(A) :- has(A, defin).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,564997 (regressionFit = 6,564996, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,418977 (regressionFit = 6,418976, penalties=1.03E-6) for clause:  faculty(A) :- has(A, implem).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,418977): faculty(A) :- has(A, implem).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,553596 (regressionFit = 6,553594, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,465202 (regressionFit = 6,465201, penalties=1.03E-6) for clause:  faculty(A) :- has(A, includ).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,526836 (regressionFit = 6,526835, penalties=1.03E-6) for clause:  faculty(A) :- has(A, statem).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,468579 (regressionFit = 6,468578, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,572533 (regressionFit = 6,572532, penalties=1.03E-6) for clause:  faculty(A) :- has(A, midterm).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,545996 (regressionFit = 6,545995, penalties=1.03E-6) for clause:  faculty(A) :- has(A, locat).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,559242 (regressionFit = 6,559241, penalties=1.03E-6) for clause:  faculty(A) :- has(A, part).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,519563 (regressionFit = 6,519562, penalties=1.03E-6) for clause:  faculty(A) :- has(A, formal).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,529948 (regressionFit = 6,529947, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paramet).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,551697 (regressionFit = 6,551696, penalties=1.03E-6) for clause:  faculty(A) :- has(A, real).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,543285 (regressionFit = 6,543284, penalties=1.03E-6) for clause:  faculty(A) :- has(A, integ).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,515611 (regressionFit = 6,515609, penalties=1.03E-6) for clause:  faculty(A) :- has(A, search).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,570631 (regressionFit = 6,570630, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,562340 (regressionFit = 6,562339, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gener).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,383041 (regressionFit = 6,383040, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,383041): faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,545070 (regressionFit = 6,545069, penalties=1.03E-6) for clause:  faculty(A) :- has(A, run).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,565284 (regressionFit = 6,565283, penalties=1.03E-6) for clause:  faculty(A) :- has(A, import).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,481398 (regressionFit = 6,481397, penalties=1.03E-6) for clause:  faculty(A) :- has(A, string).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,450713 (regressionFit = 6,450712, penalties=1.03E-6) for clause:  faculty(A) :- has(A, don).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,462419 (regressionFit = 6,462418, penalties=1.03E-6) for clause:  faculty(A) :- has(A, requir).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,518459 (regressionFit = 6,518458, penalties=1.03E-6) for clause:  faculty(A) :- has(A, index).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,438932 (regressionFit = 6,438931, penalties=1.03E-6) for clause:  faculty(A) :- has(A, algorithm).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,458172 (regressionFit = 6,458171, penalties=1.03E-6) for clause:  faculty(A) :- has(A, top).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,568914 (regressionFit = 6,568913, penalties=1.03E-6) for clause:  faculty(A) :- has(A, solution).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,568917 (regressionFit = 6,568916, penalties=1.03E-6) for clause:  faculty(A) :- has(A, word).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,420272 (regressionFit = 6,420271, penalties=1.03E-6) for clause:  faculty(A) :- has(A, report).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,517972 (regressionFit = 6,517971, penalties=1.03E-6) for clause:  faculty(A) :- has(A, call).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,570758 (regressionFit = 6,570757, penalties=1.03E-6) for clause:  faculty(A) :- has(A, write).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,539961 (regressionFit = 6,539960, penalties=1.03E-6) for clause:  faculty(A) :- has(A, end).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,477164 (regressionFit = 6,477163, penalties=1.03E-6) for clause:  faculty(A) :- has(A, number).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,536416 (regressionFit = 6,536415, penalties=1.03E-6) for clause:  faculty(A) :- has(A, singl).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,529020 (regressionFit = 6,529019, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ll).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,564007 (regressionFit = 6,564006, penalties=1.03E-6) for clause:  faculty(A) :- has(A, procedur).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,549267 (regressionFit = 6,549266, penalties=1.03E-6) for clause:  faculty(A) :- has(A, determin).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,473817 (regressionFit = 6,473816, penalties=1.03E-6) for clause:  faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,569495 (regressionFit = 6,569494, penalties=1.03E-6) for clause:  faculty(A) :- has(A, develop).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,529797 (regressionFit = 6,529796, penalties=1.03E-6) for clause:  faculty(A) :- has(A, built).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,460543 (regressionFit = 6,460542, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oper).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,460928 (regressionFit = 6,460927, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,568343 (regressionFit = 6,568342, penalties=1.03E-6) for clause:  faculty(A) :- has(A, record).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, item).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,512021 (regressionFit = 6,512020, penalties=1.03E-6) for clause:  faculty(A) :- has(A, initi).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,504827 (regressionFit = 6,504826, penalties=1.03E-6) for clause:  faculty(A) :- has(A, case).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,564997 (regressionFit = 6,564996, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,565310 (regressionFit = 6,565309, penalties=1.03E-6) for clause:  faculty(A) :- has(A, enter).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,570267 (regressionFit = 6,570266, penalties=1.03E-6) for clause:  faculty(A) :- has(A, databas).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,566078 (regressionFit = 6,566077, penalties=1.03E-6) for clause:  faculty(A) :- has(A, copi).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,570079 (regressionFit = 6,570078, penalties=1.03E-6) for clause:  faculty(A) :- has(A, match).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,529948 (regressionFit = 6,529947, penalties=1.03E-6) for clause:  faculty(A) :- has(A, track).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,567131 (regressionFit = 6,567130, penalties=1.03E-6) for clause:  faculty(A) :- has(A, problem).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,315751 (regressionFit = 6,315749, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,315751): faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,484452 (regressionFit = 6,484451, penalties=1.03E-6) for clause:  faculty(A) :- has(A, set).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,505468 (regressionFit = 6,505467, penalties=1.03E-6) for clause:  faculty(A) :- has(A, function).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,537277 (regressionFit = 6,537276, penalties=1.03E-6) for clause:  faculty(A) :- has(A, machin).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,553244 (regressionFit = 6,553243, penalties=1.03E-6) for clause:  faculty(A) :- has(A, print).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,546466 (regressionFit = 6,546465, penalties=1.03E-6) for clause:  faculty(A) :- has(A, rule).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,572449 (regressionFit = 6,572448, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oct).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,487800 (regressionFit = 6,487799, penalties=1.03E-6) for clause:  faculty(A) :- has(A, output).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,542225 (regressionFit = 6,542224, penalties=1.03E-6) for clause:  faculty(A) :- has(A, processor).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,508456 (regressionFit = 6,508455, penalties=1.03E-6) for clause:  faculty(A) :- has(A, begin).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,522619 (regressionFit = 6,522618, penalties=1.03E-6) for clause:  faculty(A) :- has(A, effect).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,568222 (regressionFit = 6,568221, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gt).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,491645 (regressionFit = 6,491644, penalties=1.03E-6) for clause:  faculty(A) :- has(A, titl).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, loop).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,572265 (regressionFit = 6,572264, penalties=1.03E-6) for clause:  faculty(A) :- has(A, perform).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,564315 (regressionFit = 6,564314, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,540246 (regressionFit = 6,540245, penalties=1.03E-6) for clause:  faculty(A) :- has(A, class).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,570575 (regressionFit = 6,570574, penalties=1.03E-6) for clause:  faculty(A) :- has(A, variabl).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,518083 (regressionFit = 6,518082, penalties=1.03E-6) for clause:  faculty(A) :- has(A, written).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,566856 (regressionFit = 6,566855, penalties=1.03E-6) for clause:  faculty(A) :- has(A, meet).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,557107 (regressionFit = 6,557106, penalties=1.03E-6) for clause:  faculty(A) :- has(A, time).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,482179 (regressionFit = 6,482178, penalties=1.03E-6) for clause:  faculty(A) :- has(A, find).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,510387 (regressionFit = 6,510386, penalties=1.03E-6) for clause:  faculty(A) :- has(A, arrai).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,568222 (regressionFit = 6,568221, penalties=1.03E-6) for clause:  faculty(A) :- has(A, lt).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,570156 (regressionFit = 6,570155, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sum).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,566164 (regressionFit = 6,566163, penalties=1.03E-6) for clause:  faculty(A) :- has(A, position).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,467161 (regressionFit = 6,467160, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,746327 (regressionFit = 6,746326, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,505991 (regressionFit = 6,505990, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #10, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.467160755437077
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,457348 (regressionFit = 6,457346, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,464576 (regressionFit = 6,464574, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,441915 (regressionFit = 6,441913, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #10, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.441915027427406

% Consider expanding [#4 of outerLoop #10, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.464575736899159

% Consider expanding [#5 of outerLoop #10, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.505990629852502
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,642251 (regressionFit = 6,642249, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,869523 (regressionFit = 6,869521, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,015378 (regressionFit = 7,015376, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,660176 (regressionFit = 6,660174, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,111138 (regressionFit = 7,111136, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,110967 (regressionFit = 7,110965, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,500508 (regressionFit = 6,500506, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,395158 (regressionFit = 6,395156, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,671171 (regressionFit = 6,671169, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,780270 (regressionFit = 6,780268, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,905755 (regressionFit = 6,905753, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,511898 (regressionFit = 6,511896, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,591356 (regressionFit = 6,591353, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,453081 (regressionFit = 6,453079, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #10, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.4530806527712405

% Consider expanding [#7 of outerLoop #10, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.511897906341442

% Consider expanding [#8 of outerLoop #10, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.591355559689732

% Consider expanding [#9 of outerLoop #10, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.671171069077368

***** Warning: #10 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
Setting -0.06868363878851061 for 
 // Learned this clause on outer loop cycle #10.  It scores=-6,32 and has recall=0,40, precision=1,00, and F1=0,57 (using m-estimates).
 // It covers 39,8% of the positive examples, 64 of 161 (of which 24 are newly covered),
 // So far 104 (64,6%) of the positive examples have been covered.
(faculty(D) :- has(D, inform))

% On cycle #10, the best clause found is:
%      faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 64 positive examples, of which 24 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 10 best clauses covers 64,6% of the positive examples and NaN% of the negatives.}
% Have selected pos example #32 as the next seed: faculty(httpwwwcsutexaseduusersadamsvrmlindexhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #11, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 68 items to OPEN for evaluation and possible insertion.
% Have created 68 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,184690 (regressionFit = 7,184689, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,184690): faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,186652 (regressionFit = 7,186651, penalties=1.03E-6) for clause:  faculty(A) :- has(A, introduct).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,173363 (regressionFit = 7,173362, penalties=1.03E-6) for clause:  faculty(A) :- has(A, time).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,173363): faculty(A) :- has(A, time).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,181140 (regressionFit = 7,181139, penalties=1.03E-6) for clause:  faculty(A) :- has(A, solution).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,179964 (regressionFit = 7,179963, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,179431 (regressionFit = 7,179430, penalties=1.03E-6) for clause:  faculty(A) :- has(A, wednesdai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,069701 (regressionFit = 7,069700, penalties=1.03E-6) for clause:  faculty(A) :- has(A, algorithm).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,069701): faculty(A) :- has(A, algorithm).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,184851 (regressionFit = 7,184850, penalties=1.03E-6) for clause:  faculty(A) :- has(A, complet).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,186526 (regressionFit = 7,186525, penalties=1.03E-6) for clause:  faculty(A) :- has(A, specif).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,176808 (regressionFit = 7,176807, penalties=1.03E-6) for clause:  faculty(A) :- has(A, propos).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,142218 (regressionFit = 7,142217, penalties=1.03E-6) for clause:  faculty(A) :- has(A, step).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,180878 (regressionFit = 7,180877, penalties=1.03E-6) for clause:  faculty(A) :- has(A, compress).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,139488 (regressionFit = 7,139487, penalties=1.03E-6) for clause:  faculty(A) :- has(A, open).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,748732 (regressionFit = 6,748731, penalties=1.03E-6) for clause:  faculty(A) :- has(A, process).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,748732): faculty(A) :- has(A, process).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,166691 (regressionFit = 7,166690, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gener).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,184557 (regressionFit = 7,184556, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,124939 (regressionFit = 7,124938, penalties=1.03E-6) for clause:  faculty(A) :- has(A, requir).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,170020 (regressionFit = 7,170019, penalties=1.03E-6) for clause:  faculty(A) :- has(A, structur).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,117919 (regressionFit = 7,117917, penalties=1.03E-6) for clause:  faculty(A) :- has(A, goal).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,129037 (regressionFit = 7,129036, penalties=1.03E-6) for clause:  faculty(A) :- has(A, set).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, binari).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,184412 (regressionFit = 7,184411, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,096522 (regressionFit = 7,096521, penalties=1.03E-6) for clause:  faculty(A) :- has(A, approach).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,129635 (regressionFit = 7,129634, penalties=1.03E-6) for clause:  faculty(A) :- has(A, identifi).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,156289 (regressionFit = 7,156288, penalties=1.03E-6) for clause:  faculty(A) :- has(A, richard).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,067460 (regressionFit = 7,067458, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,186465 (regressionFit = 7,186464, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dynam).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,181806 (regressionFit = 7,181804, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,063287 (regressionFit = 7,063286, penalties=1.03E-6) for clause:  faculty(A) :- has(A, transform).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,186759 (regressionFit = 7,186758, penalties=1.03E-6) for clause:  faculty(A) :- has(A, architectur).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,184572 (regressionFit = 7,184571, penalties=1.03E-6) for clause:  faculty(A) :- has(A, object).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,888668 (regressionFit = 6,888667, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interest).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,181951 (regressionFit = 7,181950, penalties=1.03E-6) for clause:  faculty(A) :- has(A, part).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,181806 (regressionFit = 7,181804, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,181685 (regressionFit = 7,181684, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,172711 (regressionFit = 7,172710, penalties=1.03E-6) for clause:  faculty(A) :- has(A, site).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,143085 (regressionFit = 7,143084, penalties=1.03E-6) for clause:  faculty(A) :- has(A, relat).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,152287 (regressionFit = 7,152286, penalties=1.03E-6) for clause:  faculty(A) :- has(A, refin).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,183166 (regressionFit = 7,183165, penalties=1.03E-6) for clause:  faculty(A) :- has(A, overview).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,151942 (regressionFit = 7,151941, penalties=1.03E-6) for clause:  faculty(A) :- has(A, organ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,136019 (regressionFit = 7,136018, penalties=1.03E-6) for clause:  faculty(A) :- has(A, author).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,163666 (regressionFit = 7,163665, penalties=1.03E-6) for clause:  faculty(A) :- has(A, add).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,163162 (regressionFit = 7,163161, penalties=1.03E-6) for clause:  faculty(A) :- has(A, found).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,176446 (regressionFit = 7,176445, penalties=1.03E-6) for clause:  faculty(A) :- has(A, client).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,105390 (regressionFit = 7,105389, penalties=1.03E-6) for clause:  faculty(A) :- has(A, standard).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,176939 (regressionFit = 7,176938, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,151749 (regressionFit = 7,151748, penalties=1.03E-6) for clause:  faculty(A) :- has(A, semant).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,050042 (regressionFit = 7,050041, penalties=1.03E-6) for clause:  faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,169641 (regressionFit = 7,169640, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,183622 (regressionFit = 7,183621, penalties=1.03E-6) for clause:  faculty(A) :- has(A, larg).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,163603 (regressionFit = 7,163602, penalties=1.03E-6) for clause:  faculty(A) :- has(A, techniqu).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,166158 (regressionFit = 7,166157, penalties=1.03E-6) for clause:  faculty(A) :- has(A, postscript).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,109611 (regressionFit = 7,109610, penalties=1.03E-6) for clause:  faculty(A) :- has(A, commun).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,184847 (regressionFit = 7,184846, penalties=1.03E-6) for clause:  faculty(A) :- has(A, kei).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,140584 (regressionFit = 7,140583, penalties=1.03E-6) for clause:  faculty(A) :- has(A, form).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,151490 (regressionFit = 7,151489, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ibm).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,080997 (regressionFit = 7,080996, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210914 (regressionFit = 7,210912, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,070549 (regressionFit = 7,070548, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #11, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.070548878245004
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,095914 (regressionFit = 7,095912, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,345136 (regressionFit = 7,345134, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,478727 (regressionFit = 7,478725, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,165175 (regressionFit = 7,165173, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,564977 (regressionFit = 7,564975, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,559633 (regressionFit = 7,559631, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,072064 (regressionFit = 7,072062, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,968200 (regressionFit = 6,968197, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,458009 (regressionFit = 7,458007, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,176078 (regressionFit = 7,176076, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,232958 (regressionFit = 7,232956, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,407826 (regressionFit = 7,407824, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,065655 (regressionFit = 7,065653, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,098157 (regressionFit = 7,098155, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,080499 (regressionFit = 7,080497, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #11, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.065654743420869

% Consider expanding [#4 of outerLoop #11, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.080499418409516

% Consider expanding [#5 of outerLoop #11, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.080997213978452
%  At # nodes expanded = 5, |OPEN| = 6.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -7,080729 (regressionFit = 7,080727, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,054684 (regressionFit = 7,054682, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #11, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.054683784986746

% Consider expanding [#7 of outerLoop #11, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.098156792577139

% Consider expanding [#8 of outerLoop #11, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.176078070685571

% Consider expanding [#9 of outerLoop #11, bodyLen=0:1] 'faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]' score=-7.21091358861591
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 3 variant children.  Sending 127 items to OPEN for evaluation and possible insertion.
% Have created 127 valid-on-seeds descendants.
%     Score = -7,285945 (regressionFit = 7,285943, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, B), r_faculty(B).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,649046 (regressionFit = 7,649044, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, B), course(B).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,822613 (regressionFit = 7,822611, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, B), department(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,483257 (regressionFit = 7,483255, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, B), person(B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,826096 (regressionFit = 7,826094, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, B), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, B), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,760313 (regressionFit = 7,760311, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, B), student(B).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,207922 (regressionFit = 7,207920, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(A, _), has(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,204875 (regressionFit = 7,204872, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,157634 (regressionFit = 7,157632, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, length).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,819652 (regressionFit = 7,819650, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, introduct).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,814373 (regressionFit = 7,814371, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, time).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, date).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,827647 (regressionFit = 7,827645, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, solution).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,079001 (regressionFit = 7,078999, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, cern).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,215283 (regressionFit = 7,215281, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, wednesdai).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,188457 (regressionFit = 7,188454, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, algorithm).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,828163 (regressionFit = 7,828161, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, complet).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,789262 (regressionFit = 7,789260, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, specif).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, propos).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, step).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,813461 (regressionFit = 7,813459, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, compress).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,815292 (regressionFit = 7,815289, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, open).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,319221 (regressionFit = 7,319218, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, process).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, type).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,411867 (regressionFit = 7,411865, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, gener).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, gmt).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,166059 (regressionFit = 7,166057, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, jan).  [covers 53,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,033296 (regressionFit = 7,033293, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, utexa).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,827017 (regressionFit = 7,827014, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, requir).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,826366 (regressionFit = 7,826364, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, structur).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,581828 (regressionFit = 7,581826, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, goal).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,827307 (regressionFit = 7,827305, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, set).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, binari).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,165140 (regressionFit = 7,165138, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, modifi).  [covers 50,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,807676 (regressionFit = 7,807674, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, approach).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,788814 (regressionFit = 7,788812, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, identifi).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,827803 (regressionFit = 7,827801, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, richard).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, html).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, content).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,867042 (regressionFit = 6,867039, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, mondai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,827574 (regressionFit = 7,827572, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, dynam).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,099689 (regressionFit = 7,099687, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, mime).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, transform).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,827916 (regressionFit = 7,827914, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, architectur).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,821965 (regressionFit = 7,821963, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, object).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,486568 (regressionFit = 7,486566, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, interest).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,828097 (regressionFit = 7,828095, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, part).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, text).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,099689 (regressionFit = 7,099687, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, version).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,498819 (regressionFit = 7,498816, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, paper).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,825873 (regressionFit = 7,825871, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, site).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,818617 (regressionFit = 7,818615, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, relat).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, refin).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,779690 (regressionFit = 7,779688, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, overview).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,743713 (regressionFit = 7,743711, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, organ).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, author).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,799698 (regressionFit = 7,799695, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, add).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, server).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,821405 (regressionFit = 7,821403, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, found).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,779542 (regressionFit = 7,779540, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, client).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,815559 (regressionFit = 7,815557, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, standard).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,823159 (regressionFit = 7,823157, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, link).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,802616 (regressionFit = 7,802614, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, semant).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,778882 (regressionFit = 7,778879, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, group).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,488452 (regressionFit = 7,488450, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, dec).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,820356 (regressionFit = 7,820354, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, larg).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,827383 (regressionFit = 7,827381, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, techniqu).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,825681 (regressionFit = 7,825679, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, postscript).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,804293 (regressionFit = 7,804291, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, commun).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,804986 (regressionFit = 7,804984, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, kei).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,811096 (regressionFit = 7,811094, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, form).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(A, _), has(A, ibm).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,168287 (regressionFit = 7,168285, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, length).  [covers 53,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,211076 (regressionFit = 7,211074, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, paper).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, type).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,801154 (regressionFit = 7,801152, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, click).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,693919 (regressionFit = 7,693917, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, postscript).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,308597 (regressionFit = 7,308595, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, program).  [covers 28,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, content).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,674619 (regressionFit = 6,674617, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, run).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,674619): faculty(A) :- linkto(A, B), has(B, run).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,165983 (regressionFit = 7,165981, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, mime).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,718081 (regressionFit = 7,718079, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, check).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,746094 (regressionFit = 7,746092, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, hour).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,929495 (regressionFit = 6,929493, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, number).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,240984 (regressionFit = 7,240982, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, call).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, date).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,431332 (regressionFit = 7,431330, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, wednesdai).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,184066 (regressionFit = 7,184064, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, jan).  [covers 54,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,805075 (regressionFit = 7,805073, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, thesi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,021428 (regressionFit = 7,021426, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, lab).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,301865 (regressionFit = 7,301863, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, ut).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, html).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,165983 (regressionFit = 7,165981, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, version).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,732097 (regressionFit = 7,732095, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, student).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, gmt).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,005684 (regressionFit = 7,005682, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, page).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,809225 (regressionFit = 7,809223, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, net).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,167092 (regressionFit = 7,167090, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, modifi).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,173824 (regressionFit = 7,173822, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, file).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,031472 (regressionFit = 7,031470, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, depart).  [covers 33,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, text).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,812274 (regressionFit = 7,812271, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, rule).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,063625 (regressionFit = 7,063623, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, mondai).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,817085 (regressionFit = 6,817083, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, read).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,191470 (regressionFit = 7,191468, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, log).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,688287 (regressionFit = 7,688285, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, home).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,766400 (regressionFit = 6,766398, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, oper).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,165983 (regressionFit = 7,165981, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, cern).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,213792 (regressionFit = 7,213790, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, dec).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210915 (regressionFit = 7,210912, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, server).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,477447 (regressionFit = 7,477445, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, phone).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,276733 (regressionFit = 7,276731, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, utexa).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,492482 (regressionFit = 7,492480, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, email).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,821625 (regressionFit = 7,821623, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, semant).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,791851 (regressionFit = 7,791849, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, graphic).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,149190 (regressionFit = 7,149188, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, austin).  [covers 40,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,991730 (regressionFit = 6,991728, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, time).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,814137 (regressionFit = 7,814135, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, undergradu).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,735739 (regressionFit = 6,735737, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(A, B), has(B, fix).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,127373 (regressionFit = 7,127370, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(A, _), linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,213613 (regressionFit = 7,213611, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(A, B), linkto(B, B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,405166 (regressionFit = 7,405164, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, B), linkto(B, _).  [covers 42,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,204532 (regressionFit = 7,204530, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, B), linkto(_, B).  [covers 55,0/161,0 pos, 0,0/0,0 neg]

***** Warning: #11 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(A, B), has(B, run).  [covers 7,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(A, B), has(B, run).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
Setting 0.23705497213467513 for 
 // Learned this clause on outer loop cycle #11.  It scores=-6,67 and has recall=0,04, precision=0,99, and F1=0,08 (using m-estimates).
 // It covers 4,3% of the positive examples, 7 of 161 (of which 2 are newly covered),
 // So far 106 (65,8%) of the positive examples have been covered.
(faculty(D) :- linkto(D, Anon8927), has(Anon8927, run))

% On cycle #11, the best clause found is:
%      faculty(A) :- linkto(A, B), has(B, run).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 7 positive examples, of which 2 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 11 best clauses covers 65,8% of the positive examples and NaN% of the negatives.}
% Have selected pos example #50 as the next seed: faculty(httpwwwcsutexaseduusersgunther)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #12, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 38 items to OPEN for evaluation and possible insertion.
% Have created 38 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,433938 (regressionFit = 6,433937, penalties=1.03E-6) for clause:  faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,433938): faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,474787 (regressionFit = 6,474785, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,461422 (regressionFit = 6,461421, penalties=1.03E-6) for clause:  faculty(A) :- has(A, undergradu).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,350670 (regressionFit = 6,350669, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,350670): faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,471127 (regressionFit = 6,471126, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,327532 (regressionFit = 6,327531, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,327532): faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,232429 (regressionFit = 6,232428, penalties=1.03E-6) for clause:  faculty(A) :- has(A, institut).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,232429): faculty(A) :- has(A, institut).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,458300 (regressionFit = 6,458299, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,370692 (regressionFit = 6,370691, penalties=1.03E-6) for clause:  faculty(A) :- has(A, usa).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,453864 (regressionFit = 6,453863, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,377524 (regressionFit = 6,377523, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,474014 (regressionFit = 6,474013, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,260011 (regressionFit = 6,260010, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,467733 (regressionFit = 6,467732, penalties=1.03E-6) for clause:  faculty(A) :- has(A, school).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,211609 (regressionFit = 6,211608, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,211609): faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,399692 (regressionFit = 6,399691, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oper).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,474966 (regressionFit = 6,474965, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,141623 (regressionFit = 6,141622, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,141623): faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,473917 (regressionFit = 6,473916, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graduat).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,290566 (regressionFit = 6,290565, penalties=1.03E-6) for clause:  faculty(A) :- has(A, student).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,458332 (regressionFit = 6,458331, penalties=1.03E-6) for clause:  faculty(A) :- has(A, year).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,464798 (regressionFit = 6,464797, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,475408 (regressionFit = 6,475407, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tx).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,474787 (regressionFit = 6,474785, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,475298 (regressionFit = 6,475297, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,475321 (regressionFit = 6,475320, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sep).  [covers 23,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,459749 (regressionFit = 6,459748, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,729698 (regressionFit = 6,729697, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,453626 (regressionFit = 6,453624, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #12, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.453625512901232
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,544046 (regressionFit = 6,544044, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,674484 (regressionFit = 6,674482, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,814259 (regressionFit = 6,814257, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,556966 (regressionFit = 6,556964, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,918267 (regressionFit = 6,918265, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,913827 (regressionFit = 6,913825, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,444287 (regressionFit = 6,444285, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,319213 (regressionFit = 6,319211, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,880102 (regressionFit = 6,880100, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,565503 (regressionFit = 6,565501, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672947 (regressionFit = 6,672945, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,781902 (regressionFit = 6,781900, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,456674 (regressionFit = 6,456672, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,518916 (regressionFit = 6,518913, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,478047 (regressionFit = 6,478045, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #12, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.456673637187743

% Consider expanding [#4 of outerLoop #12, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.459749108668139
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,422475 (regressionFit = 6,422473, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,496934 (regressionFit = 6,496932, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #12, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.478047065237761

% Consider expanding [#6 of outerLoop #12, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.496933594173873

% Consider expanding [#7 of outerLoop #12, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.518915540959065

% Consider expanding [#8 of outerLoop #12, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.565503143077181

% Consider expanding [#9 of outerLoop #12, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-6.672947125111411

***** Warning: #12 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
Setting -0.05777995927180943 for 
 // Learned this clause on outer loop cycle #12.  It scores=-6,14 and has recall=0,53, precision=1,00, and F1=0,69 (using m-estimates).
 // It covers 52,8% of the positive examples, 85 of 161 (of which 16 are newly covered),
 // So far 122 (75,8%) of the positive examples have been covered.
(faculty(D) :- has(D, comput))

% On cycle #12, the best clause found is:
%      faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 85 positive examples, of which 16 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 12 best clauses covers 75,8% of the positive examples and NaN% of the negatives.}
% Have selected pos example #125 as the next seed: faculty(httpwwwcsutexaseduusersyufengcsturninhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #13, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 32 items to OPEN for evaluation and possible insertion.
% Have created 32 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,030552 (regressionFit = 7,030551, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,030552): faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,030935 (regressionFit = 7,030934, penalties=1.03E-6) for clause:  faculty(A) :- has(A, unix).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,973851 (regressionFit = 6,973850, penalties=1.03E-6) for clause:  faculty(A) :- has(A, submit).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,973851): faculty(A) :- has(A, submit).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032512 (regressionFit = 7,032511, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sep).  [covers 23,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,015873 (regressionFit = 7,015872, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,015263 (regressionFit = 7,015262, penalties=1.03E-6) for clause:  faculty(A) :- has(A, turn).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,031664 (regressionFit = 7,031663, penalties=1.03E-6) for clause:  faculty(A) :- has(A, procedur).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,868108 (regressionFit = 6,868107, penalties=1.03E-6) for clause:  faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,868108): faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,024453 (regressionFit = 7,024452, penalties=1.03E-6) for clause:  faculty(A) :- has(A, homework).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,920231 (regressionFit = 6,920230, penalties=1.03E-6) for clause:  faculty(A) :- has(A, case).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,031372 (regressionFit = 7,031371, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032457 (regressionFit = 7,032456, penalties=1.03E-6) for clause:  faculty(A) :- has(A, command).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,941501 (regressionFit = 6,941500, penalties=1.03E-6) for clause:  faculty(A) :- has(A, don).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,030770 (regressionFit = 7,030769, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,031918 (regressionFit = 7,031917, penalties=1.03E-6) for clause:  faculty(A) :- has(A, man).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,986233 (regressionFit = 6,986232, penalties=1.03E-6) for clause:  faculty(A) :- has(A, net).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028760 (regressionFit = 7,028759, penalties=1.03E-6) for clause:  faculty(A) :- has(A, note).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,927110 (regressionFit = 6,927109, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,030457 (regressionFit = 7,030456, penalties=1.03E-6) for clause:  faculty(A) :- has(A, machin).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,030770 (regressionFit = 7,030769, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,013232 (regressionFit = 7,013231, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,147593 (regressionFit = 7,147592, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,920017 (regressionFit = 6,920016, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #13, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.920017131484132
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,003300 (regressionFit = 7,003298, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,118798 (regressionFit = 7,118796, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,192362 (regressionFit = 7,192360, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,054594 (regressionFit = 7,054592, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,325765 (regressionFit = 7,325763, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,323401 (regressionFit = 7,323399, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,917594 (regressionFit = 6,917592, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,839450 (regressionFit = 6,839448, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,839450): faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,301058 (regressionFit = 7,301056, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,067329 (regressionFit = 7,067327, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,105415 (regressionFit = 7,105412, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,234010 (regressionFit = 7,234008, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,913297 (regressionFit = 6,913295, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,928976 (regressionFit = 6,928973, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,000851 (regressionFit = 7,000849, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #13, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.9132970812517796

% Consider expanding [#4 of outerLoop #13, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.9289755952725365

% Consider expanding [#5 of outerLoop #13, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.000850953884137

% Consider expanding [#6 of outerLoop #13, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.01323180561079
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,992424 (regressionFit = 6,992422, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,015861 (regressionFit = 7,015859, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #13, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.015860973157756

% Consider expanding [#8 of outerLoop #13, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.067329403154065

% Consider expanding [#9 of outerLoop #13, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-7.1054146196707

***** Warning: #13 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
Setting -3.612383326214639E-4 for 
 // Learned this clause on outer loop cycle #13.  It scores=-6,84 and has recall=0,30, precision=1,00, and F1=0,47 (using m-estimates).
 // It covers 30,4% of the positive examples, 49 of 161 (of which 4 are newly covered),
 // So far 126 (78,3%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon10953, D), has(Anon10953, Anon11105))

% On cycle #13, the best clause found is:
%      faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 49 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 13 best clauses covers 78,3% of the positive examples and NaN% of the negatives.}
% Have selected pos example #93 as the next seed: faculty(httpwwwcsutexaseduusersyufenggradehtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #14, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 25 items to OPEN for evaluation and possible insertion.
% Have created 25 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957038 (regressionFit = 6,957037, penalties=1.03E-6) for clause:  faculty(A) :- has(A, class).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,957038): faculty(A) :- has(A, class).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,033188 (regressionFit = 7,033187, penalties=1.03E-6) for clause:  faculty(A) :- has(A, present).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,979542 (regressionFit = 6,979541, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fridai).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,928619 (regressionFit = 6,928618, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,928619): faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,973589 (regressionFit = 6,973588, penalties=1.03E-6) for clause:  faculty(A) :- has(A, aug).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032330 (regressionFit = 7,032329, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032938 (regressionFit = 7,032937, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032747 (regressionFit = 7,032746, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,023463 (regressionFit = 7,023462, penalties=1.03E-6) for clause:  faculty(A) :- has(A, grade).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,017451 (regressionFit = 7,017450, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032108 (regressionFit = 7,032107, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032330 (regressionFit = 7,032329, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,033063 (regressionFit = 7,033062, penalties=1.03E-6) for clause:  faculty(A) :- has(A, assign).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,014560 (regressionFit = 7,014559, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,147893 (regressionFit = 7,147892, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,919555 (regressionFit = 6,919554, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,919555): faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #14, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.919555096129078
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,004302 (regressionFit = 7,004300, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,120174 (regressionFit = 7,120172, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,193440 (regressionFit = 7,193438, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,055523 (regressionFit = 7,055521, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,327163 (regressionFit = 7,327161, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,324761 (regressionFit = 7,324759, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,917122 (regressionFit = 6,917120, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,917122): faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,839757 (regressionFit = 6,839755, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,839757): faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,302339 (regressionFit = 7,302337, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,068553 (regressionFit = 7,068551, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,105779 (regressionFit = 7,105777, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,235383 (regressionFit = 7,235381, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,912906 (regressionFit = 6,912904, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,928202 (regressionFit = 6,928200, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,001519 (regressionFit = 7,001517, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #14, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.912906440774271

% Consider expanding [#4 of outerLoop #14, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.928202298394693

% Consider expanding [#5 of outerLoop #14, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.001519204622142

% Consider expanding [#6 of outerLoop #14, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.014559957762156
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,993912 (regressionFit = 6,993910, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,016849 (regressionFit = 7,016847, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #14, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.016848862483871

% Consider expanding [#8 of outerLoop #14, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.068552813871095

% Consider expanding [#9 of outerLoop #14, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-7.105779140572279

***** Warning: #14 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
Setting -3.5879997682609986E-4 for 
 // Learned this clause on outer loop cycle #14.  It scores=-6,84 and has recall=0,30, precision=1,00, and F1=0,47 (using m-estimates).
 // It covers 30,4% of the positive examples, 49 of 161 (of which 0 are newly covered),
 // So far 126 (78,3%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon11383, D), has(Anon11383, Anon11509))

% On cycle #14, the best clause found is:
%      faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 49 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 14 best clauses covers 78,3% of the positive examples and NaN% of the negatives.}
% Have selected pos example #77 as the next seed: faculty(httpwwwcsutexaseduusersdionisisexamplehtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #15, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 20 items to OPEN for evaluation and possible insertion.
% Have created 20 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,031048 (regressionFit = 7,031047, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,031048): faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,987473 (regressionFit = 6,987472, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,987473): faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,033663 (regressionFit = 7,033662, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,019028 (regressionFit = 7,019027, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,033887 (regressionFit = 7,033886, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,034501 (regressionFit = 7,034500, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,033887 (regressionFit = 7,033886, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,930126 (regressionFit = 6,930125, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,930126): faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,015887 (regressionFit = 7,015886, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,148197 (regressionFit = 7,148196, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,919099 (regressionFit = 6,919098, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,919099): faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #15, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.919099074491671
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,005304 (regressionFit = 7,005302, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,121548 (regressionFit = 7,121546, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,194518 (regressionFit = 7,194516, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,056452 (regressionFit = 7,056450, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,328560 (regressionFit = 7,328558, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,326119 (regressionFit = 7,326117, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,916658 (regressionFit = 6,916656, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,916658): faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,840066 (regressionFit = 6,840064, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,840066): faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,303619 (regressionFit = 7,303617, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,069773 (regressionFit = 7,069771, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,106148 (regressionFit = 7,106146, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,236752 (regressionFit = 7,236750, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,912523 (regressionFit = 6,912521, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,927442 (regressionFit = 6,927439, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,002189 (regressionFit = 7,002187, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #15, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.912523003969761

% Consider expanding [#4 of outerLoop #15, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.927441579832583

% Consider expanding [#5 of outerLoop #15, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.0021887941913254

% Consider expanding [#6 of outerLoop #15, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.015886618219298
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,995398 (regressionFit = 6,995396, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,017838 (regressionFit = 7,017836, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #15, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.017838073586513

% Consider expanding [#8 of outerLoop #15, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.069773163780229

% Consider expanding [#9 of outerLoop #15, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-7.106148307645273

***** Warning: #15 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
Setting -3.563780799124431E-4 for 
 // Learned this clause on outer loop cycle #15.  It scores=-6,84 and has recall=0,30, precision=1,00, and F1=0,47 (using m-estimates).
 // It covers 30,4% of the positive examples, 49 of 161 (of which 0 are newly covered),
 // So far 126 (78,3%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon11793, D), has(Anon11793, Anon11901))

% On cycle #15, the best clause found is:
%      faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 49 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 15 best clauses covers 78,3% of the positive examples and NaN% of the negatives.}
% Have selected pos example #156 as the next seed: faculty(httpwwwcsutexaseduuserstwangchinesewwwhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #16, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 34 items to OPEN for evaluation and possible insertion.
% Have created 34 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,988991 (regressionFit = 6,988990, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,988991): faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,033307 (regressionFit = 7,033306, penalties=1.03E-6) for clause:  faculty(A) :- has(A, distribut).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,035443 (regressionFit = 7,035442, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,036858 (regressionFit = 7,036857, penalties=1.03E-6) for clause:  faculty(A) :- has(A, internet).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,024170 (regressionFit = 7,024169, penalties=1.03E-6) for clause:  faculty(A) :- has(A, electron).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,016210 (regressionFit = 7,016209, penalties=1.03E-6) for clause:  faculty(A) :- has(A, www).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,020602 (regressionFit = 7,020601, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,992481 (regressionFit = 6,992479, penalties=1.03E-6) for clause:  faculty(A) :- has(A, web).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,036063 (regressionFit = 7,036062, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032602 (regressionFit = 7,032601, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,864210 (regressionFit = 6,864209, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,864210): faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,931632 (regressionFit = 6,931631, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,035216 (regressionFit = 7,035215, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,008956 (regressionFit = 7,008955, penalties=1.03E-6) for clause:  faculty(A) :- has(A, index).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,035443 (regressionFit = 7,035442, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,034549 (regressionFit = 7,034547, penalties=1.03E-6) for clause:  faculty(A) :- has(A, copyright).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,948602 (regressionFit = 6,948601, penalties=1.03E-6) for clause:  faculty(A) :- has(A, global).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,001061 (regressionFit = 7,001060, penalties=1.03E-6) for clause:  faculty(A) :- has(A, read).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028984 (regressionFit = 7,028983, penalties=1.03E-6) for clause:  faculty(A) :- has(A, line).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,989143 (regressionFit = 6,989142, penalties=1.03E-6) for clause:  faculty(A) :- has(A, wide).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,026151 (regressionFit = 7,026150, penalties=1.03E-6) for clause:  faculty(A) :- has(A, back).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,037567 (regressionFit = 7,037566, penalties=1.03E-6) for clause:  faculty(A) :- has(A, world).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,017212 (regressionFit = 7,017211, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,148507 (regressionFit = 7,148506, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,918649 (regressionFit = 6,918648, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #16, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.9186489870290515
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,006306 (regressionFit = 7,006304, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,122919 (regressionFit = 7,122917, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,195595 (regressionFit = 7,195593, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,057382 (regressionFit = 7,057380, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,329954 (regressionFit = 7,329952, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,327475 (regressionFit = 7,327473, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,916202 (regressionFit = 6,916200, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,840377 (regressionFit = 6,840375, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,840377): faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,304898 (regressionFit = 7,304896, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,070990 (regressionFit = 7,070988, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,106522 (regressionFit = 7,106520, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,238117 (regressionFit = 7,238115, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,912147 (regressionFit = 6,912145, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,926693 (regressionFit = 6,926691, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,002860 (regressionFit = 7,002858, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #16, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.9121466607691575

% Consider expanding [#4 of outerLoop #16, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.926693255677406

% Consider expanding [#5 of outerLoop #16, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.002859634852707

% Consider expanding [#6 of outerLoop #16, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.017211696501922
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,996882 (regressionFit = 6,996879, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,018828 (regressionFit = 7,018826, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #16, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.018828490042588

% Consider expanding [#8 of outerLoop #16, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.070990403616517

% Consider expanding [#9 of outerLoop #16, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-7.106521993911739

***** Warning: #16 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
Setting -3.539725307831768E-4 for 
 // Learned this clause on outer loop cycle #16.  It scores=-6,84 and has recall=0,30, precision=1,00, and F1=0,47 (using m-estimates).
 // It covers 30,4% of the positive examples, 49 of 161 (of which 0 are newly covered),
 // So far 126 (78,3%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon12185, D), has(Anon12185, Anon12343))

% On cycle #16, the best clause found is:
%      faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 49 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 16 best clauses covers 78,3% of the positive examples and NaN% of the negatives.}
% Have selected pos example #48 as the next seed: faculty(httpwwwcsutexaseduuserstwanglogshtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #17, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 32 items to OPEN for evaluation and possible insertion.
% Have created 32 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,022175 (regressionFit = 7,022174, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,022175): faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ec).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,008493 (regressionFit = 7,008492, penalties=1.03E-6) for clause:  faculty(A) :- has(A, apr).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,008493): faculty(A) :- has(A, apr).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,994042 (regressionFit = 6,994041, penalties=1.03E-6) for clause:  faculty(A) :- has(A, user).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,994042): faculty(A) :- has(A, user).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,037622 (regressionFit = 7,037621, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,017791 (regressionFit = 7,017790, penalties=1.03E-6) for clause:  faculty(A) :- has(A, www).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032278 (regressionFit = 7,032277, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,036767 (regressionFit = 7,036766, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,038111 (regressionFit = 7,038110, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thursdai).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,036997 (regressionFit = 7,036996, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,933137 (regressionFit = 6,933135, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,933137): faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,865579 (regressionFit = 6,865578, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,865579): faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,000140 (regressionFit = 7,000139, penalties=1.03E-6) for clause:  faculty(A) :- has(A, book).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,027716 (regressionFit = 7,027715, penalties=1.03E-6) for clause:  faculty(A) :- has(A, back).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,036072 (regressionFit = 7,036071, penalties=1.03E-6) for clause:  faculty(A) :- has(A, copyright).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,016084 (regressionFit = 7,016083, penalties=1.03E-6) for clause:  faculty(A) :- has(A, time).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,932267 (regressionFit = 6,932266, penalties=1.03E-6) for clause:  faculty(A) :- has(A, log).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032109 (regressionFit = 7,032108, penalties=1.03E-6) for clause:  faculty(A) :- has(A, friend).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,036997 (regressionFit = 7,036996, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,992114 (regressionFit = 6,992113, penalties=1.03E-6) for clause:  faculty(A) :- has(A, net).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,018535 (regressionFit = 7,018534, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,148821 (regressionFit = 7,148820, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,918205 (regressionFit = 6,918204, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #17, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.918204755259325
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,007308 (regressionFit = 7,007306, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,124287 (regressionFit = 7,124285, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,196672 (regressionFit = 7,196670, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,058312 (regressionFit = 7,058310, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,331345 (regressionFit = 7,331343, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,328828 (regressionFit = 7,328826, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,915754 (regressionFit = 6,915752, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,840690 (regressionFit = 6,840688, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,840690): faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,306174 (regressionFit = 7,306172, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,072204 (regressionFit = 7,072203, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,106900 (regressionFit = 7,106898, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,239480 (regressionFit = 7,239478, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,911777 (regressionFit = 6,911775, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,925957 (regressionFit = 6,925955, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,003532 (regressionFit = 7,003530, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #17, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.911777302673026

% Consider expanding [#4 of outerLoop #17, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.9259571445938

% Consider expanding [#5 of outerLoop #17, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.003531640518431

% Consider expanding [#6 of outerLoop #17, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.018535104093304
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,998363 (regressionFit = 6,998361, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,019820 (regressionFit = 7,019818, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #17, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.019819997661225

% Consider expanding [#8 of outerLoop #17, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.072204485388354

% Consider expanding [#9 of outerLoop #17, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-7.106900074537293

***** Warning: #17 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
Setting -3.515832190908895E-4 for 
 // Learned this clause on outer loop cycle #17.  It scores=-6,84 and has recall=0,30, precision=1,00, and F1=0,47 (using m-estimates).
 // It covers 30,4% of the positive examples, 49 of 161 (of which 0 are newly covered),
 // So far 126 (78,3%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon12621, D), has(Anon12621, Anon12777))

% On cycle #17, the best clause found is:
%      faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 49 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 17 best clauses covers 78,3% of the positive examples and NaN% of the negatives.}
% Have selected pos example #53 as the next seed: faculty(httpwwwcsutexaseduusersoops)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #18, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 104 items to OPEN for evaluation and possible insertion.
% Have created 104 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,023408 (regressionFit = 7,023407, penalties=1.03E-6) for clause:  faculty(A) :- has(A, behavior).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,023408): faculty(A) :- has(A, behavior).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,025503 (regressionFit = 7,025502, penalties=1.03E-6) for clause:  faculty(A) :- has(A, virtual).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,037414 (regressionFit = 7,037413, penalties=1.03E-6) for clause:  faculty(A) :- has(A, hard).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,790657 (regressionFit = 6,790656, penalties=1.03E-6) for clause:  faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,790657): faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,040579 (regressionFit = 7,040578, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gener).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,953325 (regressionFit = 6,953324, penalties=1.03E-6) for clause:  faculty(A) :- has(A, algorithm).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032381 (regressionFit = 7,032380, penalties=1.03E-6) for clause:  faculty(A) :- has(A, info).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,001755 (regressionFit = 7,001754, penalties=1.03E-6) for clause:  faculty(A) :- has(A, book).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,767481 (regressionFit = 6,767480, penalties=1.03E-6) for clause:  faculty(A) :- has(A, address).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,767481): faculty(A) :- has(A, address).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,022119 (regressionFit = 7,022118, penalties=1.03E-6) for clause:  faculty(A) :- has(A, peopl).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,024116 (regressionFit = 7,024115, penalties=1.03E-6) for clause:  faculty(A) :- has(A, effici).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,040627 (regressionFit = 7,040626, penalties=1.03E-6) for clause:  faculty(A) :- has(A, write).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,038116 (regressionFit = 7,038115, penalties=1.03E-6) for clause:  faculty(A) :- has(A, object).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,665196 (regressionFit = 6,665195, penalties=1.03E-6) for clause:  faculty(A) :- has(A, process).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,665196): faculty(A) :- has(A, process).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,000348 (regressionFit = 7,000347, penalties=1.03E-6) for clause:  faculty(A) :- has(A, extend).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,888687 (regressionFit = 6,888686, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fault).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,023137 (regressionFit = 7,023136, penalties=1.03E-6) for clause:  faculty(A) :- has(A, perform).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,998345 (regressionFit = 6,998344, penalties=1.03E-6) for clause:  faculty(A) :- has(A, code).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,954262 (regressionFit = 6,954260, penalties=1.03E-6) for clause:  faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,945521 (regressionFit = 6,945520, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,998537 (regressionFit = 6,998536, penalties=1.03E-6) for clause:  faculty(A) :- has(A, orient).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,278115 (regressionFit = 6,278114, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,278115): faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,039644 (regressionFit = 7,039643, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scheme).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,919874 (regressionFit = 6,919873, penalties=1.03E-6) for clause:  faculty(A) :- has(A, compil).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,017580 (regressionFit = 7,017579, penalties=1.03E-6) for clause:  faculty(A) :- has(A, time).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,988263 (regressionFit = 6,988262, penalties=1.03E-6) for clause:  faculty(A) :- has(A, open).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,035703 (regressionFit = 7,035702, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,934639 (regressionFit = 6,934638, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,991846 (regressionFit = 6,991845, penalties=1.03E-6) for clause:  faculty(A) :- has(A, form).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,638076 (regressionFit = 6,638075, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interest).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,039301 (regressionFit = 7,039300, penalties=1.03E-6) for clause:  faculty(A) :- has(A, great).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,863601 (regressionFit = 6,863600, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,023811 (regressionFit = 7,023810, penalties=1.03E-6) for clause:  faculty(A) :- has(A, manag).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,039017 (regressionFit = 7,039016, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,040397 (regressionFit = 7,040396, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ftp).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,038316 (regressionFit = 7,038315, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957378 (regressionFit = 6,957377, penalties=1.03E-6) for clause:  faculty(A) :- has(A, pointer).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,037955 (regressionFit = 7,037954, penalties=1.03E-6) for clause:  faculty(A) :- has(A, basic).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,039056 (regressionFit = 7,039055, penalties=1.03E-6) for clause:  faculty(A) :- has(A, high).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,007050 (regressionFit = 7,007049, penalties=1.03E-6) for clause:  faculty(A) :- has(A, onlin).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,904544 (regressionFit = 6,904543, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paul).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,914186 (regressionFit = 6,914185, penalties=1.03E-6) for clause:  faculty(A) :- has(A, format).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,011789 (regressionFit = 7,011788, penalties=1.03E-6) for clause:  faculty(A) :- has(A, implement).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,029526 (regressionFit = 7,029525, penalties=1.03E-6) for clause:  faculty(A) :- has(A, integr).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,681510 (regressionFit = 6,681509, penalties=1.03E-6) for clause:  faculty(A) :- has(A, automat).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,866946 (regressionFit = 6,866945, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,008365 (regressionFit = 7,008364, penalties=1.03E-6) for clause:  faculty(A) :- has(A, storag).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,031562 (regressionFit = 7,031561, penalties=1.03E-6) for clause:  faculty(A) :- has(A, real).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,031410 (regressionFit = 7,031409, penalties=1.03E-6) for clause:  faculty(A) :- has(A, travel).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,540340 (regressionFit = 6,540339, penalties=1.03E-6) for clause:  faculty(A) :- has(A, recent).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,040649 (regressionFit = 7,040648, penalties=1.03E-6) for clause:  faculty(A) :- has(A, simpl).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,037261 (regressionFit = 7,037260, penalties=1.03E-6) for clause:  faculty(A) :- has(A, access).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,012366 (regressionFit = 7,012365, penalties=1.03E-6) for clause:  faculty(A) :- has(A, wednesdai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,040674 (regressionFit = 7,040673, penalties=1.03E-6) for clause:  faculty(A) :- has(A, master).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032494 (regressionFit = 7,032493, penalties=1.03E-6) for clause:  faculty(A) :- has(A, support).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,035373 (regressionFit = 7,035372, penalties=1.03E-6) for clause:  faculty(A) :- has(A, small).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,037398 (regressionFit = 7,037397, penalties=1.03E-6) for clause:  faculty(A) :- has(A, van).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,039619 (regressionFit = 7,039618, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graduat).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,982333 (regressionFit = 6,982332, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nov).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, alloc).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,008045 (regressionFit = 7,008044, penalties=1.03E-6) for clause:  faculty(A) :- has(A, site).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,036354 (regressionFit = 7,036353, penalties=1.03E-6) for clause:  faculty(A) :- has(A, distribut).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,011611 (regressionFit = 7,011610, penalties=1.03E-6) for clause:  faculty(A) :- has(A, workshop).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,766915 (regressionFit = 6,766913, penalties=1.03E-6) for clause:  faculty(A) :- has(A, improv).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,876747 (regressionFit = 6,876746, penalties=1.03E-6) for clause:  faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,020722 (regressionFit = 7,020721, penalties=1.03E-6) for clause:  faculty(A) :- has(A, good).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032858 (regressionFit = 7,032857, penalties=1.03E-6) for clause:  faculty(A) :- has(A, local).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,995703 (regressionFit = 6,995702, penalties=1.03E-6) for clause:  faculty(A) :- has(A, web).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,939700 (regressionFit = 6,939699, penalties=1.03E-6) for clause:  faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,984963 (regressionFit = 6,984962, penalties=1.03E-6) for clause:  faculty(A) :- has(A, develop).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,035232 (regressionFit = 7,035231, penalties=1.03E-6) for clause:  faculty(A) :- has(A, larg).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,973332 (regressionFit = 6,973331, penalties=1.03E-6) for clause:  faculty(A) :- has(A, implem).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,008373 (regressionFit = 7,008372, penalties=1.03E-6) for clause:  faculty(A) :- has(A, written).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,023745 (regressionFit = 7,023744, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,021195 (regressionFit = 7,021194, penalties=1.03E-6) for clause:  faculty(A) :- has(A, refer).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,034922 (regressionFit = 7,034921, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mark).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,974815 (regressionFit = 6,974814, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interfac).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,969998 (regressionFit = 6,969997, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sourc).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,856604 (regressionFit = 6,856603, penalties=1.03E-6) for clause:  faculty(A) :- has(A, languag).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,039180 (regressionFit = 7,039179, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,004331 (regressionFit = 7,004329, penalties=1.03E-6) for clause:  faculty(A) :- has(A, read).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,039873 (regressionFit = 7,039872, penalties=1.03E-6) for clause:  faculty(A) :- has(A, background).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,040252 (regressionFit = 7,040251, penalties=1.03E-6) for clause:  faculty(A) :- has(A, introduct).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,030555 (regressionFit = 7,030554, penalties=1.03E-6) for clause:  faculty(A) :- has(A, hardwar).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,006011 (regressionFit = 7,006010, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oper).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,038659 (regressionFit = 7,038658, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thread).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,039676 (regressionFit = 7,039675, penalties=1.03E-6) for clause:  faculty(A) :- has(A, studi).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,922302 (regressionFit = 6,922301, penalties=1.03E-6) for clause:  faculty(A) :- has(A, student).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,036980 (regressionFit = 7,036979, penalties=1.03E-6) for clause:  faculty(A) :- has(A, descript).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,040267 (regressionFit = 7,040266, penalties=1.03E-6) for clause:  faculty(A) :- has(A, store).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, michael).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,326240 (regressionFit = 6,326239, penalties=1.03E-6) for clause:  faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,934043 (regressionFit = 6,934042, penalties=1.03E-6) for clause:  faculty(A) :- has(A, standard).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,040060 (regressionFit = 7,040059, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dynam).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,022287 (regressionFit = 7,022286, penalties=1.03E-6) for clause:  faculty(A) :- has(A, adapt).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,019857 (regressionFit = 7,019856, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,149140 (regressionFit = 7,149139, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,917766 (regressionFit = 6,917765, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #18, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.917766301747348
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,008309 (regressionFit = 7,008307, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,125653 (regressionFit = 7,125651, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,197748 (regressionFit = 7,197746, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,059242 (regressionFit = 7,059240, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,332734 (regressionFit = 7,332732, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,330179 (regressionFit = 7,330177, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,915314 (regressionFit = 6,915311, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,841006 (regressionFit = 6,841004, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,307448 (regressionFit = 7,307446, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,073415 (regressionFit = 7,073413, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,107282 (regressionFit = 7,107280, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,240838 (regressionFit = 7,240836, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,911415 (regressionFit = 6,911413, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,925233 (regressionFit = 6,925231, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,004205 (regressionFit = 7,004203, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #18, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.911414822729875

% Consider expanding [#4 of outerLoop #18, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.925233067784547

% Consider expanding [#5 of outerLoop #18, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.004204726726374

% Consider expanding [#6 of outerLoop #18, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.019856754408826
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,999842 (regressionFit = 6,999839, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,020812 (regressionFit = 7,020810, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #18, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.020812484449231

% Consider expanding [#8 of outerLoop #18, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.073415362356223

% Consider expanding [#9 of outerLoop #18, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-7.107282426799333

***** Warning: #18 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
Setting 0.02442619332272237 for 
 // Learned this clause on outer loop cycle #18.  It scores=-6,28 and has recall=0,35, precision=1,00, and F1=0,52 (using m-estimates).
 // It covers 34,8% of the positive examples, 56 of 161 (of which 2 are newly covered),
 // So far 128 (79,5%) of the positive examples have been covered.
(faculty(D) :- has(D, research))

% On cycle #18, the best clause found is:
%      faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 56 positive examples, of which 2 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 18 best clauses covers 79,5% of the positive examples and NaN% of the negatives.}
% Have selected pos example #57 as the next seed: faculty(httpwwwcsutexaseduusersgunnelsschedjulehtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #19, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 27 items to OPEN for evaluation and possible insertion.
% Have created 27 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,780244 (regressionFit = 6,780243, penalties=1.03E-6) for clause:  faculty(A) :- has(A, time).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,780244): faculty(A) :- has(A, time).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,768576 (regressionFit = 6,768575, penalties=1.03E-6) for clause:  faculty(A) :- has(A, wednesdai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,768576): faculty(A) :- has(A, wednesdai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,728867 (regressionFit = 6,728866, penalties=1.03E-6) for clause:  faculty(A) :- has(A, spring).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,728867): faculty(A) :- has(A, spring).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,724738 (regressionFit = 6,724737, penalties=1.03E-6) for clause:  faculty(A) :- has(A, john).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,724738): faculty(A) :- has(A, john).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,785770 (regressionFit = 6,785769, penalties=1.03E-6) for clause:  faculty(A) :- has(A, schedul).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,801438 (regressionFit = 6,801437, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thursdai).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,781450 (regressionFit = 6,781449, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,800663 (regressionFit = 6,800662, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,801451 (regressionFit = 6,801450, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,801451 (regressionFit = 6,801450, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,698365 (regressionFit = 6,698364, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,698365): faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,750149 (regressionFit = 6,750148, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fridai).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,804107 (regressionFit = 6,804106, penalties=1.03E-6) for clause:  faculty(A) :- has(A, pm).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,803729 (regressionFit = 6,803728, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,791586 (regressionFit = 6,791585, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,785019 (regressionFit = 6,785018, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,950856 (regressionFit = 6,950855, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,700311 (regressionFit = 6,700310, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #19, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.700310945573422
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,791393 (regressionFit = 6,791391, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,921160 (regressionFit = 6,921158, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,015449 (regressionFit = 7,015447, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,831912 (regressionFit = 6,831910, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,133436 (regressionFit = 7,133434, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,130798 (regressionFit = 7,130796, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,695729 (regressionFit = 6,695727, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,695729): faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,596647 (regressionFit = 6,596645, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,596647): faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,104053 (regressionFit = 7,104051, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,845419 (regressionFit = 6,845417, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,897945 (regressionFit = 6,897942, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,031794 (regressionFit = 7,031792, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,691694 (regressionFit = 6,691692, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,718042 (regressionFit = 6,718039, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,776206 (regressionFit = 6,776204, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #19, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.691693639158303

% Consider expanding [#4 of outerLoop #19, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.718041565354967

% Consider expanding [#5 of outerLoop #19, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.776206403300924

% Consider expanding [#6 of outerLoop #19, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.785018851288857
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,760698 (regressionFit = 6,760696, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,794606 (regressionFit = 6,794604, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #19, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.794605980293811

% Consider expanding [#8 of outerLoop #19, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.845418794182566

% Consider expanding [#9 of outerLoop #19, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-6.8979445125789915

***** Warning: #19 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
Setting -4.336082639519125E-4 for 
 // Learned this clause on outer loop cycle #19.  It scores=-6,60 and has recall=0,30, precision=1,00, and F1=0,47 (using m-estimates).
 // It covers 30,4% of the positive examples, 49 of 161 (of which 0 are newly covered),
 // So far 128 (79,5%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon13747, D), has(Anon13747, Anon13883))

% On cycle #19, the best clause found is:
%      faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 49 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 19 best clauses covers 79,5% of the positive examples and NaN% of the negatives.}
% Have selected pos example #107 as the next seed: faculty(httpwwwcsutexaseduusersvlteachingdescriptionLhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #20, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 50 items to OPEN for evaluation and possible insertion.
% Have created 50 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,804338 (regressionFit = 6,804337, penalties=1.03E-6) for clause:  faculty(A) :- has(A, determin).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,804338): faculty(A) :- has(A, determin).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,700167 (regressionFit = 6,700166, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,700167): faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,797965 (regressionFit = 6,797964, penalties=1.03E-6) for clause:  faculty(A) :- has(A, grade).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,771200 (regressionFit = 6,771199, penalties=1.03E-6) for clause:  faculty(A) :- has(A, correct).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,802033 (regressionFit = 6,802032, penalties=1.03E-6) for clause:  faculty(A) :- has(A, instructor).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,756859 (regressionFit = 6,756858, penalties=1.03E-6) for clause:  faculty(A) :- has(A, web).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,676110 (regressionFit = 6,676109, penalties=1.03E-6) for clause:  faculty(A) :- has(A, test).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,676110): faculty(A) :- has(A, test).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,798254 (regressionFit = 6,798253, penalties=1.03E-6) for clause:  faculty(A) :- has(A, learn).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,804772 (regressionFit = 6,804771, penalties=1.03E-6) for clause:  faculty(A) :- has(A, problem).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,803559 (regressionFit = 6,803558, penalties=1.03E-6) for clause:  faculty(A) :- has(A, theorem).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,749633 (regressionFit = 6,749632, penalties=1.03E-6) for clause:  faculty(A) :- has(A, result).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,715829 (regressionFit = 6,715828, penalties=1.03E-6) for clause:  faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,726838 (regressionFit = 6,726837, penalties=1.03E-6) for clause:  faculty(A) :- has(A, class).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,804508 (regressionFit = 6,804507, penalties=1.03E-6) for clause:  faculty(A) :- has(A, credit).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,802273 (regressionFit = 6,802272, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,801494 (regressionFit = 6,801493, penalties=1.03E-6) for clause:  faculty(A) :- has(A, consist).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,798774 (regressionFit = 6,798773, penalties=1.03E-6) for clause:  faculty(A) :- has(A, logic).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,805673 (regressionFit = 6,805672, penalties=1.03E-6) for clause:  faculty(A) :- has(A, solution).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,644923 (regressionFit = 6,644922, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fall).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,644923): faculty(A) :- has(A, fall).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,793468 (regressionFit = 6,793467, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,792519 (regressionFit = 6,792518, penalties=1.03E-6) for clause:  faculty(A) :- has(A, part).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,669203 (regressionFit = 6,669202, penalties=1.03E-6) for clause:  faculty(A) :- has(A, student).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,805597 (regressionFit = 6,805596, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,791604 (regressionFit = 6,791603, penalties=1.03E-6) for clause:  faculty(A) :- has(A, back).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,755508 (regressionFit = 6,755507, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,806260 (regressionFit = 6,806259, penalties=1.03E-6) for clause:  faculty(A) :- has(A, introduct).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,795148 (regressionFit = 6,795147, penalties=1.03E-6) for clause:  faculty(A) :- has(A, full).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,803314 (regressionFit = 6,803313, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,795529 (regressionFit = 6,795528, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,802669 (regressionFit = 6,802668, penalties=1.03E-6) for clause:  faculty(A) :- has(A, present).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,724833 (regressionFit = 6,724832, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mathemat).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,802548 (regressionFit = 6,802547, penalties=1.03E-6) for clause:  faculty(A) :- has(A, expect).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,798880 (regressionFit = 6,798879, penalties=1.03E-6) for clause:  faculty(A) :- has(A, homework).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,802522 (regressionFit = 6,802521, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,803314 (regressionFit = 6,803313, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,798293 (regressionFit = 6,798292, penalties=1.03E-6) for clause:  faculty(A) :- has(A, meet).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,431978 (regressionFit = 6,431977, penalties=1.03E-6) for clause:  faculty(A) :- has(A, solv).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,431978): faculty(A) :- has(A, solv).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,785913 (regressionFit = 6,785912, penalties=1.03E-6) for clause:  faculty(A) :- has(A, method).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,786604 (regressionFit = 6,786603, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,951201 (regressionFit = 6,951200, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,699745 (regressionFit = 6,699744, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #20, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.6997451704929
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,792660 (regressionFit = 6,792658, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,922888 (regressionFit = 6,922886, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,016826 (regressionFit = 7,016824, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,833050 (regressionFit = 6,833048, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,135180 (regressionFit = 7,135178, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,132459 (regressionFit = 7,132457, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,695124 (regressionFit = 6,695121, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,596966 (regressionFit = 6,596964, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,105641 (regressionFit = 7,105639, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,846877 (regressionFit = 6,846875, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,898349 (regressionFit = 6,898347, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,033476 (regressionFit = 7,033474, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,691163 (regressionFit = 6,691161, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,716987 (regressionFit = 6,716985, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,776969 (regressionFit = 6,776967, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #20, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.6911634057784815

% Consider expanding [#4 of outerLoop #20, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.7169873523160515

% Consider expanding [#5 of outerLoop #20, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.776969442456827

% Consider expanding [#6 of outerLoop #20, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.786604263904005
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,762467 (regressionFit = 6,762465, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,795752 (regressionFit = 6,795750, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #20, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.79575222334731

% Consider expanding [#8 of outerLoop #20, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.846876760338877

% Consider expanding [#9 of outerLoop #20, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-6.898348924106549

***** Warning: #20 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, solv).  [covers 7,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, solv).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
Setting 0.14805659482175332 for 
 // Learned this clause on outer loop cycle #20.  It scores=-6,43 and has recall=0,04, precision=0,99, and F1=0,08 (using m-estimates).
 // It covers 4,3% of the positive examples, 7 of 161 (of which 1 are newly covered),
 // So far 129 (80,1%) of the positive examples have been covered.
(faculty(D) :- has(D, solv))

% On cycle #20, the best clause found is:
%      faculty(A) :- has(A, solv).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 7 positive examples, of which 1 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 20 best clauses covers 80,1% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (20).

% ******************************************
adding regression values
Added 0.221785298735876 to wgt = 0,2218 (faculty(A) :- has(A, ph))
Added 0.2472562857315742 to wgt = 0,2473 (faculty(A) :- linkto(B, A), course(B))
Added -0.023263972648000942 to wgt = -0,0233 (faculty(A) :- linkto(A, A), linkto(_, A))
Added -0.010351761171745678 to wgt = -0,0104 (faculty(A) :- has(A, offic))
Added 0.09998848037426097 to wgt = 0,1000 (faculty(A) :- has(A, proceed))
Added -0.05159232057047953 to wgt = -0,0516 (faculty(A) :- linkto(B, A), has(B, texa))
Added 0.041951773692269496 to wgt = 0,0420 (faculty(A) :- linkto(A, A), linkto(A, _))
Added 0.025171064215361673 to wgt = 0,0252 (faculty(A) :- linkto(A, A), linkto(A, _))
Added 0.02316466932242951 to wgt = 0,0232 (faculty(A) :- has(A, associ))
Added -0.06868363878851061 to wgt = -0,0687 (faculty(A) :- has(A, inform))
Added 0.23705497213467513 to wgt = 0,2371 (faculty(A) :- linkto(A, B), has(B, run))
Added -0.05777995927180943 to wgt = -0,0578 (faculty(A) :- has(A, comput))
Added -3.612383326214639E-4 to wgt = -0,0004 (faculty(A) :- linkto(B, A), has(B, _))
Added -3.5879997682609986E-4 to wgt = -0,0004 (faculty(A) :- linkto(B, A), has(B, _))
Added -3.563780799124431E-4 to wgt = -0,0004 (faculty(A) :- linkto(B, A), has(B, _))
Added -3.539725307831768E-4 to wgt = -0,0004 (faculty(A) :- linkto(B, A), has(B, _))
Added -3.515832190908895E-4 to wgt = -0,0004 (faculty(A) :- linkto(B, A), has(B, _))
Added 0.02442619332272237 to wgt = 0,0244 (faculty(A) :- has(A, research))
Added -4.336082639519125E-4 to wgt = -0,0004 (faculty(A) :- linkto(B, A), has(B, _))
Added 0.14805659482175332 to wgt = 0,1481 (faculty(A) :- has(A, solv))
% Saving model in: datasets\MyWebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 1 trees is 11,198 seconds.

% Kept 10 of the 10 positive examples.
% Kept 151 of the 151 negative examples.
% Dataset size: 161
Computing probabilities
prob time:199 milliseconds
No hidden examples for : faculty
Time to build dataset: 205 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #122 as the next seed: faculty(httpwwwcsutexaseduusersemery)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 91 items to OPEN for evaluation and possible insertion.
% Have created 91 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,684027 (regressionFit = 8,684026, penalties=1.03E-6) for clause:  faculty(A) :- has(A, man).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8,684027): faculty(A) :- has(A, man).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,217169 (regressionFit = 7,217168, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fax).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,217169): faculty(A) :- has(A, fax).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,699057 (regressionFit = 8,699055, penalties=1.03E-6) for clause:  faculty(A) :- has(A, check).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,458277 (regressionFit = 8,458276, penalties=1.03E-6) for clause:  faculty(A) :- has(A, address).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,654742 (regressionFit = 8,654741, penalties=1.03E-6) for clause:  faculty(A) :- has(A, function).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,725583 (regressionFit = 8,725582, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ftp).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,711018 (regressionFit = 8,711017, penalties=1.03E-6) for clause:  faculty(A) :- has(A, unix).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,261571 (regressionFit = 8,261570, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,674719 (regressionFit = 8,674718, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,859878 (regressionFit = 7,859877, penalties=1.03E-6) for clause:  faculty(A) :- has(A, associ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,707564 (regressionFit = 8,707563, penalties=1.03E-6) for clause:  faculty(A) :- has(A, person).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,674673 (regressionFit = 8,674671, penalties=1.03E-6) for clause:  faculty(A) :- has(A, quot).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,457029 (regressionFit = 8,457028, penalties=1.03E-6) for clause:  faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,608975 (regressionFit = 8,608974, penalties=1.03E-6) for clause:  faculty(A) :- has(A, click).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,489045 (regressionFit = 8,489044, penalties=1.03E-6) for clause:  faculty(A) :- has(A, contact).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,688864 (regressionFit = 8,688863, penalties=1.03E-6) for clause:  faculty(A) :- has(A, www).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,702357 (regressionFit = 8,702356, penalties=1.03E-6) for clause:  faculty(A) :- has(A, info).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,710312 (regressionFit = 8,710311, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dept).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,629258 (regressionFit = 8,629257, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,673747 (regressionFit = 8,673746, penalties=1.03E-6) for clause:  faculty(A) :- has(A, web).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,724918 (regressionFit = 8,724917, penalties=1.03E-6) for clause:  faculty(A) :- has(A, search).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,709846 (regressionFit = 8,709845, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,528154 (regressionFit = 8,528153, penalties=1.03E-6) for clause:  faculty(A) :- has(A, parallel).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,418849 (regressionFit = 8,418848, penalties=1.03E-6) for clause:  faculty(A) :- has(A, work).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,485121 (regressionFit = 8,485120, penalties=1.03E-6) for clause:  faculty(A) :- has(A, languag).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,728208 (regressionFit = 8,728207, penalties=1.03E-6) for clause:  faculty(A) :- has(A, object).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,723918 (regressionFit = 8,723917, penalties=1.03E-6) for clause:  faculty(A) :- has(A, abstract).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,656038 (regressionFit = 8,656037, penalties=1.03E-6) for clause:  faculty(A) :- has(A, code).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,709566 (regressionFit = 8,709565, penalties=1.03E-6) for clause:  faculty(A) :- has(A, updat).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,726087 (regressionFit = 8,726086, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,723081 (regressionFit = 8,723080, penalties=1.03E-6) for clause:  faculty(A) :- has(A, postscript).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,679476 (regressionFit = 8,679475, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,690535 (regressionFit = 8,690534, penalties=1.03E-6) for clause:  faculty(A) :- has(A, describ).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,644927 (regressionFit = 8,644926, penalties=1.03E-6) for clause:  faculty(A) :- has(A, project).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,575888 (regressionFit = 8,575887, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graphic).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,684800 (regressionFit = 8,684799, penalties=1.03E-6) for clause:  faculty(A) :- has(A, class).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,671729 (regressionFit = 8,671728, penalties=1.03E-6) for clause:  faculty(A) :- has(A, add).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,719314 (regressionFit = 8,719313, penalties=1.03E-6) for clause:  faculty(A) :- has(A, orient).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,675027 (regressionFit = 8,675026, penalties=1.03E-6) for clause:  faculty(A) :- has(A, visual).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,131236 (regressionFit = 8,131234, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,694906 (regressionFit = 8,694905, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,679476 (regressionFit = 8,679475, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,727994 (regressionFit = 8,727993, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graduat).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,575819 (regressionFit = 8,575818, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,609113 (regressionFit = 8,609112, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,174924 (regressionFit = 8,174923, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,716868 (regressionFit = 8,716867, penalties=1.03E-6) for clause:  faculty(A) :- has(A, databas).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,364980 (regressionFit = 8,364979, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,693237 (regressionFit = 8,693236, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tr).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,396343 (regressionFit = 8,396342, penalties=1.03E-6) for clause:  faculty(A) :- has(A, phone).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,150553 (regressionFit = 8,150552, penalties=1.03E-6) for clause:  faculty(A) :- has(A, hall).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,472290 (regressionFit = 8,472289, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tool).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,688397 (regressionFit = 8,688396, penalties=1.03E-6) for clause:  faculty(A) :- has(A, repres).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,710042 (regressionFit = 8,710041, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,721872 (regressionFit = 8,721871, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mail).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,652915 (regressionFit = 8,652914, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,727506 (regressionFit = 8,727504, penalties=1.03E-6) for clause:  faculty(A) :- has(A, user).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,625156 (regressionFit = 8,625155, penalties=1.03E-6) for clause:  faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,728188 (regressionFit = 8,728187, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,722007 (regressionFit = 8,722006, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,211937 (regressionFit = 8,211936, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,707302 (regressionFit = 8,707301, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tx).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,687213 (regressionFit = 8,687212, penalties=1.03E-6) for clause:  faculty(A) :- has(A, view).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,403500 (regressionFit = 8,403499, penalties=1.03E-6) for clause:  faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,697854 (regressionFit = 8,697853, penalties=1.03E-6) for clause:  faculty(A) :- has(A, concept).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,718093 (regressionFit = 8,718092, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nbsp).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,701542 (regressionFit = 8,701541, penalties=1.03E-6) for clause:  faculty(A) :- has(A, octob).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,772934 (regressionFit = 7,772933, penalties=1.03E-6) for clause:  faculty(A) :- has(A, select).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,728172 (regressionFit = 8,728171, penalties=1.03E-6) for clause:  faculty(A) :- has(A, problem).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,488861 (regressionFit = 8,488860, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,712024 (regressionFit = 8,712023, penalties=1.03E-6) for clause:  faculty(A) :- has(A, compress).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,728015 (regressionFit = 8,728014, penalties=1.03E-6) for clause:  faculty(A) :- has(A, academ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,719423 (regressionFit = 8,719422, penalties=1.03E-6) for clause:  faculty(A) :- has(A, wednesdai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,719274 (regressionFit = 8,719273, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,725915 (regressionFit = 8,725914, penalties=1.03E-6) for clause:  faculty(A) :- has(A, http).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,891637 (regressionFit = 7,891636, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,672734 (regressionFit = 8,672733, penalties=1.03E-6) for clause:  faculty(A) :- has(A, extens).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,695247 (regressionFit = 8,695246, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,693276 (regressionFit = 8,693275, penalties=1.03E-6) for clause:  faculty(A) :- has(A, materi).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,514038 (regressionFit = 8,514037, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,707407 (regressionFit = 8,707406, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530160 (regressionFit = 8,530158, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-8.514037680017188
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 90 items to OPEN for evaluation and possible insertion.
% Have created 90 valid-on-seeds descendants.
%     Score = -8,540896 (regressionFit = 8,540894, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, man).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,155415 (regressionFit = 8,155413, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, fax).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, check).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, address).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,724332 (regressionFit = 8,724330, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, function).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, ftp).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, unix).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,514039 (regressionFit = 8,514037, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, date).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,950256 (regressionFit = 7,950254, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, inform).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,420421 (regressionFit = 8,420419, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, cern).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,601328 (regressionFit = 8,601325, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, associ).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, person).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, quot).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,997617 (regressionFit = 7,997615, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, system).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, click).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, contact).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,718284 (regressionFit = 8,718282, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, www).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, info).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, dept).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,725678 (regressionFit = 8,725676, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, home).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,612062 (regressionFit = 8,612060, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, web).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, search).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,468582 (regressionFit = 8,468580, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, length).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, parallel).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,626907 (regressionFit = 8,626905, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, work).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,507008 (regressionFit = 8,507006, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, languag).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, object).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,510553 (regressionFit = 8,510551, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, abstract).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, code).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,721394 (regressionFit = 8,721392, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, updat).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,605635 (regressionFit = 8,605633, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, link).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,468582 (regressionFit = 8,468580, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, jan).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, postscript).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,420421 (regressionFit = 8,420419, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, version).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,514039 (regressionFit = 8,514037, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, gmt).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, describ).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,720221 (regressionFit = 8,720219, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, project).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,504878 (regressionFit = 8,504876, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, graphic).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,493457 (regressionFit = 8,493455, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, class).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,514039 (regressionFit = 8,514037, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, server).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, add).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, orient).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,514039 (regressionFit = 8,514037, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, text).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, visual).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,269429 (regressionFit = 8,269427, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, comput).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,468582 (regressionFit = 8,468580, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, modifi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,420421 (regressionFit = 8,420419, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, mime).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, graduat).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,514039 (regressionFit = 8,514037, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, type).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,359262 (regressionFit = 8,359260, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, austin).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, ut).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,150941 (regressionFit = 8,150939, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, scienc).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, databas).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,269429 (regressionFit = 8,269427, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, texa).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, tr).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, phone).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,504113 (regressionFit = 8,504111, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, hall).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, tool).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,514039 (regressionFit = 8,514037, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, content).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,726405 (regressionFit = 8,726403, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, repres).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,472694 (regressionFit = 8,472692, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, utexa).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,723885 (regressionFit = 8,723883, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, mail).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,272679 (regressionFit = 8,272677, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, mondai).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,721927 (regressionFit = 8,721925, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, user).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, file).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, paper).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,504113 (regressionFit = 8,504111, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, dec).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,269429 (regressionFit = 8,269427, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, univers).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,723885 (regressionFit = 8,723883, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, tx).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, view).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,724369 (regressionFit = 8,724367, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, group).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, concept).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, nbsp).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, octob).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, select).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,625620 (regressionFit = 8,625618, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, problem).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,650792 (regressionFit = 8,650790, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, program).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, compress).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,514039 (regressionFit = 8,514037, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, html).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, academ).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,583905 (regressionFit = 8,583903, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, wednesdai).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,722342 (regressionFit = 8,722340, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, page).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,720370 (regressionFit = 8,720368, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, http).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,563994 (regressionFit = 8,563992, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, research).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, extens).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, list).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, materi).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,454132 (regressionFit = 8,454130, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,544637 (regressionFit = 8,544635, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-8.454132226819503

% Consider expanding [#4 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-8.530159510017569
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 3 variant children.  Sending 203 items to OPEN for evaluation and possible insertion.
% Have created 203 valid-on-seeds descendants.
%     Score = -8,815958 (regressionFit = 8,815956, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,276980 (regressionFit = 8,276978, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,826569 (regressionFit = 8,826567, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,916495 (regressionFit = 8,916493, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,092960 (regressionFit = 9,092958, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,103514 (regressionFit = 9,103512, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,528936 (regressionFit = 8,528934, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,492057 (regressionFit = 8,492055, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,105192 (regressionFit = 9,105190, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, man).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,643029 (regressionFit = 7,643027, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, fax).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,097751 (regressionFit = 9,097749, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, check).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,534462 (regressionFit = 8,534460, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, address).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,102412 (regressionFit = 9,102410, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, function).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,071069 (regressionFit = 9,071067, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, ftp).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, unix).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530161 (regressionFit = 8,530158, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,099933 (regressionFit = 8,099931, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, inform).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,477825 (regressionFit = 8,477823, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, cern).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,734286 (regressionFit = 8,734284, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, associ).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,055845 (regressionFit = 9,055842, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, person).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,048376 (regressionFit = 9,048374, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, quot).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,473212 (regressionFit = 8,473210, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, system).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,078980 (regressionFit = 9,078978, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, click).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,910124 (regressionFit = 8,910122, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, contact).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,917645 (regressionFit = 8,917643, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, www).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,099946 (regressionFit = 9,099944, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, info).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, dept).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,090101 (regressionFit = 9,090099, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, home).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,049464 (regressionFit = 9,049462, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, web).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,061803 (regressionFit = 9,061801, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, search).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,499977 (regressionFit = 8,499975, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,102042 (regressionFit = 9,102040, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, parallel).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,699198 (regressionFit = 8,699196, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, work).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,832673 (regressionFit = 8,832671, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, languag).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,094351 (regressionFit = 9,094349, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, object).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,087647 (regressionFit = 9,087645, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, abstract).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,101350 (regressionFit = 9,101347, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, code).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,096382 (regressionFit = 9,096380, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, updat).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,057662 (regressionFit = 9,057660, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, link).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,512374 (regressionFit = 8,512372, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, jan).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,082839 (regressionFit = 9,082836, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, postscript).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,477825 (regressionFit = 8,477823, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, version).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530161 (regressionFit = 8,530158, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,104788 (regressionFit = 9,104786, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, describ).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,099021 (regressionFit = 9,099018, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, project).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,415505 (regressionFit = 8,415503, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, graphic).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,835125 (regressionFit = 8,835123, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, class).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530161 (regressionFit = 8,530158, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, add).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,105243 (regressionFit = 9,105241, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, orient).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530161 (regressionFit = 8,530158, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,050113 (regressionFit = 9,050111, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, visual).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,311726 (regressionFit = 8,311724, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, comput).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,486232 (regressionFit = 8,486229, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,477825 (regressionFit = 8,477823, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mime).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,084912 (regressionFit = 9,084910, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, graduat).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530161 (regressionFit = 8,530158, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,336810 (regressionFit = 8,336808, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, austin).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,102858 (regressionFit = 9,102856, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, ut).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,237798 (regressionFit = 8,237796, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, scienc).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,555175 (regressionFit = 8,555173, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, databas).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,281042 (regressionFit = 8,281039, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, texa).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, tr).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,220981 (regressionFit = 8,220979, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, phone).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,885007 (regressionFit = 8,885005, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, hall).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, tool).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530161 (regressionFit = 8,530158, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,104904 (regressionFit = 9,104901, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, repres).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,457395 (regressionFit = 8,457393, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, utexa).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,881391 (regressionFit = 8,881389, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mail).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,427137 (regressionFit = 8,427135, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mondai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,886915 (regressionFit = 8,886913, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, user).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,093587 (regressionFit = 9,093585, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, file).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,093173 (regressionFit = 9,093171, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, paper).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,097875 (regressionFit = 9,097873, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, dec).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,355184 (regressionFit = 8,355182, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, univers).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,866807 (regressionFit = 8,866804, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, tx).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, view).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,590021 (regressionFit = 8,590019, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, group).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, concept).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, nbsp).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, octob).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,102032 (regressionFit = 9,102029, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, select).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,942697 (regressionFit = 8,942695, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, problem).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,988672 (regressionFit = 8,988670, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, program).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, compress).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530161 (regressionFit = 8,530158, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,083665 (regressionFit = 9,083662, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, academ).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,099406 (regressionFit = 9,099404, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, wednesdai).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,066341 (regressionFit = 9,066338, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, page).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,723193 (regressionFit = 8,723191, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, http).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,302960 (regressionFit = 8,302957, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, research).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, extens).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,022463 (regressionFit = 9,022461, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, list).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,092394 (regressionFit = 9,092392, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, materi).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,415721 (regressionFit = 8,415719, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,599948 (regressionFit = 8,599946, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, version).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,072240 (regressionFit = 9,072238, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, introduct).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530160 (regressionFit = 8,530158, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,078687 (regressionFit = 9,078685, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mar).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,019191 (regressionFit = 9,019189, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, problem).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530160 (regressionFit = 8,530158, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,094142 (regressionFit = 9,094140, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, overview).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530160 (regressionFit = 8,530158, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, equal).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,100529 (regressionFit = 9,100527, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, fri).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,583075 (regressionFit = 8,583073, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, austin).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,579801 (regressionFit = 8,579799, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cern).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530160 (regressionFit = 8,530158, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,724627 (regressionFit = 8,724625, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, program).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,599948 (regressionFit = 8,599946, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mime).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,100851 (regressionFit = 9,100849, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, implement).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530160 (regressionFit = 8,530158, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,709165 (regressionFit = 8,709163, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, tuesdai).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,584728 (regressionFit = 8,584726, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, univers).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,088581 (regressionFit = 9,088579, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, semant).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,055902 (regressionFit = 9,055900, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, docum).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,675148 (regressionFit = 8,675146, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, jan).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,949421 (regressionFit = 8,949419, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, class).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,082294 (regressionFit = 9,082292, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, extens).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, concept).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,648871 (regressionFit = 8,648869, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,076623 (regressionFit = 9,076621, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, abstract).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,101791 (regressionFit = 9,101789, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, describ).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530160 (regressionFit = 8,530158, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,102926 (regressionFit = 9,102924, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, match).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,793294 (regressionFit = 8,793292, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, refer).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,083378 (regressionFit = 9,083376, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, orient).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,101882 (regressionFit = 9,101880, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, tr).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,016070 (regressionFit = 9,016068, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, paper).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,584485 (regressionFit = 8,584483, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, scienc).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,067243 (regressionFit = 9,067241, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, decemb).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,530160 (regressionFit = 8,530158, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,387364 (regressionFit = 8,387362, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, utexa).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,103467 (regressionFit = 9,103465, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, pattern).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,066276 (regressionFit = 9,066274, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, object).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,092510 (regressionFit = 9,092508, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, function).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,826117 (regressionFit = 8,826115, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, depart).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,634154 (regressionFit = 8,634152, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, comput).  [covers 33,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,095563 (regressionFit = 9,095561, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, add).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,658491 (regressionFit = 8,658489, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,835370 (regressionFit = 8,835368, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, man).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,479871 (regressionFit = 8,479869, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, fax).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,093660 (regressionFit = 9,093658, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, check).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,968066 (regressionFit = 8,968064, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, address).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,860518 (regressionFit = 8,860516, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ftp).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, unix).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,554589 (regressionFit = 8,554587, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, inform).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,028100 (regressionFit = 9,028098, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, associ).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,089003 (regressionFit = 9,089001, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, person).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,032924 (regressionFit = 9,032922, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, quot).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,939239 (regressionFit = 8,939237, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, system).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,004431 (regressionFit = 9,004429, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, click).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,083116 (regressionFit = 9,083114, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, contact).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,594815 (regressionFit = 8,594813, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, www).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,076795 (regressionFit = 9,076793, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, info).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, dept).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,951429 (regressionFit = 8,951427, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, home).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,680414 (regressionFit = 8,680412, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, web).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,102400 (regressionFit = 9,102398, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, search).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,076237 (regressionFit = 9,076235, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, parallel).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,825585 (regressionFit = 8,825583, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, work).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,450617 (regressionFit = 8,450615, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, code).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,062073 (regressionFit = 9,062071, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, updat).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,029497 (regressionFit = 9,029495, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, link).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,065979 (regressionFit = 9,065977, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, postscript).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,059584 (regressionFit = 9,059582, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, project).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,422652 (regressionFit = 8,422650, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, graphic).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,107498 (regressionFit = 9,107496, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, visual).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,847912 (regressionFit = 8,847910, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, graduat).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,908862 (regressionFit = 8,908860, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ut).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,097838 (regressionFit = 9,097836, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, databas).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,081607 (regressionFit = 9,081605, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, phone).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,050800 (regressionFit = 9,050798, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, hall).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, tool).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,093503 (regressionFit = 9,093501, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, repres).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,890283 (regressionFit = 8,890281, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mail).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,570047 (regressionFit = 8,570045, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mondai).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,030469 (regressionFit = 9,030467, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, user).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,861195 (regressionFit = 8,861193, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, file).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,090450 (regressionFit = 9,090448, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, dec).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,079664 (regressionFit = 9,079662, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, tx).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, view).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,056900 (regressionFit = 9,056898, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, group).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, nbsp).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, octob).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,619125 (regressionFit = 8,619123, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, select).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,086367 (regressionFit = 9,086365, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, compress).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,078361 (regressionFit = 9,078359, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, academ).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,107773 (regressionFit = 9,107771, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, wednesdai).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,028537 (regressionFit = 9,028535, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, page).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,714568 (regressionFit = 8,714566, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, http).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,673793 (regressionFit = 8,673791, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, research).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,098226 (regressionFit = 9,098224, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, list).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -9,070865 (regressionFit = 9,070863, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, materi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,533902 (regressionFit = 8,533900, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,592321 (regressionFit = 8,592318, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,968907 (regressionFit = 8,968905, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,515522 (regressionFit = 8,515519, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,529626 (regressionFit = 8,529624, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,537288 (regressionFit = 8,537286, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-8.515521524063196

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-8.529626362618698

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-8.533901524425579

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-8.537287959075845

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-8.544636623266442

***** Warning: #21 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, fax).  [covers 17,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, fax).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
Setting 0.2078753920617782 for 
 // Learned this clause on outer loop cycle #1.  It scores=-7,22 and has recall=0,11, precision=0,99, and F1=0,19 (using m-estimates).
 // It covers 10,6% of the positive examples, 17 of 161,
(faculty(D) :- has(D, fax))

% On cycle #1, the best clause found is:
%      faculty(A) :- has(A, fax).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 17 positive examples, of which 17 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 10,6% of the positive examples and NaN% of the negatives.}
% Have selected pos example #135 as the next seed: faculty(httpwwwcsutexaseduusershqliufunhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 33 items to OPEN for evaluation and possible insertion.
% Have created 33 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,349919 (regressionFit = 7,349918, penalties=1.03E-6) for clause:  faculty(A) :- has(A, juli).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,349919): faculty(A) :- has(A, juli).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,340456 (regressionFit = 7,340455, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,340456): faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,390340 (regressionFit = 7,390339, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,351041 (regressionFit = 7,351040, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,336764 (regressionFit = 7,336763, penalties=1.03E-6) for clause:  faculty(A) :- has(A, net).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,336764): faculty(A) :- has(A, net).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,384520 (regressionFit = 7,384519, penalties=1.03E-6) for clause:  faculty(A) :- has(A, game).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,373343 (regressionFit = 7,373342, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,332488 (regressionFit = 7,332487, penalties=1.03E-6) for clause:  faculty(A) :- has(A, art).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,332488): faculty(A) :- has(A, art).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,362462 (regressionFit = 7,362461, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sundai).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,324409 (regressionFit = 7,324408, penalties=1.03E-6) for clause:  faculty(A) :- has(A, email).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,324409): faculty(A) :- has(A, email).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,361705 (regressionFit = 7,361704, penalties=1.03E-6) for clause:  faculty(A) :- has(A, movi).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,333461 (regressionFit = 7,333460, penalties=1.03E-6) for clause:  faculty(A) :- has(A, send).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,343093 (regressionFit = 7,343092, penalties=1.03E-6) for clause:  faculty(A) :- has(A, aug).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,349723 (regressionFit = 7,349722, penalties=1.03E-6) for clause:  faculty(A) :- has(A, imag).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,387371 (regressionFit = 7,387370, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,385110 (regressionFit = 7,385109, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,378330 (regressionFit = 7,378329, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,379433 (regressionFit = 7,379432, penalties=1.03E-6) for clause:  faculty(A) :- has(A, virtual).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,373343 (regressionFit = 7,373342, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,384206 (regressionFit = 7,384205, penalties=1.03E-6) for clause:  faculty(A) :- has(A, period).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,256607 (regressionFit = 7,256606, penalties=1.03E-6) for clause:  faculty(A) :- has(A, electr).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,256607): faculty(A) :- has(A, electr).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,354395 (regressionFit = 7,354394, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,643036 (regressionFit = 7,643035, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,395361 (regressionFit = 7,395360, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.354395116713583
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -7,343106 (regressionFit = 7,343104, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,366598 (regressionFit = 7,366596, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,321741 (regressionFit = 7,321739, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.321740872932412

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.366597572974516

% Consider expanding [#5 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.395360865313706
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,422269 (regressionFit = 7,422267, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,152242 (regressionFit = 7,152240, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,152242): faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,665198 (regressionFit = 7,665196, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,521504 (regressionFit = 7,521502, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,777863 (regressionFit = 7,777861, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,793550 (regressionFit = 7,793548, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,395445 (regressionFit = 7,395442, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,327216 (regressionFit = 7,327214, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,409076 (regressionFit = 7,409074, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,517363 (regressionFit = 7,517361, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,649307 (regressionFit = 7,649305, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,371134 (regressionFit = 7,371132, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,470456 (regressionFit = 7,470454, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,284654 (regressionFit = 7,284652, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.28465449891451

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.371133921780687

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.409075978363446

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.470456351753066

***** Warning: #22 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
Setting 0.24046189953727487 for 
 // Learned this clause on outer loop cycle #2.  It scores=-7,15 and has recall=0,02, precision=0,98, and F1=0,05 (using m-estimates).
 // It covers 2,5% of the positive examples, 4 of 161 (of which 2 are newly covered),
 // So far 19 (11,8%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon17119, D), course(Anon17119))

% On cycle #2, the best clause found is:
%      faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 2 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 11,8% of the positive examples and NaN% of the negatives.}
% Have selected pos example #137 as the next seed: faculty(httpwwwcsutexaseduusersemeryfpoophaskellfpoophaskellhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 51 items to OPEN for evaluation and possible insertion.
% Have created 51 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,884809 (regressionFit = 6,884808, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,884809): faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957280 (regressionFit = 6,957279, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,956451 (regressionFit = 6,956450, penalties=1.03E-6) for clause:  faculty(A) :- has(A, introduct).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,969268 (regressionFit = 6,969267, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mar).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,955319 (regressionFit = 6,955318, penalties=1.03E-6) for clause:  faculty(A) :- has(A, problem).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957648 (regressionFit = 6,957647, penalties=1.03E-6) for clause:  faculty(A) :- has(A, overview).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,963576 (regressionFit = 6,963575, penalties=1.03E-6) for clause:  faculty(A) :- has(A, equal).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,934297 (regressionFit = 6,934296, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fri).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,970681 (regressionFit = 6,970680, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,938246 (regressionFit = 6,938245, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,831827 (regressionFit = 6,831826, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,831827): faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,957280 (regressionFit = 6,957279, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,879770 (regressionFit = 6,879769, penalties=1.03E-6) for clause:  faculty(A) :- has(A, implement).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,964665 (regressionFit = 6,964664, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,786971 (regressionFit = 6,786970, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,786971): faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,938005 (regressionFit = 6,938004, penalties=1.03E-6) for clause:  faculty(A) :- has(A, semant).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,959760 (regressionFit = 6,959759, penalties=1.03E-6) for clause:  faculty(A) :- has(A, docum).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,942748 (regressionFit = 6,942747, penalties=1.03E-6) for clause:  faculty(A) :- has(A, class).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,931723 (regressionFit = 6,931722, penalties=1.03E-6) for clause:  faculty(A) :- has(A, extens).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,934187 (regressionFit = 6,934186, penalties=1.03E-6) for clause:  faculty(A) :- has(A, concept).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,960380 (regressionFit = 6,960379, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,830478 (regressionFit = 6,830477, penalties=1.03E-6) for clause:  faculty(A) :- has(A, languag).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,970322 (regressionFit = 6,970321, penalties=1.03E-6) for clause:  faculty(A) :- has(A, abstract).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,941502 (regressionFit = 6,941501, penalties=1.03E-6) for clause:  faculty(A) :- has(A, describ).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,969365 (regressionFit = 6,969364, penalties=1.03E-6) for clause:  faculty(A) :- has(A, match).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,943865 (regressionFit = 6,943864, penalties=1.03E-6) for clause:  faculty(A) :- has(A, refer).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,951294 (regressionFit = 6,951292, penalties=1.03E-6) for clause:  faculty(A) :- has(A, orient).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,933883 (regressionFit = 6,933882, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tr).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,970148 (regressionFit = 6,970147, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,773383 (regressionFit = 6,773382, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,773383): faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,673163 (regressionFit = 6,673162, penalties=1.03E-6) for clause:  faculty(A) :- has(A, decemb).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,673163): faculty(A) :- has(A, decemb).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,959787 (regressionFit = 6,959786, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,962661 (regressionFit = 6,962660, penalties=1.03E-6) for clause:  faculty(A) :- has(A, pattern).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,966286 (regressionFit = 6,966285, penalties=1.03E-6) for clause:  faculty(A) :- has(A, object).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,937380 (regressionFit = 6,937379, penalties=1.03E-6) for clause:  faculty(A) :- has(A, function).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,867890 (regressionFit = 6,867889, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,677772 (regressionFit = 6,677771, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,933510 (regressionFit = 6,933509, penalties=1.03E-6) for clause:  faculty(A) :- has(A, add).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,965482 (regressionFit = 6,965481, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,924634 (regressionFit = 6,924633, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,297060 (regressionFit = 7,297059, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,057755 (regressionFit = 7,057753, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.924634050026411
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,913345 (regressionFit = 6,913342, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,936837 (regressionFit = 6,936834, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,891980 (regressionFit = 6,891978, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.8919798062452395

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.936836506287344

% Consider expanding [#5 of outerLoop #3, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.057754580456602
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,937968 (regressionFit = 6,937966, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,152242 (regressionFit = 7,152240, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,296848 (regressionFit = 7,296846, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,032213 (regressionFit = 7,032211, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,341685 (regressionFit = 7,341683, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,364247 (regressionFit = 7,364245, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,077212 (regressionFit = 7,077210, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,973760 (regressionFit = 6,973757, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,050385 (regressionFit = 7,050383, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,198963 (regressionFit = 7,198961, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,186454 (regressionFit = 7,186452, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,082014 (regressionFit = 7,082012, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,182640 (regressionFit = 7,182638, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,963348 (regressionFit = 6,963346, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.963348197978714

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.050385034579056

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.0820136118068095

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.182639887910387

***** Warning: #23 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, decemb).  [covers 14,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, decemb).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
Setting 0.03729045461989613 for 
 // Learned this clause on outer loop cycle #3.  It scores=-6,67 and has recall=0,09, precision=0,99, and F1=0,16 (using m-estimates).
 // It covers 8,7% of the positive examples, 14 of 161 (of which 12 are newly covered),
 // So far 31 (19,3%) of the positive examples have been covered.
(faculty(D) :- has(D, decemb))

% On cycle #3, the best clause found is:
%      faculty(A) :- has(A, decemb).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 14 positive examples, of which 12 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 19,3% of the positive examples and NaN% of the negatives.}
% Have selected pos example #50 as the next seed: faculty(httpwwwcsutexaseduusersgunther)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 38 items to OPEN for evaluation and possible insertion.
% Have created 38 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,658234 (regressionFit = 6,658233, penalties=1.03E-6) for clause:  faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,658234): faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,824535 (regressionFit = 6,824534, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,842574 (regressionFit = 6,842573, penalties=1.03E-6) for clause:  faculty(A) :- has(A, undergradu).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,752609 (regressionFit = 6,752608, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,842999 (regressionFit = 6,842998, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,764264 (regressionFit = 6,764263, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,502036 (regressionFit = 6,502035, penalties=1.03E-6) for clause:  faculty(A) :- has(A, institut).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,502036): faculty(A) :- has(A, institut).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,834220 (regressionFit = 6,834219, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,818316 (regressionFit = 6,818315, penalties=1.03E-6) for clause:  faculty(A) :- has(A, usa).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,829123 (regressionFit = 6,829122, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,793732 (regressionFit = 6,793731, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,803534 (regressionFit = 6,803533, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,677760 (regressionFit = 6,677759, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,832322 (regressionFit = 6,832321, penalties=1.03E-6) for clause:  faculty(A) :- has(A, school).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,665785 (regressionFit = 6,665784, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,797321 (regressionFit = 6,797320, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oper).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,842810 (regressionFit = 6,842809, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,578735 (regressionFit = 6,578734, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,822529 (regressionFit = 6,822528, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graduat).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,638713 (regressionFit = 6,638712, penalties=1.03E-6) for clause:  faculty(A) :- has(A, student).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,777652 (regressionFit = 6,777651, penalties=1.03E-6) for clause:  faculty(A) :- has(A, year).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,834533 (regressionFit = 6,834532, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,756172 (regressionFit = 6,756171, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tx).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,824535 (regressionFit = 6,824534, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,838822 (regressionFit = 6,838820, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,842256 (regressionFit = 6,842255, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sep).  [covers 23,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,802684 (regressionFit = 6,802683, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,179810 (regressionFit = 7,179809, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,941474 (regressionFit = 6,941473, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.802683612950288
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,791925 (regressionFit = 6,791923, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,821821 (regressionFit = 6,821819, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,767899 (regressionFit = 6,767897, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.767899385758767

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.821821428538628

% Consider expanding [#5 of outerLoop #4, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.941473962164846
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,833985 (regressionFit = 6,833983, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,037353 (regressionFit = 7,037351, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,188876 (regressionFit = 7,188874, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,914924 (regressionFit = 6,914922, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,230476 (regressionFit = 7,230474, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,257646 (regressionFit = 7,257644, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,949206 (regressionFit = 6,949203, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,860748 (regressionFit = 6,860746, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,930558 (regressionFit = 6,930556, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,082589 (regressionFit = 7,082587, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,079269 (regressionFit = 7,079267, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,959986 (regressionFit = 6,959984, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,079318 (regressionFit = 7,079316, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,845806 (regressionFit = 6,845804, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.8458059275519

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.930558391610876

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.959986230217662

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]' score=-7.079269383408346

***** Warning: #24 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, institut).  [covers 20,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, institut).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
Setting 0.016944169379789615 for 
 // Learned this clause on outer loop cycle #4.  It scores=-6,50 and has recall=0,12, precision=1,00, and F1=0,22 (using m-estimates).
 // It covers 12,4% of the positive examples, 20 of 161 (of which 15 are newly covered),
 // So far 46 (28,6%) of the positive examples have been covered.
(faculty(D) :- has(D, institut))

% On cycle #4, the best clause found is:
%      faculty(A) :- has(A, institut).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 20 positive examples, of which 15 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 4 best clauses covers 28,6% of the positive examples and NaN% of the negatives.}
% Have selected pos example #41 as the next seed: faculty(httpwwwcsutexaseduusersdahlinClassesGradArchindexhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 100 items to OPEN for evaluation and possible insertion.
% Have created 100 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,715900 (regressionFit = 6,715899, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,715900): faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,735432 (regressionFit = 6,735431, penalties=1.03E-6) for clause:  faculty(A) :- has(A, compon).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,759853 (regressionFit = 6,759852, penalties=1.03E-6) for clause:  faculty(A) :- has(A, due).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,749647 (regressionFit = 6,749646, penalties=1.03E-6) for clause:  faculty(A) :- has(A, amp).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,760578 (regressionFit = 6,760577, penalties=1.03E-6) for clause:  faculty(A) :- has(A, advanc).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,719179 (regressionFit = 6,719178, penalties=1.03E-6) for clause:  faculty(A) :- has(A, perform).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,725252 (regressionFit = 6,725251, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,764091 (regressionFit = 6,764090, penalties=1.03E-6) for clause:  faculty(A) :- has(A, midterm).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,760791 (regressionFit = 6,760790, penalties=1.03E-6) for clause:  faculty(A) :- has(A, high).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,707217 (regressionFit = 6,707216, penalties=1.03E-6) for clause:  faculty(A) :- has(A, approach).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,707217): faculty(A) :- has(A, approach).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,745909 (regressionFit = 6,745908, penalties=1.03E-6) for clause:  faculty(A) :- has(A, review).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,566740 (regressionFit = 6,566739, penalties=1.03E-6) for clause:  faculty(A) :- has(A, analysi).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,566740): faculty(A) :- has(A, analysi).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,700754 (regressionFit = 6,700753, penalties=1.03E-6) for clause:  faculty(A) :- has(A, read).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,760987 (regressionFit = 6,760986, penalties=1.03E-6) for clause:  faculty(A) :- has(A, addition).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,469743 (regressionFit = 6,469742, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,469743): faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,751327 (regressionFit = 6,751326, penalties=1.03E-6) for clause:  faculty(A) :- has(A, processor).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,534852 (regressionFit = 6,534851, penalties=1.03E-6) for clause:  faculty(A) :- has(A, offic).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,213845 (regressionFit = 6,213844, penalties=1.03E-6) for clause:  faculty(A) :- has(A, confer).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,213845): faculty(A) :- has(A, confer).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,733859 (regressionFit = 6,733858, penalties=1.03E-6) for clause:  faculty(A) :- has(A, pointer).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,763384 (regressionFit = 6,763383, penalties=1.03E-6) for clause:  faculty(A) :- has(A, instructor).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,734918 (regressionFit = 6,734917, penalties=1.03E-6) for clause:  faculty(A) :- has(A, space).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,738088 (regressionFit = 6,738087, penalties=1.03E-6) for clause:  faculty(A) :- has(A, compar).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,758544 (regressionFit = 6,758543, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cost).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,754650 (regressionFit = 6,754649, penalties=1.03E-6) for clause:  faculty(A) :- has(A, meet).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,763138 (regressionFit = 6,763137, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mar).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,751542 (regressionFit = 6,751541, penalties=1.03E-6) for clause:  faculty(A) :- has(A, architectur).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,692095 (regressionFit = 6,692094, penalties=1.03E-6) for clause:  faculty(A) :- has(A, resourc).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,762445 (regressionFit = 6,762443, penalties=1.03E-6) for clause:  faculty(A) :- has(A, topic).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,493719 (regressionFit = 6,493718, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,746543 (regressionFit = 6,746542, penalties=1.03E-6) for clause:  faculty(A) :- has(A, present).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,746229 (regressionFit = 6,746228, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,757601 (regressionFit = 6,757600, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dai).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,762220 (regressionFit = 6,762219, penalties=1.03E-6) for clause:  faculty(A) :- has(A, network).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,748017 (regressionFit = 6,748016, penalties=1.03E-6) for clause:  faculty(A) :- has(A, exam).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,741892 (regressionFit = 6,741891, penalties=1.03E-6) for clause:  faculty(A) :- has(A, memori).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,721467 (regressionFit = 6,721466, penalties=1.03E-6) for clause:  faculty(A) :- has(A, compani).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,713297 (regressionFit = 6,713296, penalties=1.03E-6) for clause:  faculty(A) :- has(A, output).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,752913 (regressionFit = 6,752912, penalties=1.03E-6) for clause:  faculty(A) :- has(A, propos).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,747162 (regressionFit = 6,747161, penalties=1.03E-6) for clause:  faculty(A) :- has(A, input).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,762628 (regressionFit = 6,762627, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cach).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,747045 (regressionFit = 6,747044, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ta).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,752667 (regressionFit = 6,752666, penalties=1.03E-6) for clause:  faculty(A) :- has(A, homework).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,721062 (regressionFit = 6,721061, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fri).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,762701 (regressionFit = 6,762700, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,761629 (regressionFit = 6,761628, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,555512 (regressionFit = 6,555511, penalties=1.03E-6) for clause:  faculty(A) :- has(A, student).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,731504 (regressionFit = 6,731503, penalties=1.03E-6) for clause:  faculty(A) :- has(A, place).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,757866 (regressionFit = 6,757865, penalties=1.03E-6) for clause:  faculty(A) :- has(A, break).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,746736 (regressionFit = 6,746735, penalties=1.03E-6) for clause:  faculty(A) :- has(A, instruct).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,458076 (regressionFit = 6,458075, penalties=1.03E-6) for clause:  faculty(A) :- has(A, feb).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,632864 (regressionFit = 6,632863, penalties=1.03E-6) for clause:  faculty(A) :- has(A, parallel).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, appoint).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,737465 (regressionFit = 6,737464, penalties=1.03E-6) for clause:  faculty(A) :- has(A, disk).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,419556 (regressionFit = 6,419555, penalties=1.03E-6) for clause:  faculty(A) :- has(A, current).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,765157 (regressionFit = 6,765156, penalties=1.03E-6) for clause:  faculty(A) :- has(A, techniqu).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,756739 (regressionFit = 6,756738, penalties=1.03E-6) for clause:  faculty(A) :- has(A, grade).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,734912 (regressionFit = 6,734911, penalties=1.03E-6) for clause:  faculty(A) :- has(A, level).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, vector).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,600480 (regressionFit = 6,600478, penalties=1.03E-6) for clause:  faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,657936 (regressionFit = 6,657935, penalties=1.03E-6) for clause:  faculty(A) :- has(A, work).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,843270 (regressionFit = 5,843269, penalties=1.03E-6) for clause:  faculty(A) :- has(A, select).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,843270): faculty(A) :- has(A, select).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,707817 (regressionFit = 6,707816, penalties=1.03E-6) for clause:  faculty(A) :- has(A, st).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,754054 (regressionFit = 6,754053, penalties=1.03E-6) for clause:  faculty(A) :- has(A, product).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,756232 (regressionFit = 6,756231, penalties=1.03E-6) for clause:  faculty(A) :- has(A, choos).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,733780 (regressionFit = 6,733779, penalties=1.03E-6) for clause:  faculty(A) :- has(A, apr).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,757385 (regressionFit = 6,757384, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dynam).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,757831 (regressionFit = 6,757830, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,746229 (regressionFit = 6,746228, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,704468 (regressionFit = 6,704467, penalties=1.03E-6) for clause:  faculty(A) :- has(A, project).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,757121 (regressionFit = 6,757119, penalties=1.03E-6) for clause:  faculty(A) :- has(A, limit).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,762364 (regressionFit = 6,762363, penalties=1.03E-6) for clause:  faculty(A) :- has(A, hw).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,743593 (regressionFit = 6,743592, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nbsp).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,521014 (regressionFit = 6,521013, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,722881 (regressionFit = 6,722880, penalties=1.03E-6) for clause:  faculty(A) :- has(A, report).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,744585 (regressionFit = 6,744584, penalties=1.03E-6) for clause:  faculty(A) :- has(A, orient).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,725866 (regressionFit = 6,725865, penalties=1.03E-6) for clause:  faculty(A) :- has(A, spring).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,735046 (regressionFit = 6,735045, penalties=1.03E-6) for clause:  faculty(A) :- has(A, schedul).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,649542 (regressionFit = 6,649540, penalties=1.03E-6) for clause:  faculty(A) :- has(A, design).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,755907 (regressionFit = 6,755906, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,670119 (regressionFit = 6,670118, penalties=1.03E-6) for clause:  faculty(A) :- has(A, number).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,739530 (regressionFit = 6,739529, penalties=1.03E-6) for clause:  faculty(A) :- has(A, class).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,764715 (regressionFit = 6,764714, penalties=1.03E-6) for clause:  faculty(A) :- has(A, hour).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,764091 (regressionFit = 6,764090, penalties=1.03E-6) for clause:  faculty(A) :- has(A, note).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,741633 (regressionFit = 6,741632, penalties=1.03E-6) for clause:  faculty(A) :- has(A, major).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,738695 (regressionFit = 6,738694, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,749316 (regressionFit = 6,749315, penalties=1.03E-6) for clause:  faculty(A) :- has(A, evalu).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,763522 (regressionFit = 6,763521, penalties=1.03E-6) for clause:  faculty(A) :- has(A, week).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,747125 (regressionFit = 6,747124, penalties=1.03E-6) for clause:  faculty(A) :- has(A, written).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,724354 (regressionFit = 6,724353, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,102380 (regressionFit = 7,102379, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,867540 (regressionFit = 6,867539, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.724354253581611
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,713718 (regressionFit = 6,713716, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,744901 (regressionFit = 6,744899, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,689797 (regressionFit = 6,689795, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.68979709530681

% Consider expanding [#4 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.7449008261406025

% Consider expanding [#5 of outerLoop #5, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.867539833640269
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,765453 (regressionFit = 6,765451, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,978825 (regressionFit = 6,978823, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,128334 (regressionFit = 7,128332, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,841497 (regressionFit = 6,841495, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,166977 (regressionFit = 7,166975, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,195908 (regressionFit = 7,195906, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,877039 (regressionFit = 6,877037, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,788660 (regressionFit = 6,788658, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,860782 (regressionFit = 6,860780, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,013347 (regressionFit = 7,013345, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,008952 (regressionFit = 7,008950, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,884797 (regressionFit = 6,884795, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,010669 (regressionFit = 7,010667, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,770890 (regressionFit = 6,770888, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.77088961541528

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.860781630493702

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.884796988915724

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]' score=-7.008951670977466

***** Warning: #25 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, select).  [covers 17,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, select).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
Setting 0.11288802538925544 for 
 // Learned this clause on outer loop cycle #5.  It scores=-5,84 and has recall=0,11, precision=0,99, and F1=0,19 (using m-estimates).
 // It covers 10,6% of the positive examples, 17 of 161 (of which 8 are newly covered),
 // So far 54 (33,5%) of the positive examples have been covered.
(faculty(D) :- has(D, select))

% On cycle #5, the best clause found is:
%      faculty(A) :- has(A, select).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 17 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 5 best clauses covers 33,5% of the positive examples and NaN% of the negatives.}
% Have selected pos example #113 as the next seed: faculty(httpwwwcsutexaseduusersyufengtravelhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 30 items to OPEN for evaluation and possible insertion.
% Have created 30 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,077116 (regressionFit = 6,077115, penalties=1.03E-6) for clause:  faculty(A) :- has(A, collect).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,077116): faculty(A) :- has(A, collect).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,111753 (regressionFit = 6,111752, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interact).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,079502 (regressionFit = 6,079501, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,112582 (regressionFit = 6,112581, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,097875 (regressionFit = 6,097874, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,947138 (regressionFit = 5,947137, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nation).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,947138): faculty(A) :- has(A, nation).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,105137 (regressionFit = 6,105135, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,097875 (regressionFit = 6,097874, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,046756 (regressionFit = 6,046755, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,054301 (regressionFit = 6,054300, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,096072 (regressionFit = 6,096071, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fridai).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,986206 (regressionFit = 5,986205, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nov).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,062725 (regressionFit = 6,062724, penalties=1.03E-6) for clause:  faculty(A) :- has(A, map).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,099265 (regressionFit = 6,099264, penalties=1.03E-6) for clause:  faculty(A) :- has(A, travel).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,106629 (regressionFit = 6,106628, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,094338 (regressionFit = 6,094337, penalties=1.03E-6) for clause:  faculty(A) :- has(A, great).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,936924 (regressionFit = 5,936923, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,936924): faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,113647 (regressionFit = 6,113646, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,071956 (regressionFit = 6,071955, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,500203 (regressionFit = 6,500201, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,231436 (regressionFit = 6,231435, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.071956041534037
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,056309 (regressionFit = 6,056307, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,103458 (regressionFit = 6,103456, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,030380 (regressionFit = 6,030378, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.030379969054405

% Consider expanding [#4 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.103457831010761

% Consider expanding [#5 of outerLoop #6, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.2314360604773515
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,192383 (regressionFit = 6,192381, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,389027 (regressionFit = 6,389025, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,548637 (regressionFit = 6,548635, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,268079 (regressionFit = 6,268077, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,588833 (regressionFit = 6,588831, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,653896 (regressionFit = 6,653894, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,188375 (regressionFit = 6,188372, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,149356 (regressionFit = 6,149354, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,242780 (regressionFit = 6,242778, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,424278 (regressionFit = 6,424276, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,438605 (regressionFit = 6,438604, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,233383 (regressionFit = 6,233381, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,410049 (regressionFit = 6,410047, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,152350 (regressionFit = 6,152348, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.152349834867956

% Consider expanding [#7 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.233382838546533

% Consider expanding [#8 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.242780265757835

% Consider expanding [#9 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.4100490816292774

***** Warning: #26 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
Setting -0.18579657076100023 for 
 // Learned this clause on outer loop cycle #6.  It scores=-5,94 and has recall=0,20, precision=1,00, and F1=0,33 (using m-estimates).
 // It covers 19,9% of the positive examples, 32 of 161 (of which 18 are newly covered),
 // So far 72 (44,7%) of the positive examples have been covered.
(faculty(D) :- has(D, ut))

% On cycle #6, the best clause found is:
%      faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 32 positive examples, of which 18 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 6 best clauses covers 44,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #151 as the next seed: faculty(httpwwwcsutexaseduusersdastuartmiscfoodhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #7, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 33 items to OPEN for evaluation and possible insertion.
% Have created 33 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,147250 (regressionFit = 6,147249, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,147250): faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,205020 (regressionFit = 6,205019, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,201291 (regressionFit = 6,201290, penalties=1.03E-6) for clause:  faculty(A) :- has(A, orient).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,180357 (regressionFit = 6,180356, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,203539 (regressionFit = 6,203538, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,180357 (regressionFit = 6,180356, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,204166 (regressionFit = 6,204165, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,151531 (regressionFit = 6,151530, penalties=1.03E-6) for clause:  faculty(A) :- has(A, aug).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,058036 (regressionFit = 6,058035, penalties=1.03E-6) for clause:  faculty(A) :- has(A, phone).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,058036): faculty(A) :- has(A, phone).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,166590 (regressionFit = 6,166589, penalties=1.03E-6) for clause:  faculty(A) :- has(A, store).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,185023 (regressionFit = 6,185022, penalties=1.03E-6) for clause:  faculty(A) :- has(A, complet).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,171928 (regressionFit = 6,171927, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,188610 (regressionFit = 6,188609, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,115047 (regressionFit = 6,115046, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, doubl).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,205526 (regressionFit = 6,205525, penalties=1.03E-6) for clause:  faculty(A) :- has(A, guid).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,183832 (regressionFit = 6,183831, penalties=1.03E-6) for clause:  faculty(A) :- has(A, updat).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,191189 (regressionFit = 6,191188, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sourc).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,206369 (regressionFit = 6,206368, penalties=1.03E-6) for clause:  faculty(A) :- has(A, citi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,152665 (regressionFit = 6,152664, penalties=1.03E-6) for clause:  faculty(A) :- has(A, limit).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,125261 (regressionFit = 6,125260, penalties=1.03E-6) for clause:  faculty(A) :- has(A, street).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,165712 (regressionFit = 6,165711, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,365279 (regressionFit = 6,365278, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,178241 (regressionFit = 6,178240, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.165711935800815
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,157201 (regressionFit = 6,157199, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,166763 (regressionFit = 6,166761, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,146734 (regressionFit = 6,146732, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #7, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.146734036697067

% Consider expanding [#4 of outerLoop #7, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.166762700619088

% Consider expanding [#5 of outerLoop #7, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.178241395528433
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,202623 (regressionFit = 6,202621, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,290560 (regressionFit = 6,290558, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,414461 (regressionFit = 6,414459, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,229237 (regressionFit = 6,229235, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,477352 (regressionFit = 6,477350, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,494099 (regressionFit = 6,494097, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,124849 (regressionFit = 6,124846, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,154198 (regressionFit = 6,154196, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,316352 (regressionFit = 6,316350, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,352527 (regressionFit = 6,352525, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,340768 (regressionFit = 6,340766, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,152112 (regressionFit = 6,152110, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,227389 (regressionFit = 6,227387, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,168044 (regressionFit = 6,168042, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #7, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.152112198952714

% Consider expanding [#7 of outerLoop #7, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.168043604689993

% Consider expanding [#8 of outerLoop #7, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.227388766126509

% Consider expanding [#9 of outerLoop #7, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.3163523040968075

***** Warning: #27 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, phone).  [covers 21,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, phone).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
Setting -0.003614550604863565 for 
 // Learned this clause on outer loop cycle #7.  It scores=-6,06 and has recall=0,13, precision=1,00, and F1=0,23 (using m-estimates).
 // It covers 13,0% of the positive examples, 21 of 161 (of which 2 are newly covered),
 // So far 74 (46,0%) of the positive examples have been covered.
(faculty(D) :- has(D, phone))

% On cycle #7, the best clause found is:
%      faculty(A) :- has(A, phone).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 21 positive examples, of which 2 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 7 best clauses covers 46,0% of the positive examples and NaN% of the negatives.}
% Have selected pos example #87 as the next seed: faculty(httpwwwcsutexaseduuserslamNRLipatmhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #8, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 25 items to OPEN for evaluation and possible insertion.
% Have created 25 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,138467 (regressionFit = 6,138466, penalties=1.03E-6) for clause:  faculty(A) :- has(A, workshop).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,138467): faculty(A) :- has(A, workshop).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,203553 (regressionFit = 6,203552, penalties=1.03E-6) for clause:  faculty(A) :- has(A, talk).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,192870 (regressionFit = 6,192869, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,217258 (regressionFit = 6,217257, penalties=1.03E-6) for clause:  faculty(A) :- has(A, position).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,111807 (regressionFit = 6,111806, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nov).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,111807): faculty(A) :- has(A, nov).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,217321 (regressionFit = 6,217320, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,193131 (regressionFit = 6,193130, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,201308 (regressionFit = 6,201307, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,215551 (regressionFit = 6,215550, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157737 (regressionFit = 6,157736, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,101832 (regressionFit = 6,101831, penalties=1.03E-6) for clause:  faculty(A) :- has(A, integr).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,101832): faculty(A) :- has(A, integr).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,193131 (regressionFit = 6,193130, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, atm).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,177565 (regressionFit = 6,177564, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,377139 (regressionFit = 6,377138, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,189788 (regressionFit = 6,189787, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.17756533819065
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,169257 (regressionFit = 6,169255, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,178062 (regressionFit = 6,178060, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,158838 (regressionFit = 6,158836, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #8, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.158837955137917

% Consider expanding [#4 of outerLoop #8, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.1780623282701175

% Consider expanding [#5 of outerLoop #8, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.1897882252445005
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,215390 (regressionFit = 6,215388, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,297978 (regressionFit = 6,297976, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,424316 (regressionFit = 6,424314, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,241857 (regressionFit = 6,241855, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,487349 (regressionFit = 6,487347, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,504102 (regressionFit = 6,504100, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,136950 (regressionFit = 6,136948, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,165541 (regressionFit = 6,165539, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,326577 (regressionFit = 6,326575, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,362541 (regressionFit = 6,362539, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,352697 (regressionFit = 6,352695, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,163403 (regressionFit = 6,163400, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,237950 (regressionFit = 6,237948, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,179565 (regressionFit = 6,179563, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #8, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.163402524869258

% Consider expanding [#7 of outerLoop #8, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.1795651795376285

% Consider expanding [#8 of outerLoop #8, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.2379500376840795

% Consider expanding [#9 of outerLoop #8, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.326577390850917

***** Warning: #28 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, integr).  [covers 16,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, integr).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
Setting -0.16340202173326338 for 
 // Learned this clause on outer loop cycle #8.  It scores=-6,10 and has recall=0,10, precision=0,99, and F1=0,18 (using m-estimates).
 // It covers 9,9% of the positive examples, 16 of 161 (of which 9 are newly covered),
 // So far 83 (51,6%) of the positive examples have been covered.
(faculty(D) :- has(D, integr))

% On cycle #8, the best clause found is:
%      faculty(A) :- has(A, integr).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 9 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 8 best clauses covers 51,6% of the positive examples and NaN% of the negatives.}
% Have selected pos example #115 as the next seed: faculty(httpwwwcsutexaseduusersmirankertindexhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #9, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 30 items to OPEN for evaluation and possible insertion.
% Have created 30 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,155903 (regressionFit = 6,155902, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,155903): faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,148787 (regressionFit = 6,148786, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,148787): faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,164312 (regressionFit = 6,164311, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,083923 (regressionFit = 6,083922, penalties=1.03E-6) for clause:  faculty(A) :- has(A, project).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,083923): faculty(A) :- has(A, project).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,176961 (regressionFit = 6,176959, penalties=1.03E-6) for clause:  faculty(A) :- has(A, term).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,177232 (regressionFit = 6,177231, penalties=1.03E-6) for clause:  faculty(A) :- has(A, materi).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,169906 (regressionFit = 6,169905, penalties=1.03E-6) for clause:  faculty(A) :- has(A, overview).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,164771 (regressionFit = 6,164770, penalties=1.03E-6) for clause:  faculty(A) :- has(A, schedul).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,126101 (regressionFit = 6,126099, penalties=1.03E-6) for clause:  faculty(A) :- has(A, read).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,155903 (regressionFit = 6,155902, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,178089 (regressionFit = 6,178088, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oct).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,156661 (regressionFit = 6,156660, penalties=1.03E-6) for clause:  faculty(A) :- has(A, homework).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,138119 (regressionFit = 6,138118, penalties=1.03E-6) for clause:  faculty(A) :- has(A, seminar).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,160859 (regressionFit = 6,160858, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,128927 (regressionFit = 6,128926, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fridai).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,178353 (regressionFit = 6,178352, penalties=1.03E-6) for clause:  faculty(A) :- has(A, databas).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,178166 (regressionFit = 6,178164, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,165549 (regressionFit = 6,165548, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,155024 (regressionFit = 6,155023, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,256539 (regressionFit = 6,256538, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157684 (regressionFit = 6,157683, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #9, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.155023545700102
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,146715 (regressionFit = 6,146713, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,155521 (regressionFit = 6,155519, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,136296 (regressionFit = 6,136294, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #9, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.136296162647369

% Consider expanding [#4 of outerLoop #9, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.155520535779569

% Consider expanding [#5 of outerLoop #9, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.157683676731683
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 113 items to OPEN for evaluation and possible insertion.
% Have created 113 valid-on-seeds descendants.
%     Score = -6,095492 (regressionFit = 6,095490, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,190813 (regressionFit = 6,190811, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,307466 (regressionFit = 6,307464, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,161803 (regressionFit = 6,161801, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,353364 (regressionFit = 6,353362, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,357980 (regressionFit = 6,357978, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,150061 (regressionFit = 6,150059, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,135813 (regressionFit = 6,135811, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,199746 (regressionFit = 6,199744, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, version).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,348943 (regressionFit = 6,348941, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, list).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,199746 (regressionFit = 6,199744, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, cern).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,304374 (regressionFit = 6,304372, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, project).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, term).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,341128 (regressionFit = 6,341126, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, materi).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,358926 (regressionFit = 6,358924, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, overview).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,355723 (regressionFit = 6,355721, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, schedul).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,362517 (regressionFit = 6,362514, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, read).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,199746 (regressionFit = 6,199744, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mime).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,361101 (regressionFit = 6,361099, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, oct).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,361356 (regressionFit = 6,361354, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, homework).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, seminar).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,096903 (regressionFit = 6,096901, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mondai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,331782 (regressionFit = 6,331780, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, fridai).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,273393 (regressionFit = 6,273390, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, databas).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,160700 (regressionFit = 6,160698, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,152511 (regressionFit = 6,152509, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,146770 (regressionFit = 6,146768, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, jan).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,355143 (regressionFit = 6,355141, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, foundat).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,300209 (regressionFit = 6,300207, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, paper).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,323960 (regressionFit = 6,323958, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cover).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, collect).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,342378 (regressionFit = 6,342376, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, term).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, distribut).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,279624 (regressionFit = 6,279622, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, orient).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,181085 (regressionFit = 6,181083, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, sep).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,328447 (regressionFit = 6,328445, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, activ).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,254129 (regressionFit = 6,254127, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, manag).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,260807 (regressionFit = 6,260805, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, larg).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, year).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,293848 (regressionFit = 6,293846, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, background).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,130811 (regressionFit = 6,130809, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, program).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,239934 (regressionFit = 6,239932, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, student).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,320690 (regressionFit = 6,320688, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, includ).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,267998 (regressionFit = 6,267996, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, read).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, execut).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,171607 (regressionFit = 6,171605, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, instructor).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,023386 (regressionFit = 6,023384, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, write).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,023386): faculty(A) :- linkto(B, A), has(B, write).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,376193 (regressionFit = 6,376191, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, lectur).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,359149 (regressionFit = 6,359147, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, introduct).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,327700 (regressionFit = 6,327698, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, integr).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,294575 (regressionFit = 6,294573, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, start).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,377350 (regressionFit = 6,377347, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, page).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,175089 (regressionFit = 6,175087, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, web).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,415777 (regressionFit = 6,415775, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, wednesdai).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,140510 (regressionFit = 6,140508, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, inform).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, investig).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,206584 (regressionFit = 6,206582, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, copi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,302444 (regressionFit = 6,302442, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, wide).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,345883 (regressionFit = 6,345881, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, databas).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, consist).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,323905 (regressionFit = 6,323903, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, part).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,333531 (regressionFit = 6,333529, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, seminar).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,376495 (regressionFit = 6,376493, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, data).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354258 (regressionFit = 6,354256, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, develop).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,330557 (regressionFit = 6,330555, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, depend).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,083510 (regressionFit = 6,083508, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mondai).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, java).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,397680 (regressionFit = 6,397678, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, issu).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, measur).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,374254 (regressionFit = 6,374252, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, provid).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,334955 (regressionFit = 6,334953, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, respons).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,292363 (regressionFit = 6,292361, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, form).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,227752 (regressionFit = 6,227750, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, version).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,377464 (regressionFit = 6,377462, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, list).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,293953 (regressionFit = 6,293951, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, project).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,314184 (regressionFit = 6,314182, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, begin).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, net).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,266070 (regressionFit = 6,266068, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, object).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,203863 (regressionFit = 6,203861, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cern).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,272413 (regressionFit = 6,272411, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, world).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,227752 (regressionFit = 6,227750, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mime).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,236146 (regressionFit = 6,236144, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, comput).  [covers 33,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,207632 (regressionFit = 6,207630, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,216993 (regressionFit = 6,216991, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, jan).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,352245 (regressionFit = 6,352243, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, homework).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,297442 (regressionFit = 6,297440, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, class).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157685 (regressionFit = 6,157683, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,264766 (regressionFit = 6,264764, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, present).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,283559 (regressionFit = 6,283557, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, home).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,291715 (regressionFit = 6,291713, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, semest).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,190552 (regressionFit = 6,190550, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, origin).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,252164 (regressionFit = 6,252162, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,278624 (regressionFit = 6,278622, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,244513 (regressionFit = 6,244511, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,146231 (regressionFit = 6,146229, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,187947 (regressionFit = 6,187945, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,140006 (regressionFit = 6,140004, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #9, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.14000646027658

% Consider expanding [#7 of outerLoop #9, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.146230631856063

% Consider expanding [#8 of outerLoop #9, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.187946781619219

% Consider expanding [#9 of outerLoop #9, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]' score=-6.244512551213821

***** Warning: #29 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), has(B, write).  [covers 7,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), has(B, write).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
Setting 0.11028770236176233 for 
 // Learned this clause on outer loop cycle #9.  It scores=-6,02 and has recall=0,04, precision=0,99, and F1=0,08 (using m-estimates).
 // It covers 4,3% of the positive examples, 7 of 161 (of which 3 are newly covered),
 // So far 86 (53,4%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon20273, D), has(Anon20273, write))

% On cycle #9, the best clause found is:
%      faculty(A) :- linkto(B, A), has(B, write).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 7 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 9 best clauses covers 53,4% of the positive examples and NaN% of the negatives.}
% Have selected pos example #155 as the next seed: faculty(httpwwwcsutexaseduuserspspnotesunityhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #10, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 69 items to OPEN for evaluation and possible insertion.
% Have created 69 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,010065 (regressionFit = 6,010064, penalties=1.03E-6) for clause:  faculty(A) :- has(A, point).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,010065): faculty(A) :- has(A, point).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,033019 (regressionFit = 6,033017, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,020702 (regressionFit = 6,020701, penalties=1.03E-6) for clause:  faculty(A) :- has(A, john).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,035659 (regressionFit = 6,035658, penalties=1.03E-6) for clause:  faculty(A) :- has(A, neural).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,051486 (regressionFit = 6,051485, penalties=1.03E-6) for clause:  faculty(A) :- has(A, prove).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,045274 (regressionFit = 6,045273, penalties=1.03E-6) for clause:  faculty(A) :- has(A, time).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,985900 (regressionFit = 5,985899, penalties=1.03E-6) for clause:  faculty(A) :- has(A, synchron).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,985900): faculty(A) :- has(A, synchron).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,999660 (regressionFit = 5,999659, penalties=1.03E-6) for clause:  faculty(A) :- has(A, relat).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,034433 (regressionFit = 6,034432, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mar).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,040100 (regressionFit = 6,040099, penalties=1.03E-6) for clause:  faculty(A) :- has(A, theorem).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,980050 (regressionFit = 5,980049, penalties=1.03E-6) for clause:  faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,980050): faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,023682 (regressionFit = 6,023681, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,035027 (regressionFit = 6,035026, penalties=1.03E-6) for clause:  faculty(A) :- has(A, special).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,041808 (regressionFit = 6,041806, penalties=1.03E-6) for clause:  faculty(A) :- has(A, reason).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,051709 (regressionFit = 6,051708, penalties=1.03E-6) for clause:  faculty(A) :- has(A, rule).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,042402 (regressionFit = 6,042401, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,935488 (regressionFit = 5,935487, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,935488): faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,029929 (regressionFit = 6,029928, penalties=1.03E-6) for clause:  faculty(A) :- has(A, properti).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,023558 (regressionFit = 6,023557, penalties=1.03E-6) for clause:  faculty(A) :- has(A, question).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,994333 (regressionFit = 5,994332, penalties=1.03E-6) for clause:  faculty(A) :- has(A, electron).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,048046 (regressionFit = 6,048045, penalties=1.03E-6) for clause:  faculty(A) :- has(A, postscript).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,047259 (regressionFit = 6,047258, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dynam).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,014301 (regressionFit = 6,014300, penalties=1.03E-6) for clause:  faculty(A) :- has(A, add).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,048444 (regressionFit = 6,048443, penalties=1.03E-6) for clause:  faculty(A) :- has(A, note).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,644024 (regressionFit = 5,644023, penalties=1.03E-6) for clause:  faculty(A) :- has(A, process).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,644024): faculty(A) :- has(A, process).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,047751 (regressionFit = 6,047750, penalties=1.03E-6) for clause:  faculty(A) :- has(A, import).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,037848 (regressionFit = 6,037847, penalties=1.03E-6) for clause:  faculty(A) :- has(A, compress).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,759453 (regressionFit = 5,759452, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,025996 (regressionFit = 6,025995, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,051840 (regressionFit = 6,051839, penalties=1.03E-6) for clause:  faculty(A) :- has(A, network).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,036206 (regressionFit = 6,036205, penalties=1.03E-6) for clause:  faculty(A) :- has(A, definit).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,035905 (regressionFit = 6,035904, penalties=1.03E-6) for clause:  faculty(A) :- has(A, detect).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,049994 (regressionFit = 6,049993, penalties=1.03E-6) for clause:  faculty(A) :- has(A, construct).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,051250 (regressionFit = 6,051249, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,956219 (regressionFit = 5,956218, penalties=1.03E-6) for clause:  faculty(A) :- has(A, algorithm).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,035089 (regressionFit = 6,035088, penalties=1.03E-6) for clause:  faculty(A) :- has(A, part).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,033588 (regressionFit = 6,033587, penalties=1.03E-6) for clause:  faculty(A) :- has(A, exampl).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,042015 (regressionFit = 6,042014, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,986022 (regressionFit = 5,986021, penalties=1.03E-6) for clause:  faculty(A) :- has(A, variabl).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sequenc).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,031875 (regressionFit = 6,031874, penalties=1.03E-6) for clause:  faculty(A) :- has(A, author).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,049720 (regressionFit = 6,049719, penalties=1.03E-6) for clause:  faculty(A) :- has(A, involv).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,023048 (regressionFit = 6,023047, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comment).  [covers 28,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,051129 (regressionFit = 6,051128, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fix).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,051780 (regressionFit = 6,051779, penalties=1.03E-6) for clause:  faculty(A) :- has(A, complet).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,049652 (regressionFit = 6,049651, penalties=1.03E-6) for clause:  faculty(A) :- has(A, real).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,006571 (regressionFit = 6,006570, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mail).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,049665 (regressionFit = 6,049664, penalties=1.03E-6) for clause:  faculty(A) :- has(A, request).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,041307 (regressionFit = 6,041306, penalties=1.03E-6) for clause:  faculty(A) :- has(A, proof).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,021894 (regressionFit = 6,021893, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,036860 (regressionFit = 6,036859, penalties=1.03E-6) for clause:  faculty(A) :- has(A, correct).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,029893 (regressionFit = 6,029892, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gener).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,991911 (regressionFit = 5,991910, penalties=1.03E-6) for clause:  faculty(A) :- has(A, function).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,047228 (regressionFit = 6,047227, penalties=1.03E-6) for clause:  faculty(A) :- has(A, form).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,045818 (regressionFit = 6,045817, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,023682 (regressionFit = 6,023681, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,028774 (regressionFit = 6,028772, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graph).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,042579 (regressionFit = 6,042578, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,173127 (regressionFit = 6,173125, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,065805 (regressionFit = 6,065804, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #10, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.042579420904982
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,020976 (regressionFit = 6,020974, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,058732 (regressionFit = 6,058730, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,018128 (regressionFit = 6,018126, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #10, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.018127764762401

% Consider expanding [#4 of outerLoop #10, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.058731995423273

% Consider expanding [#5 of outerLoop #10, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.065804980061984
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,042688 (regressionFit = 6,042686, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,012179 (regressionFit = 6,012177, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,134324 (regressionFit = 6,134322, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,069942 (regressionFit = 6,069940, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,211436 (regressionFit = 6,211434, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,199764 (regressionFit = 6,199762, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,061468 (regressionFit = 6,061466, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,035531 (regressionFit = 6,035529, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,099683 (regressionFit = 6,099681, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,157765 (regressionFit = 6,157763, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,107322 (regressionFit = 6,107320, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,067094 (regressionFit = 6,067092, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,117188 (regressionFit = 6,117186, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,021737 (regressionFit = 6,021735, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #10, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.021737076231

% Consider expanding [#7 of outerLoop #10, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.067094301603601

% Consider expanding [#8 of outerLoop #10, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.099682686112099

% Consider expanding [#9 of outerLoop #10, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]' score=-6.107322211345391

***** Warning: #30 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, process).  [covers 21,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, process).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
Setting 0.059525032577381246 for 
 // Learned this clause on outer loop cycle #10.  It scores=-5,64 and has recall=0,13, precision=1,00, and F1=0,23 (using m-estimates).
 // It covers 13,0% of the positive examples, 21 of 161 (of which 4 are newly covered),
 // So far 90 (55,9%) of the positive examples have been covered.
(faculty(D) :- has(D, process))

% On cycle #10, the best clause found is:
%      faculty(A) :- has(A, process).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 21 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 10 best clauses covers 55,9% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (10).

% ******************************************
adding regression values
Added 0.2078753920617782 to wgt = 0,2079 (faculty(A) :- has(A, fax))
Added 0.24046189953727487 to wgt = 0,2405 (faculty(A) :- linkto(B, A), course(B))
Added 0.03729045461989613 to wgt = 0,0373 (faculty(A) :- has(A, decemb))
Added 0.016944169379789615 to wgt = 0,0169 (faculty(A) :- has(A, institut))
Added 0.11288802538925544 to wgt = 0,1129 (faculty(A) :- has(A, select))
Added -0.18579657076100023 to wgt = -0,1858 (faculty(A) :- has(A, ut))
Added -0.003614550604863565 to wgt = -0,0036 (faculty(A) :- has(A, phone))
Added -0.16340202173326338 to wgt = -0,1634 (faculty(A) :- has(A, integr))
Added 0.11028770236176233 to wgt = 0,1103 (faculty(A) :- linkto(B, A), has(B, write))
Added 0.059525032577381246 to wgt = 0,0595 (faculty(A) :- has(A, process))
% Saving model in: datasets\MyWebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 2 trees is 13,843 seconds.

% Kept 10 of the 10 positive examples.
% Kept 151 of the 151 negative examples.
% Dataset size: 161
Computing probabilities
prob time:176 milliseconds
No hidden examples for : faculty
Time to build dataset: 179 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #63 as the next seed: faculty(httpwwwcsutexaseduuserstwangmusicmusichtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 33 items to OPEN for evaluation and possible insertion.
% Have created 33 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,898958 (regressionFit = 7,898957, penalties=1.03E-6) for clause:  faculty(A) :- has(A, back).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,898958): faculty(A) :- has(A, back).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,852588 (regressionFit = 7,852587, penalties=1.03E-6) for clause:  faculty(A) :- has(A, chang).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,852588): faculty(A) :- has(A, chang).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,833977 (regressionFit = 7,833976, penalties=1.03E-6) for clause:  faculty(A) :- has(A, don).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,833977): faculty(A) :- has(A, don).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,873750 (regressionFit = 7,873749, penalties=1.03E-6) for clause:  faculty(A) :- has(A, music).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,875583 (regressionFit = 7,875582, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ll).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,408031 (regressionFit = 7,408030, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ii).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,408031): faculty(A) :- has(A, ii).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,883111 (regressionFit = 7,883110, penalties=1.03E-6) for clause:  faculty(A) :- has(A, copyright).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,874879 (regressionFit = 7,874878, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,877984 (regressionFit = 7,877983, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dai).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,782302 (regressionFit = 7,782301, penalties=1.03E-6) for clause:  faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,890632 (regressionFit = 7,890631, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,898972 (regressionFit = 7,898971, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,896018 (regressionFit = 7,896017, penalties=1.03E-6) for clause:  faculty(A) :- has(A, world).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,862818 (regressionFit = 7,862817, penalties=1.03E-6) for clause:  faculty(A) :- has(A, produc).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,900123 (regressionFit = 7,900122, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,869985 (regressionFit = 7,869984, penalties=1.03E-6) for clause:  faculty(A) :- has(A, great).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,839390 (regressionFit = 7,839389, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,874323 (regressionFit = 7,874322, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,817221 (regressionFit = 7,817220, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,874323 (regressionFit = 7,874322, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,869915 (regressionFit = 7,869914, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,737430 (regressionFit = 7,737429, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,937233 (regressionFit = 7,937232, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,760684 (regressionFit = 7,760683, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.737430238881009
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -7,754940 (regressionFit = 7,754938, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,686414 (regressionFit = 7,686412, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,756707 (regressionFit = 7,756705, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.686414341837899

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.756707157574541

% Consider expanding [#5 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.76068420362509
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -8,002955 (regressionFit = 8,002953, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,571019 (regressionFit = 7,571017, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,016263 (regressionFit = 8,016261, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,086304 (regressionFit = 8,086302, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,255087 (regressionFit = 8,255085, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,266201 (regressionFit = 8,266199, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,757827 (regressionFit = 7,757825, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,710667 (regressionFit = 7,710665, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,780561 (regressionFit = 7,780559, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,833866 (regressionFit = 7,833864, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,143286 (regressionFit = 8,143284, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,739321 (regressionFit = 7,739319, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,767924 (regressionFit = 7,767922, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,760215 (regressionFit = 7,760213, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.739320703374582

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.76021477105527

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.767924297604933

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.780560547419012

***** Warning: #31 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, ii).  [covers 5,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, ii).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
Setting 0.2340965334744257 for 
 // Learned this clause on outer loop cycle #1.  It scores=-7,41 and has recall=0,03, precision=0,98, and F1=0,06 (using m-estimates).
 // It covers 3,1% of the positive examples, 5 of 161,
(faculty(D) :- has(D, ii))

% On cycle #1, the best clause found is:
%      faculty(A) :- has(A, ii).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 3,1% of the positive examples and NaN% of the negatives.}
% Have selected pos example #145 as the next seed: faculty(httpwwwcsutexaseduuserslavenderCSFallprogramsindexhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 64 items to OPEN for evaluation and possible insertion.
% Have created 64 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,330949 (regressionFit = 7,330948, penalties=1.03E-6) for clause:  faculty(A) :- has(A, chapter).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,330949): faculty(A) :- has(A, chapter).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,421505 (regressionFit = 7,421504, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,342649 (regressionFit = 7,342648, penalties=1.03E-6) for clause:  faculty(A) :- has(A, assign).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,425464 (regressionFit = 7,425463, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,274861 (regressionFit = 7,274860, penalties=1.03E-6) for clause:  faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,274861): faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,439487 (regressionFit = 7,439486, penalties=1.03E-6) for clause:  faculty(A) :- has(A, introduct).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,442832 (regressionFit = 7,442831, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,309010 (regressionFit = 7,309009, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,368732 (regressionFit = 7,368731, penalties=1.03E-6) for clause:  faculty(A) :- has(A, find).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,435031 (regressionFit = 7,435030, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,354941 (regressionFit = 7,354940, penalties=1.03E-6) for clause:  faculty(A) :- has(A, due).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,430455 (regressionFit = 7,430454, penalties=1.03E-6) for clause:  faculty(A) :- has(A, info).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,433905 (regressionFit = 7,433904, penalties=1.03E-6) for clause:  faculty(A) :- has(A, unix).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,419482 (regressionFit = 7,419481, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,394635 (regressionFit = 7,394634, penalties=1.03E-6) for clause:  faculty(A) :- has(A, command).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,434678 (regressionFit = 7,434677, penalties=1.03E-6) for clause:  faculty(A) :- has(A, postscript).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,390700 (regressionFit = 7,390699, penalties=1.03E-6) for clause:  faculty(A) :- has(A, manual).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,190114 (regressionFit = 7,190113, penalties=1.03E-6) for clause:  faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,190114): faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,311470 (regressionFit = 7,311469, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nov).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,415936 (regressionFit = 7,415935, penalties=1.03E-6) for clause:  faculty(A) :- has(A, download).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,428215 (regressionFit = 7,428214, penalties=1.03E-6) for clause:  faculty(A) :- has(A, class).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,434046 (regressionFit = 7,434045, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,320896 (regressionFit = 7,320895, penalties=1.03E-6) for clause:  faculty(A) :- has(A, read).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,422523 (regressionFit = 7,422522, penalties=1.03E-6) for clause:  faculty(A) :- has(A, octob).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,411040 (regressionFit = 7,411039, penalties=1.03E-6) for clause:  faculty(A) :- has(A, control).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,351319 (regressionFit = 7,351318, penalties=1.03E-6) for clause:  faculty(A) :- has(A, refer).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,426423 (regressionFit = 7,426422, penalties=1.03E-6) for clause:  faculty(A) :- has(A, septemb).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,059065 (regressionFit = 7,059063, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,059065): faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,426522 (regressionFit = 7,426521, penalties=1.03E-6) for clause:  faculty(A) :- has(A, novemb).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,422860 (regressionFit = 7,422859, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,263904 (regressionFit = 7,263903, penalties=1.03E-6) for clause:  faculty(A) :- has(A, iter).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,384500 (regressionFit = 7,384499, penalties=1.03E-6) for clause:  faculty(A) :- has(A, man).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,411775 (regressionFit = 7,411774, penalties=1.03E-6) for clause:  faculty(A) :- has(A, onlin).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,427151 (regressionFit = 7,427150, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fridai).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,381392 (regressionFit = 7,381391, penalties=1.03E-6) for clause:  faculty(A) :- has(A, build).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,210527 (regressionFit = 7,210526, penalties=1.03E-6) for clause:  faculty(A) :- has(A, compil).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,359191 (regressionFit = 7,359190, penalties=1.03E-6) for clause:  faculty(A) :- has(A, descript).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,271156 (regressionFit = 7,271155, penalties=1.03E-6) for clause:  faculty(A) :- has(A, appli).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,403395 (regressionFit = 7,403394, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,440589 (regressionFit = 7,440588, penalties=1.03E-6) for clause:  faculty(A) :- has(A, short).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,354501 (regressionFit = 7,354500, penalties=1.03E-6) for clause:  faculty(A) :- has(A, standard).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,422860 (regressionFit = 7,422859, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,372993 (regressionFit = 7,372992, penalties=1.03E-6) for clause:  faculty(A) :- has(A, instruct).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,442686 (regressionFit = 7,442685, penalties=1.03E-6) for clause:  faculty(A) :- has(A, write).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,438014 (regressionFit = 7,438013, penalties=1.03E-6) for clause:  faculty(A) :- has(A, simpl).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,413325 (regressionFit = 7,413324, penalties=1.03E-6) for clause:  faculty(A) :- has(A, grant).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,426487 (regressionFit = 7,426486, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gener).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,441588 (regressionFit = 7,441587, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thursdai).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,434290 (regressionFit = 7,434289, penalties=1.03E-6) for clause:  faculty(A) :- has(A, updat).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,367994 (regressionFit = 7,367993, penalties=1.03E-6) for clause:  faculty(A) :- has(A, extens).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,443679 (regressionFit = 7,443678, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oct).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,402967 (regressionFit = 7,402966, penalties=1.03E-6) for clause:  faculty(A) :- has(A, start).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,317541 (regressionFit = 7,317540, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,529921 (regressionFit = 7,529919, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,337110 (regressionFit = 7,337109, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.317541101366703
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -7,323687 (regressionFit = 7,323685, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,293603 (regressionFit = 7,293601, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,323144 (regressionFit = 7,323142, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.293602694731084

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.323144026787819

% Consider expanding [#5 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.337110047916045
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,575831 (regressionFit = 7,575829, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,148492 (regressionFit = 7,148490, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,599936 (regressionFit = 7,599934, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,655798 (regressionFit = 7,655796, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,859761 (regressionFit = 7,859759, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,877053 (regressionFit = 7,877051, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,330565 (regressionFit = 7,330563, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,277993 (regressionFit = 7,277991, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,350749 (regressionFit = 7,350747, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,408847 (regressionFit = 7,408845, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,737569 (regressionFit = 7,737567, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,307837 (regressionFit = 7,307835, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,352023 (regressionFit = 7,352021, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,302316 (regressionFit = 7,302314, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.302315669928491

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.307837058989315

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.350749385966988

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.352023366784513

***** Warning: #32 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
Setting -0.0229575792592118 for 
 // Learned this clause on outer loop cycle #2.  It scores=-7,06 and has recall=0,40, precision=1,00, and F1=0,57 (using m-estimates).
 // It covers 39,8% of the positive examples, 64 of 161 (of which 61 are newly covered),
 // So far 66 (41,0%) of the positive examples have been covered.
(faculty(D) :- has(D, inform))

% On cycle #2, the best clause found is:
%      faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 64 positive examples, of which 61 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 41,0% of the positive examples and NaN% of the negatives.}
% Have selected pos example #46 as the next seed: faculty(httpwwwcsutexaseduusershaizhouacademichtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 69 items to OPEN for evaluation and possible insertion.
% Have created 69 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,619898 (regressionFit = 7,619897, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gener).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,619898): faculty(A) :- has(A, gener).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,581140 (regressionFit = 7,581139, penalties=1.03E-6) for clause:  faculty(A) :- has(A, line).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,581140): faculty(A) :- has(A, line).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,621540 (regressionFit = 7,621539, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fridai).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,603306 (regressionFit = 7,603305, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,640598 (regressionFit = 7,640597, penalties=1.03E-6) for clause:  faculty(A) :- has(A, electron).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,303938 (regressionFit = 7,303937, penalties=1.03E-6) for clause:  faculty(A) :- has(A, technic).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,303938): faculty(A) :- has(A, technic).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,599138 (regressionFit = 7,599137, penalties=1.03E-6) for clause:  faculty(A) :- has(A, resourc).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,617436 (regressionFit = 7,617435, penalties=1.03E-6) for clause:  faculty(A) :- has(A, index).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,944347 (regressionFit = 6,944346, penalties=1.03E-6) for clause:  faculty(A) :- has(A, associ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,944347): faculty(A) :- has(A, associ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,617489 (regressionFit = 7,617488, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,965024 (regressionFit = 6,965023, penalties=1.03E-6) for clause:  faculty(A) :- has(A, journal).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,566233 (regressionFit = 7,566232, penalties=1.03E-6) for clause:  faculty(A) :- has(A, collect).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,640092 (regressionFit = 7,640091, penalties=1.03E-6) for clause:  faculty(A) :- has(A, techniqu).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,421049 (regressionFit = 7,421047, penalties=1.03E-6) for clause:  faculty(A) :- has(A, method).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,919978 (regressionFit = 6,919977, penalties=1.03E-6) for clause:  faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,919978): faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,396774 (regressionFit = 7,396773, penalties=1.03E-6) for clause:  faculty(A) :- has(A, acm).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,466865 (regressionFit = 7,466864, penalties=1.03E-6) for clause:  faculty(A) :- has(A, don).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,639714 (regressionFit = 7,639713, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,988296 (regressionFit = 6,988295, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interest).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,598462 (regressionFit = 7,598461, penalties=1.03E-6) for clause:  faculty(A) :- has(A, project).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,568944 (regressionFit = 7,568942, penalties=1.03E-6) for clause:  faculty(A) :- has(A, report).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,626136 (regressionFit = 7,626135, penalties=1.03E-6) for clause:  faculty(A) :- has(A, societi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,620475 (regressionFit = 7,620474, penalties=1.03E-6) for clause:  faculty(A) :- has(A, web).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,565973 (regressionFit = 7,565972, penalties=1.03E-6) for clause:  faculty(A) :- has(A, optim).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,191746 (regressionFit = 7,191745, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,621571 (regressionFit = 7,621570, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,581076 (regressionFit = 7,581075, penalties=1.03E-6) for clause:  faculty(A) :- has(A, wide).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,632842 (regressionFit = 7,632841, penalties=1.03E-6) for clause:  faculty(A) :- has(A, math).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,630868 (regressionFit = 7,630867, penalties=1.03E-6) for clause:  faculty(A) :- has(A, search).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,171227 (regressionFit = 7,171226, penalties=1.03E-6) for clause:  faculty(A) :- has(A, institut).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,618202 (regressionFit = 7,618201, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,610865 (regressionFit = 7,610864, penalties=1.03E-6) for clause:  faculty(A) :- has(A, onlin).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,612779 (regressionFit = 7,612778, penalties=1.03E-6) for clause:  faculty(A) :- has(A, complex).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,640733 (regressionFit = 7,640732, penalties=1.03E-6) for clause:  faculty(A) :- has(A, theori).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,622731 (regressionFit = 7,622730, penalties=1.03E-6) for clause:  faculty(A) :- has(A, world).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,346193 (regressionFit = 7,346192, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mathemat).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,634368 (regressionFit = 7,634367, penalties=1.03E-6) for clause:  faculty(A) :- has(A, academ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,639905 (regressionFit = 7,639904, penalties=1.03E-6) for clause:  faculty(A) :- has(A, network).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,631217 (regressionFit = 7,631216, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,621571 (regressionFit = 7,621570, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,107788 (regressionFit = 7,107787, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,596075 (regressionFit = 7,596074, penalties=1.03E-6) for clause:  faculty(A) :- has(A, secur).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,602760 (regressionFit = 7,602759, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,579685 (regressionFit = 7,579684, penalties=1.03E-6) for clause:  faculty(A) :- has(A, librari).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,630757 (regressionFit = 7,630756, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,481674 (regressionFit = 7,481673, penalties=1.03E-6) for clause:  faculty(A) :- has(A, formal).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,580832 (regressionFit = 7,580831, penalties=1.03E-6) for clause:  faculty(A) :- has(A, organ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,638910 (regressionFit = 7,638909, penalties=1.03E-6) for clause:  faculty(A) :- has(A, problem).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,010437 (regressionFit = 7,010436, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ieee).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,561475 (regressionFit = 7,561474, penalties=1.03E-6) for clause:  faculty(A) :- has(A, refer).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,593887 (regressionFit = 7,593886, penalties=1.03E-6) for clause:  faculty(A) :- has(A, virtual).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,590496 (regressionFit = 7,590495, penalties=1.03E-6) for clause:  faculty(A) :- has(A, local).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,461675 (regressionFit = 7,461674, penalties=1.03E-6) for clause:  faculty(A) :- has(A, center).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,906915 (regressionFit = 6,906914, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,906915): faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,605455 (regressionFit = 7,605454, penalties=1.03E-6) for clause:  faculty(A) :- has(A, site).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, geometri).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,599012 (regressionFit = 7,599011, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,514554 (regressionFit = 7,514553, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,675326 (regressionFit = 7,675325, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,511335 (regressionFit = 7,511334, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.511335079808552
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,713373 (regressionFit = 7,713371, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,293037 (regressionFit = 7,293035, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,749682 (regressionFit = 7,749680, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,807051 (regressionFit = 7,807049, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,999386 (regressionFit = 7,999384, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,010148 (regressionFit = 8,010146, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,508326 (regressionFit = 7,508324, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,464879 (regressionFit = 7,464877, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,878170 (regressionFit = 7,878167, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,516814 (regressionFit = 7,516812, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,557537 (regressionFit = 7,557535, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,891318 (regressionFit = 7,891316, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,491492 (regressionFit = 7,491490, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,514923 (regressionFit = 7,514921, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,502687 (regressionFit = 7,502685, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.491491765343219

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.502687062730719

% Consider expanding [#5 of outerLoop #3, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.514554441034475
%  At # nodes expanded = 5, |OPEN| = 6.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -7,526639 (regressionFit = 7,526637, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,485106 (regressionFit = 7,485104, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.485106307015775

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.514923156923425

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.516813691423366

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-7.557536993053803

***** Warning: #33 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
Setting 0.018446481101689234 for 
 // Learned this clause on outer loop cycle #3.  It scores=-6,91 and has recall=0,35, precision=1,00, and F1=0,52 (using m-estimates).
 // It covers 34,8% of the positive examples, 56 of 161 (of which 23 are newly covered),
 // So far 89 (55,3%) of the positive examples have been covered.
(faculty(D) :- has(D, research))

% On cycle #3, the best clause found is:
%      faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 56 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 55,3% of the positive examples and NaN% of the negatives.}
% Have selected pos example #137 as the next seed: faculty(httpwwwcsutexaseduusersemeryfpoophaskellfpoophaskellhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 51 items to OPEN for evaluation and possible insertion.
% Have created 51 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,222741 (regressionFit = 7,222740, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,222741): faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,440741 (regressionFit = 7,440740, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,459565 (regressionFit = 7,459564, penalties=1.03E-6) for clause:  faculty(A) :- has(A, introduct).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,461458 (regressionFit = 7,461457, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mar).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,458726 (regressionFit = 7,458725, penalties=1.03E-6) for clause:  faculty(A) :- has(A, problem).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,454012 (regressionFit = 7,454011, penalties=1.03E-6) for clause:  faculty(A) :- has(A, overview).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,390546 (regressionFit = 7,390545, penalties=1.03E-6) for clause:  faculty(A) :- has(A, equal).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,397524 (regressionFit = 7,397523, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fri).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,357170 (regressionFit = 7,357168, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,435431 (regressionFit = 7,435430, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,325370 (regressionFit = 7,325369, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,440741 (regressionFit = 7,440740, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,404550 (regressionFit = 7,404549, penalties=1.03E-6) for clause:  faculty(A) :- has(A, implement).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,461286 (regressionFit = 7,461285, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,095631 (regressionFit = 7,095630, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,095631): faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,434138 (regressionFit = 7,434137, penalties=1.03E-6) for clause:  faculty(A) :- has(A, semant).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,455354 (regressionFit = 7,455353, penalties=1.03E-6) for clause:  faculty(A) :- has(A, docum).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,440132 (regressionFit = 7,440131, penalties=1.03E-6) for clause:  faculty(A) :- has(A, class).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,390880 (regressionFit = 7,390879, penalties=1.03E-6) for clause:  faculty(A) :- has(A, extens).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,390092 (regressionFit = 7,390091, penalties=1.03E-6) for clause:  faculty(A) :- has(A, concept).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,443071 (regressionFit = 7,443069, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,330248 (regressionFit = 7,330247, penalties=1.03E-6) for clause:  faculty(A) :- has(A, languag).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,447466 (regressionFit = 7,447465, penalties=1.03E-6) for clause:  faculty(A) :- has(A, abstract).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,437386 (regressionFit = 7,437385, penalties=1.03E-6) for clause:  faculty(A) :- has(A, describ).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,432814 (regressionFit = 7,432813, penalties=1.03E-6) for clause:  faculty(A) :- has(A, match).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,369878 (regressionFit = 7,369877, penalties=1.03E-6) for clause:  faculty(A) :- has(A, refer).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,443218 (regressionFit = 7,443217, penalties=1.03E-6) for clause:  faculty(A) :- has(A, orient).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,433718 (regressionFit = 7,433717, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tr).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,462242 (regressionFit = 7,462241, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,076236 (regressionFit = 7,076235, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,076236): faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,221913 (regressionFit = 7,221912, penalties=1.03E-6) for clause:  faculty(A) :- has(A, decemb).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,452158 (regressionFit = 7,452157, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,445145 (regressionFit = 7,445144, penalties=1.03E-6) for clause:  faculty(A) :- has(A, pattern).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,461774 (regressionFit = 7,461773, penalties=1.03E-6) for clause:  faculty(A) :- has(A, object).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,391120 (regressionFit = 7,391119, penalties=1.03E-6) for clause:  faculty(A) :- has(A, function).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,215913 (regressionFit = 7,215912, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,004718 (regressionFit = 7,004717, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,004718): faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,394878 (regressionFit = 7,394877, penalties=1.03E-6) for clause:  faculty(A) :- has(A, add).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,453817 (regressionFit = 7,453816, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,338201 (regressionFit = 7,338200, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,529058 (regressionFit = 7,529057, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,352296 (regressionFit = 7,352295, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.338200621502992
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -7,345504 (regressionFit = 7,345502, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,310296 (regressionFit = 7,310294, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,344575 (regressionFit = 7,344573, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.310295893680048

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.34457473916965

% Consider expanding [#5 of outerLoop #4, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.352295792004044
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,556853 (regressionFit = 7,556851, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,155575 (regressionFit = 7,155573, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,616301 (regressionFit = 7,616298, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,644027 (regressionFit = 7,644025, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,853682 (regressionFit = 7,853680, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,868221 (regressionFit = 7,868219, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,346772 (regressionFit = 7,346770, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,289068 (regressionFit = 7,289066, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,342513 (regressionFit = 7,342511, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,399871 (regressionFit = 7,399869, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,739595 (regressionFit = 7,739593, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,323803 (regressionFit = 7,323801, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,365245 (regressionFit = 7,365243, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,330948 (regressionFit = 7,330946, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.32380287838791

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.330948319085347

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.342512565734408

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.365244938685241

***** Warning: #34 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
Setting -0.030012908736477124 for 
 // Learned this clause on outer loop cycle #4.  It scores=-7,00 and has recall=0,53, precision=1,00, and F1=0,69 (using m-estimates).
 // It covers 52,8% of the positive examples, 85 of 161 (of which 21 are newly covered),
 // So far 110 (68,3%) of the positive examples have been covered.
(faculty(D) :- has(D, comput))

% On cycle #4, the best clause found is:
%      faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 85 positive examples, of which 21 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 4 best clauses covers 68,3% of the positive examples and NaN% of the negatives.}
% Have selected pos example #110 as the next seed: faculty(httpwwwcsutexaseduusersqralumnihtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 32 items to OPEN for evaluation and possible insertion.
% Have created 32 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,524996 (regressionFit = 7,524995, penalties=1.03E-6) for clause:  faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,524996): faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,751239 (regressionFit = 7,751238, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thursdai).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,742552 (regressionFit = 7,742551, penalties=1.03E-6) for clause:  faculty(A) :- has(A, human).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,705409 (regressionFit = 7,705408, penalties=1.03E-6) for clause:  faculty(A) :- has(A, john).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,737859 (regressionFit = 7,737858, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,755081 (regressionFit = 7,755080, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thesi).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,737276 (regressionFit = 7,737275, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dissert).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,745472 (regressionFit = 7,745471, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,727679 (regressionFit = 7,727678, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,739835 (regressionFit = 7,739834, penalties=1.03E-6) for clause:  faculty(A) :- has(A, richard).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,731821 (regressionFit = 7,731819, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,711173 (regressionFit = 7,711172, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jame).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,731821 (regressionFit = 7,731819, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,753543 (regressionFit = 7,753542, penalties=1.03E-6) for clause:  faculty(A) :- has(A, state).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,733179 (regressionFit = 7,733178, penalties=1.03E-6) for clause:  faculty(A) :- has(A, abstract).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,753066 (regressionFit = 7,753065, penalties=1.03E-6) for clause:  faculty(A) :- has(A, david).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,755341 (regressionFit = 7,755340, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oct).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,732538 (regressionFit = 7,732536, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,119676 (regressionFit = 7,119675, penalties=1.03E-6) for clause:  faculty(A) :- has(A, recent).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,119676): faculty(A) :- has(A, recent).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,753914 (regressionFit = 7,753913, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,626511 (regressionFit = 7,626510, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,741960 (regressionFit = 7,741959, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587500 (regressionFit = 7,587499, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.587499701415963
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 144 items to OPEN for evaluation and possible insertion.
% Have created 144 valid-on-seeds descendants.
%     Score = -7,782326 (regressionFit = 7,782324, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,370871 (regressionFit = 7,370869, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,811812 (regressionFit = 7,811810, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,885386 (regressionFit = 7,885384, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,058547 (regressionFit = 8,058545, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,066252 (regressionFit = 8,066250, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587626 (regressionFit = 7,587624, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,559254 (regressionFit = 7,559252, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,712728 (regressionFit = 7,712726, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, group).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,065305 (regressionFit = 8,065303, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, thursdai).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,066924 (regressionFit = 8,066922, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, human).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,065021 (regressionFit = 8,065019, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, john).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,527566 (regressionFit = 7,527564, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, utexa).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,051694 (regressionFit = 8,051692, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, thesi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,067176 (regressionFit = 8,067174, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, dissert).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,569812 (regressionFit = 7,569810, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,569905 (regressionFit = 7,569903, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, jan).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,561956 (regressionFit = 7,561954, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, cern).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,067384 (regressionFit = 8,067382, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, richard).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,561956 (regressionFit = 7,561954, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mime).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,067259 (regressionFit = 8,067257, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, jame).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,561956 (regressionFit = 7,561954, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, version).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,991514 (regressionFit = 7,991511, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, state).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,046575 (regressionFit = 8,046573, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, abstract).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,061500 (regressionFit = 8,061498, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, david).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,063084 (regressionFit = 8,063082, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, oct).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,560131 (regressionFit = 7,560129, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,066391 (regressionFit = 8,066389, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, recent).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,972603 (regressionFit = 7,972600, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, tuesdai).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,030577 (regressionFit = 8,030575, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, tx).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,790578 (regressionFit = 7,790576, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, interfac).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,049159 (regressionFit = 8,049157, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, dissert).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,999630 (regressionFit = 7,999628, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, hall).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,882808 (regressionFit = 7,882806, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, world).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,057842 (regressionFit = 8,057840, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, explor).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,034777 (regressionFit = 8,034775, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, technologi).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,708491 (regressionFit = 7,708489, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, common).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,853455 (regressionFit = 7,853452, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, engin).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,883802 (regressionFit = 7,883800, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, nov).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,809919 (regressionFit = 7,809917, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ncsa).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,996452 (regressionFit = 7,996450, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, start).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,048770 (regressionFit = 8,048768, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, robot).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,606631 (regressionFit = 7,606629, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mondai).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,847283 (regressionFit = 7,847281, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, machin).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,041274 (regressionFit = 8,041272, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, reason).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,523381 (regressionFit = 7,523379, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,048086 (regressionFit = 8,048084, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, neural).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, manipul).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,991474 (regressionFit = 7,991472, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, user).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,066216 (regressionFit = 8,066214, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, organ).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,028993 (regressionFit = 8,028991, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, develop).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,846828 (regressionFit = 7,846826, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, offic).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,644956 (regressionFit = 7,644954, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mime).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,053667 (regressionFit = 8,053664, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, homepag).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,975729 (regressionFit = 7,975727, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, intellig).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,041169 (regressionFit = 8,041167, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, titl).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,871085 (regressionFit = 7,871083, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ph).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,918278 (regressionFit = 7,918276, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, comment).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,052175 (regressionFit = 8,052173, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, member).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,053824 (regressionFit = 8,053822, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, rang).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,071680 (regressionFit = 8,071678, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, resourc).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,975729 (regressionFit = 7,975727, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, artifici).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,633094 (regressionFit = 7,633092, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cern).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,970582 (regressionFit = 7,970580, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, physic).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, built).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,424185 (regressionFit = 7,424183, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, public).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,060357 (regressionFit = 8,060355, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, approach).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,459828 (regressionFit = 7,459826, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, graphic).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,040218 (regressionFit = 8,040216, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, contact).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,922606 (regressionFit = 7,922604, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, wide).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,851502 (regressionFit = 7,851500, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, work).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,048121 (regressionFit = 8,048119, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, point).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,800998 (regressionFit = 7,800996, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, softwar).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,043532 (regressionFit = 8,043530, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, question).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,915926 (regressionFit = 7,915924, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, send).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,682851 (regressionFit = 7,682849, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, comput).  [covers 33,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,670882 (regressionFit = 7,670879, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,576380 (regressionFit = 7,576378, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, inform).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,690565 (regressionFit = 7,690563, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, research).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,007553 (regressionFit = 8,007551, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, associ).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,508187 (regressionFit = 7,508185, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, utexa).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,009740 (regressionFit = 8,009738, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, group).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,047387 (regressionFit = 8,047385, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, topic).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,634700 (regressionFit = 7,634698, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, univers).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,042374 (regressionFit = 8,042372, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, fast).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,986103 (regressionFit = 7,986101, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, unit).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,048918 (regressionFit = 8,048916, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, vision).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,949699 (regressionFit = 7,949697, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, home).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,053760 (regressionFit = 8,053758, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, network).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,055906 (regressionFit = 8,055904, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, art).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,673778 (regressionFit = 7,673776, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,046584 (regressionFit = 8,046582, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, pictur).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,907190 (regressionFit = 7,907188, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, specif).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,060567 (regressionFit = 8,060565, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, number).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,028980 (regressionFit = 8,028978, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, phone).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,056854 (regressionFit = 8,056852, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, learn).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,029456 (regressionFit = 8,029454, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, area).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,681065 (regressionFit = 7,681062, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, jan).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,051879 (regressionFit = 8,051877, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, semant).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,036677 (regressionFit = 8,036675, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, oper).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,991611 (regressionFit = 7,991609, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, paper).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,050348 (regressionFit = 8,050346, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, qualit).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,040741 (regressionFit = 8,040739, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, index).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,531333 (regressionFit = 7,531331, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, fax).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,051829 (regressionFit = 8,051827, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, control).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,634413 (regressionFit = 7,634411, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, austin).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,996861 (regressionFit = 7,996859, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, includ).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,988158 (regressionFit = 7,988156, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, state).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,046056 (regressionFit = 8,046054, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, email).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,958924 (regressionFit = 7,958922, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, internet).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,806398 (regressionFit = 7,806396, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, onlin).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,717900 (regressionFit = 7,717897, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, tuesdai).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,634116 (regressionFit = 7,634114, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, scienc).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,059474 (regressionFit = 8,059472, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, map).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,644956 (regressionFit = 7,644954, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, version).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,887583 (regressionFit = 7,887581, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mail).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,022950 (regressionFit = 8,022948, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, interest).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,056087 (regressionFit = 8,056085, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, list).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,970884 (regressionFit = 7,970882, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, page).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mobil).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,049405 (regressionFit = 8,049403, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, note).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587501 (regressionFit = 7,587499, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,700791 (regressionFit = 7,700789, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, web).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,054333 (regressionFit = 8,054331, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, person).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,946926 (regressionFit = 7,946924, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,612646 (regressionFit = 7,612644, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,636411 (regressionFit = 7,636409, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,965936 (regressionFit = 7,965934, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,579338 (regressionFit = 7,579336, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,582157 (regressionFit = 7,582155, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,615516 (regressionFit = 7,615514, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.579337665941234

% Consider expanding [#4 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.582156984005424

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.612646143591866

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.615516410103115

% Consider expanding [#7 of outerLoop #5, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.626511185695821
%  At # nodes expanded = 7, |OPEN| = 4.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -7,645542 (regressionFit = 7,645539, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,587915 (regressionFit = 7,587913, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.587914852966906

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-7.636411428574265

***** Warning: #35 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, recent).  [covers 13,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, recent).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
Setting 0.14747856790692693 for 
 // Learned this clause on outer loop cycle #5.  It scores=-7,12 and has recall=0,08, precision=0,99, and F1=0,15 (using m-estimates).
 // It covers 8,1% of the positive examples, 13 of 161 (of which 1 are newly covered),
 // So far 111 (68,9%) of the positive examples have been covered.
(faculty(D) :- has(D, recent))

% On cycle #5, the best clause found is:
%      faculty(A) :- has(A, recent).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 13 positive examples, of which 1 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 5 best clauses covers 68,9% of the positive examples and NaN% of the negatives.}
% Have selected pos example #109 as the next seed: faculty(httpwwwarlututexaseduatc)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 23 items to OPEN for evaluation and possible insertion.
% Have created 23 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,137867 (regressionFit = 7,137866, penalties=1.03E-6) for clause:  faculty(A) :- has(A, handl).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,137867): faculty(A) :- has(A, handl).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,010463 (regressionFit = 7,010462, penalties=1.03E-6) for clause:  faculty(A) :- has(A, move).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,010463): faculty(A) :- has(A, move).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,135411 (regressionFit = 7,135410, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fri).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,197937 (regressionFit = 7,197936, penalties=1.03E-6) for clause:  faculty(A) :- has(A, http).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,193768 (regressionFit = 7,193767, penalties=1.03E-6) for clause:  faculty(A) :- has(A, apr).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,176942 (regressionFit = 7,176941, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ncsa).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,182391 (regressionFit = 7,182390, penalties=1.03E-6) for clause:  faculty(A) :- has(A, client).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,183660 (regressionFit = 7,183659, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,191939 (regressionFit = 7,191938, penalties=1.03E-6) for clause:  faculty(A) :- has(A, docum).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,202201 (regressionFit = 7,202200, penalties=1.03E-6) for clause:  faculty(A) :- has(A, respons).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,129168 (regressionFit = 7,129167, penalties=1.03E-6) for clause:  faculty(A) :- has(A, locat).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,197969 (regressionFit = 7,197968, penalties=1.03E-6) for clause:  faculty(A) :- has(A, www).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,043867 (regressionFit = 7,043866, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,237041 (regressionFit = 7,237040, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028851 (regressionFit = 7,028850, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.0288514958451
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 54 items to OPEN for evaluation and possible insertion.
% Have created 54 valid-on-seeds descendants.
%     Score = -7,312211 (regressionFit = 7,312209, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,856989 (regressionFit = 6,856987, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,856989): faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,308543 (regressionFit = 7,308541, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,411792 (regressionFit = 7,411790, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,590134 (regressionFit = 7,590132, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,608555 (regressionFit = 7,608553, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,025077 (regressionFit = 7,025075, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,979943 (regressionFit = 6,979941, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, handl).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, move).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,603059 (regressionFit = 7,603057, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, fri).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028853 (regressionFit = 7,028850, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,229294 (regressionFit = 7,229292, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, http).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, apr).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028853 (regressionFit = 7,028850, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,611467 (regressionFit = 7,611465, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, ncsa).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028853 (regressionFit = 7,028850, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028853 (regressionFit = 7,028850, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,607983 (regressionFit = 7,607981, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, client).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,994680 (regressionFit = 6,994678, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, utexa).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,609367 (regressionFit = 7,609365, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, docum).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, respons).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028853 (regressionFit = 7,028850, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, locat).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,356664 (regressionFit = 7,356662, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, www).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028853 (regressionFit = 7,028850, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028853 (regressionFit = 7,028850, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,543932 (regressionFit = 7,543930, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, handl).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, move).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,603094 (regressionFit = 7,603092, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, fri).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028852 (regressionFit = 7,028850, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,275366 (regressionFit = 7,275364, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, http).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,545914 (regressionFit = 7,545912, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, apr).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028852 (regressionFit = 7,028850, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,332045 (regressionFit = 7,332043, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ncsa).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028852 (regressionFit = 7,028850, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028852 (regressionFit = 7,028850, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,573624 (regressionFit = 7,573622, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, client).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,948164 (regressionFit = 6,948162, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, utexa).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,545384 (regressionFit = 7,545382, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, docum).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,573225 (regressionFit = 7,573223, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, respons).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028852 (regressionFit = 7,028850, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,565109 (regressionFit = 7,565107, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, locat).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,136888 (regressionFit = 7,136886, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, www).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028852 (regressionFit = 7,028850, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028852 (regressionFit = 7,028850, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,450793 (regressionFit = 7,450791, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,090976 (regressionFit = 7,090974, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,140910 (regressionFit = 7,140908, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,485049 (regressionFit = 7,485047, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,002906 (regressionFit = 7,002904, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,028072 (regressionFit = 7,028070, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,051182 (regressionFit = 7,051180, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.002905970523833

% Consider expanding [#4 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.028072042944804

% Consider expanding [#5 of outerLoop #6, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.043867373846004
%  At # nodes expanded = 5, |OPEN| = 6.  Pruned 0 variant children.  Sending 22 items to OPEN for evaluation and possible insertion.
% Have created 22 valid-on-seeds descendants.
%     Score = -7,062898 (regressionFit = 7,062896, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, handl).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, move).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, fri).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,043868 (regressionFit = 7,043866, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, gmt).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,196862 (regressionFit = 7,196860, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, http).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, apr).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,043868 (regressionFit = 7,043866, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, type).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,192428 (regressionFit = 7,192426, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, ncsa).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,043868 (regressionFit = 7,043866, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, date).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,043868 (regressionFit = 7,043866, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, content).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, client).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,003947 (regressionFit = 7,003945, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, utexa).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,125760 (regressionFit = 7,125758, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, docum).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, respons).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,043868 (regressionFit = 7,043866, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, text).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, locat).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,196932 (regressionFit = 7,196930, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, www).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,043868 (regressionFit = 7,043866, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, html).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,043868 (regressionFit = 7,043866, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, server).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,005271 (regressionFit = 7,005269, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.005271041117088

% Consider expanding [#7 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.051181592860673

% Consider expanding [#8 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.090975790523854

% Consider expanding [#9 of outerLoop #6, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-7.140910491433556

***** Warning: #36 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
Setting 0.32101646552118707 for 
 // Learned this clause on outer loop cycle #6.  It scores=-6,86 and has recall=0,02, precision=0,98, and F1=0,05 (using m-estimates).
 // It covers 2,5% of the positive examples, 4 of 161 (of which 1 are newly covered),
 // So far 112 (69,6%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon25387, D), course(Anon25387))

% On cycle #6, the best clause found is:
%      faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 1 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 6 best clauses covers 69,6% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (6).

% ******************************************
adding regression values
Added 0.2340965334744257 to wgt = 0,2341 (faculty(A) :- has(A, ii))
Added -0.0229575792592118 to wgt = -0,0230 (faculty(A) :- has(A, inform))
Added 0.018446481101689234 to wgt = 0,0184 (faculty(A) :- has(A, research))
Added -0.030012908736477124 to wgt = -0,0300 (faculty(A) :- has(A, comput))
Added 0.14747856790692693 to wgt = 0,1475 (faculty(A) :- has(A, recent))
Added 0.32101646552118707 to wgt = 0,3210 (faculty(A) :- linkto(B, A), course(B))
% Saving model in: datasets\MyWebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 3 trees is 15,290 seconds.

% Kept 10 of the 10 positive examples.
% Kept 151 of the 151 negative examples.
% Dataset size: 161
Computing probabilities
prob time:216 milliseconds
No hidden examples for : faculty
Time to build dataset: 217 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #154 as the next seed: faculty(httpwwwcsutexaseduusersdwipcspprogassnhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 41 items to OPEN for evaluation and possible insertion.
% Have created 41 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,511153 (regressionFit = 7,511152, penalties=1.03E-6) for clause:  faculty(A) :- has(A, studi).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,511153): faculty(A) :- has(A, studi).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,463867 (regressionFit = 7,463866, penalties=1.03E-6) for clause:  faculty(A) :- has(A, suggest).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,463867): faculty(A) :- has(A, suggest).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,496924 (regressionFit = 7,496923, penalties=1.03E-6) for clause:  faculty(A) :- has(A, week).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,477771 (regressionFit = 7,477770, penalties=1.03E-6) for clause:  faculty(A) :- has(A, guid).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,495590 (regressionFit = 7,495589, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,518900 (regressionFit = 7,518899, penalties=1.03E-6) for clause:  faculty(A) :- has(A, solution).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,454950 (regressionFit = 7,454949, penalties=1.03E-6) for clause:  faculty(A) :- has(A, test).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,454950): faculty(A) :- has(A, test).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,509337 (regressionFit = 7,509336, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,496833 (regressionFit = 7,496832, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ta).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,509015 (regressionFit = 7,509014, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,368446 (regressionFit = 7,368445, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nov).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,368446): faculty(A) :- has(A, nov).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,491902 (regressionFit = 7,491901, penalties=1.03E-6) for clause:  faculty(A) :- has(A, option).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,512092 (regressionFit = 7,512091, penalties=1.03E-6) for clause:  faculty(A) :- has(A, credit).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,513336 (regressionFit = 7,513335, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sundai).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,495590 (regressionFit = 7,495589, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,443171 (regressionFit = 7,443170, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,487367 (regressionFit = 7,487366, penalties=1.03E-6) for clause:  faculty(A) :- has(A, articl).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,427811 (regressionFit = 7,427810, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comment).  [covers 28,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,491677 (regressionFit = 7,491676, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,520526 (regressionFit = 7,520525, penalties=1.03E-6) for clause:  faculty(A) :- has(A, addition).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,465395 (regressionFit = 7,465394, penalties=1.03E-6) for clause:  faculty(A) :- has(A, assign).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,495313 (regressionFit = 7,495312, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,518059 (regressionFit = 7,518058, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,461874 (regressionFit = 7,461873, penalties=1.03E-6) for clause:  faculty(A) :- has(A, discuss).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,462951 (regressionFit = 7,462950, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,474445 (regressionFit = 7,474444, penalties=1.03E-6) for clause:  faculty(A) :- has(A, send).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,331452 (regressionFit = 7,331451, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,331452): faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,475321 (regressionFit = 7,475320, penalties=1.03E-6) for clause:  faculty(A) :- has(A, descript).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,500613 (regressionFit = 7,500612, penalties=1.03E-6) for clause:  faculty(A) :- has(A, session).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,349253 (regressionFit = 7,349252, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,581075 (regressionFit = 7,581074, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400117 (regressionFit = 7,400116, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.34925314223577
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -7,367336 (regressionFit = 7,367334, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,299215 (regressionFit = 7,299213, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,299215): faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,368104 (regressionFit = 7,368102, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.299215396637557

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.368103545848378

% Consider expanding [#5 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.400117074629394
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 153 items to OPEN for evaluation and possible insertion.
% Have created 153 valid-on-seeds descendants.
%     Score = -7,613782 (regressionFit = 7,613780, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,337862 (regressionFit = 7,337860, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,663023 (regressionFit = 7,663021, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,698187 (regressionFit = 7,698185, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,880740 (regressionFit = 7,880738, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,894725 (regressionFit = 7,894723, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,396948 (regressionFit = 7,396946, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,342904 (regressionFit = 7,342902, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,881517 (regressionFit = 7,881515, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, studi).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,890386 (regressionFit = 7,890384, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, suggest).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,384243 (regressionFit = 7,384241, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, jan).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, week).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,859341 (regressionFit = 7,859339, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, guid).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,369867 (regressionFit = 7,369864, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mime).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,874826 (regressionFit = 7,874824, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, solution).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,872030 (regressionFit = 7,872028, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, test).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,377361 (regressionFit = 7,377359, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,845571 (regressionFit = 7,845569, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, ta).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,333453 (regressionFit = 7,333451, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, utexa).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,835130 (regressionFit = 7,835128, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, nov).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,895772 (regressionFit = 7,895770, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, option).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, credit).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, sundai).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,369867 (regressionFit = 7,369864, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, version).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,882751 (regressionFit = 7,882749, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, home).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,866572 (regressionFit = 7,866570, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, articl).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,891297 (regressionFit = 7,891294, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, comment).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,369867 (regressionFit = 7,369864, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, cern).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,879445 (regressionFit = 7,879443, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, addition).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,883725 (regressionFit = 7,883723, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, assign).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,365736 (regressionFit = 7,365734, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,853269 (regressionFit = 7,853267, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, link).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,852653 (regressionFit = 7,852651, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, discuss).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,320883 (regressionFit = 7,320881, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mondai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,887485 (regressionFit = 7,887483, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, send).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,788683 (regressionFit = 7,788681, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, program).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,894484 (regressionFit = 7,894482, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, descript).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,856342 (regressionFit = 7,856340, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, session).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,821097 (regressionFit = 7,821095, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, read).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,715702 (regressionFit = 7,715700, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, send).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,862830 (regressionFit = 7,862827, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ii).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,808379 (regressionFit = 7,808377, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, start).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,714586 (regressionFit = 7,714584, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, turn).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,847481 (regressionFit = 7,847479, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, requir).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,901134 (regressionFit = 7,901132, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, lectur).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,836560 (regressionFit = 7,836558, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, includ).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,778580 (regressionFit = 7,778578, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, present).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,840412 (regressionFit = 7,840410, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, midterm).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,876016 (regressionFit = 7,876014, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mit).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,525154 (regressionFit = 7,525152, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, jan).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,576865 (regressionFit = 7,576863, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, copi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,872036 (regressionFit = 7,872034, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, semest).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,873079 (regressionFit = 7,873077, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, final).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,909870 (regressionFit = 7,909868, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, exam).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,887951 (regressionFit = 7,887949, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, teach).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,670908 (regressionFit = 7,670905, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, lab).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,878822 (regressionFit = 7,878820, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cost).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,848317 (regressionFit = 7,848315, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, discuss).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,720325 (regressionFit = 7,720323, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, comment).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,872763 (regressionFit = 7,872761, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, complet).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,868133 (regressionFit = 7,868131, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, note).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,720750 (regressionFit = 7,720748, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, algorithm).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,876016 (regressionFit = 7,876014, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, press).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,565865 (regressionFit = 7,565863, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, syllabu).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,856987 (regressionFit = 7,856985, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, studi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,418062 (regressionFit = 7,418060, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mondai).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,844226 (regressionFit = 7,844224, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, project).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,849122 (regressionFit = 7,849120, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, materi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,808623 (regressionFit = 7,808621, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, user).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,860649 (regressionFit = 7,860647, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, solution).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,774865 (regressionFit = 7,774863, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, class).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,867863 (regressionFit = 7,867861, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, set).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,815927 (regressionFit = 7,815925, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, test).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,878822 (regressionFit = 7,878820, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, major).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,251146 (regressionFit = 7,251144, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,251146): faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,836642 (regressionFit = 7,836640, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, written).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,859532 (regressionFit = 7,859530, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, parallel).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,435763 (regressionFit = 7,435761, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cern).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,865836 (regressionFit = 7,865834, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, involv).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,858833 (regressionFit = 7,858831, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, languag).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,876016 (regressionFit = 7,876014, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, principl).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,869085 (regressionFit = 7,869083, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, result).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,871119 (regressionFit = 7,871117, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, idea).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,891245 (regressionFit = 7,891243, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ta).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,840673 (regressionFit = 7,840670, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, group).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,270259 (regressionFit = 7,270256, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, utexa).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,856078 (regressionFit = 7,856076, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, session).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,843652 (regressionFit = 7,843650, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, due).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,862056 (regressionFit = 7,862054, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, articl).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,634414 (regressionFit = 7,634412, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, assign).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,664669 (regressionFit = 7,664667, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, descript).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,399804 (regressionFit = 7,399802, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, austin).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,463484 (regressionFit = 7,463482, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mime).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,865073 (regressionFit = 7,865071, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, suggest).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,872811 (regressionFit = 7,872809, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, base).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,877005 (regressionFit = 7,877003, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, week).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,688453 (regressionFit = 7,688451, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, sep).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,845984 (regressionFit = 7,845982, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, object).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,819152 (regressionFit = 7,819150, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, link).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,812719 (regressionFit = 7,812717, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, problem).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,872594 (regressionFit = 7,872592, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, formal).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,878822 (regressionFit = 7,878820, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, receiv).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,463484 (regressionFit = 7,463482, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, version).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,472271 (regressionFit = 7,472269, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, comput).  [covers 33,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,407688 (regressionFit = 7,407686, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, univers).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,771884 (regressionFit = 7,771882, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, intellig).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,872286 (regressionFit = 7,872284, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, print).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,859883 (regressionFit = 7,859881, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, chapter).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,874561 (regressionFit = 7,874559, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, review).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,493052 (regressionFit = 7,493050, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,640610 (regressionFit = 7,640608, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, work).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,719709 (regressionFit = 7,719707, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, wide).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,876016 (regressionFit = 7,876014, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, compon).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,786661 (regressionFit = 7,786659, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, state).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,502128 (regressionFit = 7,502126, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,861500 (regressionFit = 7,861498, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, great).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,625778 (regressionFit = 7,625776, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, fall).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,891206 (regressionFit = 7,891204, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, architectur).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,876016 (regressionFit = 7,876014, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, miss).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,878471 (regressionFit = 7,878469, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, sundai).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,718595 (regressionFit = 7,718593, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, option).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,878822 (regressionFit = 7,878820, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, addition).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,878822 (regressionFit = 7,878820, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, proof).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,876737 (regressionFit = 7,876735, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, don).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400118 (regressionFit = 7,400116, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,771884 (regressionFit = 7,771882, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, artifici).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,883222 (regressionFit = 7,883220, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, understand).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,854113 (regressionFit = 7,854111, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cover).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,422373 (regressionFit = 7,422371, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, scienc).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,860323 (regressionFit = 7,860320, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, guid).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,893613 (regressionFit = 7,893611, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, grade).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,864843 (regressionFit = 7,864841, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, area).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,422292 (regressionFit = 7,422290, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,478639 (regressionFit = 7,478637, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,760155 (regressionFit = 7,760153, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,378027 (regressionFit = 7,378025, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,411155 (regressionFit = 7,411153, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,397739 (regressionFit = 7,397737, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.378027051123033

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.397738980043148

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.411154979556085

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.422291921580365

***** Warning: #37 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
Setting -0.010139531427292632 for 
 // Learned this clause on outer loop cycle #1.  It scores=-7,25 and has recall=0,19, precision=1,00, and F1=0,31 (using m-estimates).
 // It covers 18,6% of the positive examples, 30 of 161,
(faculty(D) :- linkto(Anon26145, D), has(Anon26145, texa))

% On cycle #1, the best clause found is:
%      faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 30 positive examples, of which 30 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 18,6% of the positive examples and NaN% of the negatives.}
% Have selected pos example #36 as the next seed: faculty(httpwwwcsutexaseduusersnnpagesgeneraltoolsgeneraltoolshtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 41 items to OPEN for evaluation and possible insertion.
% Have created 41 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,553453 (regressionFit = 7,553452, penalties=1.03E-6) for clause:  faculty(A) :- has(A, applic).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,553453): faculty(A) :- has(A, applic).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,486970 (regressionFit = 7,486969, penalties=1.03E-6) for clause:  faculty(A) :- has(A, open).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,486970): faculty(A) :- has(A, open).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,565702 (regressionFit = 7,565701, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,537956 (regressionFit = 7,537955, penalties=1.03E-6) for clause:  faculty(A) :- has(A, web).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,526614 (regressionFit = 7,526613, penalties=1.03E-6) for clause:  faculty(A) :- has(A, express).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,548442 (regressionFit = 7,548441, penalties=1.03E-6) for clause:  faculty(A) :- has(A, travel).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,545095 (regressionFit = 7,545094, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,316489 (regressionFit = 7,316488, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tool).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,316489): faculty(A) :- has(A, tool).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,524910 (regressionFit = 7,524909, penalties=1.03E-6) for clause:  faculty(A) :- has(A, aug).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,574299 (regressionFit = 7,574298, penalties=1.03E-6) for clause:  faculty(A) :- has(A, network).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,496544 (regressionFit = 7,496543, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,567834 (regressionFit = 7,567833, penalties=1.03E-6) for clause:  faculty(A) :- has(A, databas).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,563412 (regressionFit = 7,563411, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,549204 (regressionFit = 7,549203, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,574579 (regressionFit = 7,574578, penalties=1.03E-6) for clause:  faculty(A) :- has(A, internet).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,549204 (regressionFit = 7,549203, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,529132 (regressionFit = 7,529131, penalties=1.03E-6) for clause:  faculty(A) :- has(A, onlin).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,556894 (regressionFit = 7,556893, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gener).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,507059 (regressionFit = 7,507058, penalties=1.03E-6) for clause:  faculty(A) :- has(A, librari).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,515643 (regressionFit = 7,515642, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,560314 (regressionFit = 7,560313, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,566888 (regressionFit = 7,566887, penalties=1.03E-6) for clause:  faculty(A) :- has(A, abstract).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,549915 (regressionFit = 7,549914, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,546097 (regressionFit = 7,546096, penalties=1.03E-6) for clause:  faculty(A) :- has(A, index).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,135992 (regressionFit = 7,135991, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,135992): faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,573072 (regressionFit = 7,573071, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,536689 (regressionFit = 7,536688, penalties=1.03E-6) for clause:  faculty(A) :- has(A, neural).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,565992 (regressionFit = 7,565991, penalties=1.03E-6) for clause:  faculty(A) :- has(A, back).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,489642 (regressionFit = 7,489641, penalties=1.03E-6) for clause:  faculty(A) :- has(A, net).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,386022 (regressionFit = 7,386021, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,602915 (regressionFit = 7,602914, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,415354 (regressionFit = 7,415353, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.386022101497796
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -7,408455 (regressionFit = 7,408453, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,329879 (regressionFit = 7,329877, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,409005 (regressionFit = 7,409003, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.329878659097832

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.409004729369318

% Consider expanding [#5 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.41535381498997
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,655235 (regressionFit = 7,655233, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,402325 (regressionFit = 7,402323, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,714573 (regressionFit = 7,714571, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,740588 (regressionFit = 7,740586, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,939596 (regressionFit = 7,939594, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,953981 (regressionFit = 7,953979, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,412851 (regressionFit = 7,412849, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,371369 (regressionFit = 7,371367, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,462236 (regressionFit = 7,462234, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,504870 (regressionFit = 7,504868, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,807593 (regressionFit = 7,807591, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,400190 (regressionFit = 7,400188, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,419333 (regressionFit = 7,419330, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,426509 (regressionFit = 7,426507, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.400190116304752

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.4193325471579366

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.426508674158838

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.46223559514642

***** Warning: #38 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
Setting -0.011653629588253422 for 
 // Learned this clause on outer loop cycle #2.  It scores=-7,14 and has recall=0,40, precision=1,00, and F1=0,57 (using m-estimates).
 // It covers 39,8% of the positive examples, 64 of 161 (of which 50 are newly covered),
 // So far 80 (49,7%) of the positive examples have been covered.
(faculty(D) :- has(D, inform))

% On cycle #2, the best clause found is:
%      faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 64 positive examples, of which 50 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 49,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #86 as the next seed: faculty(httpwwwcsutexaseduusersyau)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 51 items to OPEN for evaluation and possible insertion.
% Have created 51 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,531144 (regressionFit = 7,531143, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,531144): faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,994865 (regressionFit = 6,994864, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interest).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,994865): faculty(A) :- has(A, interest).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,182066 (regressionFit = 7,182065, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,653714 (regressionFit = 7,653713, penalties=1.03E-6) for clause:  faculty(A) :- has(A, team).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,659052 (regressionFit = 7,659051, penalties=1.03E-6) for clause:  faculty(A) :- has(A, homepag).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,661158 (regressionFit = 7,661157, penalties=1.03E-6) for clause:  faculty(A) :- has(A, word).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,105595 (regressionFit = 7,105594, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,613922 (regressionFit = 7,613921, penalties=1.03E-6) for clause:  faculty(A) :- has(A, stuff).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,633940 (regressionFit = 7,633939, penalties=1.03E-6) for clause:  faculty(A) :- has(A, life).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,623671 (regressionFit = 7,623670, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nation).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,650777 (regressionFit = 7,650776, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,371132 (regressionFit = 7,371131, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,675840 (regressionFit = 7,675839, penalties=1.03E-6) for clause:  faculty(A) :- has(A, internet).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,651195 (regressionFit = 7,651194, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,655388 (regressionFit = 7,655387, penalties=1.03E-6) for clause:  faculty(A) :- has(A, art).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,646683 (regressionFit = 7,646682, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,617627 (regressionFit = 7,617626, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,345061 (regressionFit = 7,345060, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,594732 (regressionFit = 7,594731, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,200528 (regressionFit = 7,200527, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,637526 (regressionFit = 7,637525, penalties=1.03E-6) for clause:  faculty(A) :- has(A, street).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,671146 (regressionFit = 7,671145, penalties=1.03E-6) for clause:  faculty(A) :- has(A, publish).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,618876 (regressionFit = 7,618875, penalties=1.03E-6) for clause:  faculty(A) :- has(A, de).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,419659 (regressionFit = 7,419658, penalties=1.03E-6) for clause:  faculty(A) :- has(A, work).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,515752 (regressionFit = 6,515751, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fax).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,515752): faculty(A) :- has(A, fax).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,664528 (regressionFit = 7,664527, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,662208 (regressionFit = 7,662207, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sept).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,671691 (regressionFit = 7,671690, penalties=1.03E-6) for clause:  faculty(A) :- has(A, david).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,661936 (regressionFit = 7,661935, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,668852 (regressionFit = 7,668851, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,636618 (regressionFit = 7,636617, penalties=1.03E-6) for clause:  faculty(A) :- has(A, st).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,550480 (regressionFit = 7,550479, penalties=1.03E-6) for clause:  faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,601311 (regressionFit = 7,601310, penalties=1.03E-6) for clause:  faculty(A) :- has(A, number).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,447711 (regressionFit = 7,447710, penalties=1.03E-6) for clause:  faculty(A) :- has(A, contact).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,663714 (regressionFit = 7,663713, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tx).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,651195 (regressionFit = 7,651194, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,951398 (regressionFit = 6,951397, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,630619 (regressionFit = 7,630618, penalties=1.03E-6) for clause:  faculty(A) :- has(A, quot).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,646187 (regressionFit = 7,646186, penalties=1.03E-6) for clause:  faculty(A) :- has(A, www).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,487042 (regressionFit = 7,487041, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,675207 (regressionFit = 7,675206, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,506058 (regressionFit = 7,506057, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.487041756504614
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -7,512018 (regressionFit = 7,512016, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,427382 (regressionFit = 7,427380, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,512368 (regressionFit = 7,512366, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.427382152678062

% Consider expanding [#4 of outerLoop #3, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.5060578171865195
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -7,727059 (regressionFit = 7,727057, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,478103 (regressionFit = 7,478101, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,792227 (regressionFit = 7,792225, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,819561 (regressionFit = 7,819559, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,012481 (regressionFit = 8,012479, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -8,023738 (regressionFit = 8,023736, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,504823 (regressionFit = 7,504821, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,469389 (regressionFit = 7,469387, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,547922 (regressionFit = 7,547920, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,581676 (regressionFit = 7,581674, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,888030 (regressionFit = 7,888029, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,495173 (regressionFit = 7,495171, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,505978 (regressionFit = 7,505976, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,529964 (regressionFit = 7,529962, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.495173152437887

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-7.505977673807056

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.512367683860866

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-7.529964380407867

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-7.547921549947424

***** Warning: #39 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, fax).  [covers 17,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, fax).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
Setting 0.1757641937897466 for 
 // Learned this clause on outer loop cycle #3.  It scores=-6,52 and has recall=0,11, precision=0,99, and F1=0,19 (using m-estimates).
 // It covers 10,6% of the positive examples, 17 of 161 (of which 5 are newly covered),
 // So far 85 (52,8%) of the positive examples have been covered.
(faculty(D) :- has(D, fax))

% On cycle #3, the best clause found is:
%      faculty(A) :- has(A, fax).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 17 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 52,8% of the positive examples and NaN% of the negatives.}
% Have selected pos example #73 as the next seed: faculty(httpwwwcsutexaseduusersbertdomspringbankhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 30 items to OPEN for evaluation and possible insertion.
% Have created 30 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,628362 (regressionFit = 6,628361, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,628362): faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,652144 (regressionFit = 6,652143, penalties=1.03E-6) for clause:  faculty(A) :- has(A, increas).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,654884 (regressionFit = 6,654883, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,619717 (regressionFit = 6,619716, penalties=1.03E-6) for clause:  faculty(A) :- has(A, life).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,619717): faculty(A) :- has(A, life).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,661583 (regressionFit = 6,661582, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,646365 (regressionFit = 6,646364, penalties=1.03E-6) for clause:  faculty(A) :- has(A, find).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,642872 (regressionFit = 6,642871, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fridai).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,658273 (regressionFit = 6,658272, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,664893 (regressionFit = 6,664892, penalties=1.03E-6) for clause:  faculty(A) :- has(A, complet).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,665065 (regressionFit = 6,665064, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,647505 (regressionFit = 6,647504, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,656905 (regressionFit = 6,656904, penalties=1.03E-6) for clause:  faculty(A) :- has(A, event).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,658367 (regressionFit = 6,658366, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cost).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,608800 (regressionFit = 6,608799, penalties=1.03E-6) for clause:  faculty(A) :- has(A, year).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,608800): faculty(A) :- has(A, year).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,644028 (regressionFit = 6,644027, penalties=1.03E-6) for clause:  faculty(A) :- has(A, practic).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,642286 (regressionFit = 6,642285, penalties=1.03E-6) for clause:  faculty(A) :- has(A, major).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,661583 (regressionFit = 6,661582, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,669029 (regressionFit = 6,669028, penalties=1.03E-6) for clause:  faculty(A) :- has(A, real).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,625861 (regressionFit = 6,625860, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,881711 (regressionFit = 6,881710, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,666829 (regressionFit = 6,666828, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.625860660458039
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,614815 (regressionFit = 6,614813, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,628552 (regressionFit = 6,628550, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,603159 (regressionFit = 6,603157, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,603159): faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.603159224912934

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.628552304714622

% Consider expanding [#5 of outerLoop #4, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.666829483981558
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,675760 (regressionFit = 6,675758, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,611193 (regressionFit = 6,611191, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,930575 (regressionFit = 6,930573, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,763867 (regressionFit = 6,763865, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,025506 (regressionFit = 7,025504, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,039720 (regressionFit = 7,039718, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,666144 (regressionFit = 6,666142, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601697 (regressionFit = 6,601695, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,601697): faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,701374 (regressionFit = 6,701372, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,787728 (regressionFit = 6,787726, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,899383 (regressionFit = 6,899381, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,652240 (regressionFit = 6,652238, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,727283 (regressionFit = 6,727281, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,591861 (regressionFit = 6,591859, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,591861): faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.591861334790811

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.652240344849912

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.701373740227873

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.727282723935491

***** Warning: #40 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
Setting -0.02588020072929396 for 
 // Learned this clause on outer loop cycle #4.  It scores=-6,59 and has recall=0,23, precision=1,00, and F1=0,37 (using m-estimates).
 // It covers 23,0% of the positive examples, 37 of 161 (of which 7 are newly covered),
 // So far 92 (57,1%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon28609, D), linkto(Anon28805, Anon28609))

% On cycle #4, the best clause found is:
%      faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 37 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 4 best clauses covers 57,1% of the positive examples and NaN% of the negatives.}
% Have selected pos example #17 as the next seed: faculty(httpwwwcsutexaseduusersssinha)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 26 items to OPEN for evaluation and possible insertion.
% Have created 26 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, frame).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,703614 (regressionFit = 6,703613, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,703614): faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,737195 (regressionFit = 6,737194, penalties=1.03E-6) for clause:  faculty(A) :- has(A, browser).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,730883 (regressionFit = 6,730882, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,722470 (regressionFit = 6,722469, penalties=1.03E-6) for clause:  faculty(A) :- has(A, messag).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,695185 (regressionFit = 6,695184, penalties=1.03E-6) for clause:  faculty(A) :- has(A, download).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,695185): faculty(A) :- has(A, download).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,734207 (regressionFit = 6,734206, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,735859 (regressionFit = 6,735858, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,735859 (regressionFit = 6,735858, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,720452 (regressionFit = 6,720451, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,742430 (regressionFit = 6,742429, penalties=1.03E-6) for clause:  faculty(A) :- has(A, docum).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,740457 (regressionFit = 6,740456, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,616979 (regressionFit = 6,616978, penalties=1.03E-6) for clause:  faculty(A) :- has(A, click).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,616979): faculty(A) :- has(A, click).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,734402 (regressionFit = 6,734401, penalties=1.03E-6) for clause:  faculty(A) :- has(A, netscap).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,670149 (regressionFit = 6,670148, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,874675 (regressionFit = 6,874674, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,645414 (regressionFit = 6,645413, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.6454141887767
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -6,725698 (regressionFit = 6,725696, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,678208 (regressionFit = 6,678206, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,010607 (regressionFit = 7,010605, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,807304 (regressionFit = 6,807302, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,114944 (regressionFit = 7,114942, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,127257 (regressionFit = 7,127255, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,639920 (regressionFit = 6,639918, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,601006 (regressionFit = 6,601004, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,601006): faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,048259 (regressionFit = 7,048257, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,742559 (regressionFit = 6,742557, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,789970 (regressionFit = 6,789968, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,975124 (regressionFit = 6,975122, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,634559 (regressionFit = 6,634557, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,671349 (regressionFit = 6,671347, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,591396 (regressionFit = 6,591394, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,591396): faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.591395946957282

% Consider expanding [#4 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.63455935244978

% Consider expanding [#5 of outerLoop #5, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.670149456749541
%  At # nodes expanded = 5, |OPEN| = 6.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,666846 (regressionFit = 6,666844, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,651270 (regressionFit = 6,651268, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.651270179389475

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.6713487806263965

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]' score=-6.742559286614257

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]' score=-6.789969886569734

***** Warning: #41 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
Setting -0.017728956405106886 for 
 // Learned this clause on outer loop cycle #5.  It scores=-6,59 and has recall=0,23, precision=1,00, and F1=0,37 (using m-estimates).
 // It covers 23,0% of the positive examples, 37 of 161 (of which 0 are newly covered),
 // So far 92 (57,1%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon29039, D), linkto(Anon29173, Anon29039))

% On cycle #5, the best clause found is:
%      faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 37 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 5 best clauses covers 57,1% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (5).

% ******************************************
adding regression values
Added -0.010139531427292632 to wgt = -0,0101 (faculty(A) :- linkto(B, A), has(B, texa))
Added -0.011653629588253422 to wgt = -0,0117 (faculty(A) :- has(A, inform))
Added 0.1757641937897466 to wgt = 0,1758 (faculty(A) :- has(A, fax))
Added -0.02588020072929396 to wgt = -0,0259 (faculty(A) :- linkto(B, A), linkto(_, B))
Added -0.017728956405106886 to wgt = -0,0177 (faculty(A) :- linkto(B, A), linkto(_, B))
% Saving model in: datasets\MyWebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 4 trees is 16,645 seconds.

% Kept 10 of the 10 positive examples.
% Kept 151 of the 151 negative examples.
% Dataset size: 161
Computing probabilities
prob time:126 milliseconds
No hidden examples for : faculty
Time to build dataset: 128 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #33 as the next seed: faculty(httpwwwcsutexaseduusersvbb)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 41 items to OPEN for evaluation and possible insertion.
% Have created 41 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,909381 (regressionFit = 6,909380, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,909381): faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,268674 (regressionFit = 7,268673, penalties=1.03E-6) for clause:  faculty(A) :- has(A, log).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,221858 (regressionFit = 7,221857, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,291333 (regressionFit = 7,291332, penalties=1.03E-6) for clause:  faculty(A) :- has(A, send).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,312487 (regressionFit = 7,312486, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,834661 (regressionFit = 6,834660, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,834661): faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,900886 (regressionFit = 6,900885, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,055625 (regressionFit = 7,055624, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,268082 (regressionFit = 7,268081, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,312970 (regressionFit = 7,312969, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,278849 (regressionFit = 7,278848, penalties=1.03E-6) for clause:  faculty(A) :- has(A, find).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,150409 (regressionFit = 7,150408, penalties=1.03E-6) for clause:  faculty(A) :- has(A, address).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,924533 (regressionFit = 6,924532, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,283582 (regressionFit = 7,283581, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,306991 (regressionFit = 7,306990, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,221667 (regressionFit = 7,221666, penalties=1.03E-6) for clause:  faculty(A) :- has(A, click).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,304589 (regressionFit = 7,304588, penalties=1.03E-6) for clause:  faculty(A) :- has(A, account).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,328174 (regressionFit = 7,328173, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,312970 (regressionFit = 7,312969, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,335286 (regressionFit = 7,335285, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thursdai).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,325716 (regressionFit = 7,325715, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,072469 (regressionFit = 7,072468, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,916308 (regressionFit = 6,916307, penalties=1.03E-6) for clause:  faculty(A) :- has(A, hall).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,166636 (regressionFit = 7,166635, penalties=1.03E-6) for clause:  faculty(A) :- has(A, contact).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,733388 (regressionFit = 6,733387, penalties=1.03E-6) for clause:  faculty(A) :- has(A, offic).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,733388): faculty(A) :- has(A, offic).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,332599 (regressionFit = 7,332598, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tx).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,329512 (regressionFit = 7,329511, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,223164 (regressionFit = 7,223163, penalties=1.03E-6) for clause:  faculty(A) :- has(A, email).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,326778 (regressionFit = 7,326777, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,157658 (regressionFit = 7,157657, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,381011 (regressionFit = 7,381010, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,193668 (regressionFit = 7,193667, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.157658215090412
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -7,177098 (regressionFit = 7,177096, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,106427 (regressionFit = 7,106425, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,177014 (regressionFit = 7,177012, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.106426806134836
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), r_faculty(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), department(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,484194 (regressionFit = 6,484191, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,484194): faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,156801 (regressionFit = 7,156798, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,048071 (regressionFit = 7,048068, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,013835 (regressionFit = 7,013832, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,182922 (regressionFit = 7,182919, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,180686 (regressionFit = 7,180683, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,161477 (regressionFit = 7,161474, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,176421 (regressionFit = 7,176418, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,070823 (regressionFit = 7,070820, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.013835089643498

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.070823176883343

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.161476948112029

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(A, _), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.176421030653469

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.177014092104926
%  At # nodes expanded = 8, |OPEN| = 5.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -6,421987 (regressionFit = 6,421984, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,421987): faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,675190 (regressionFit = 6,675187, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,182204 (regressionFit = 7,182201, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,184173 (regressionFit = 7,184170, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,180686 (regressionFit = 7,180683, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,165884 (regressionFit = 7,165881, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,184456 (regressionFit = 7,184453, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,182562 (regressionFit = 7,182559, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-7.165883632674544

***** Warning: #42 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
Setting 0.47624420994404343 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,42 and has recall=0,02, precision=0,97, and F1=0,04 (using m-estimates).
 // It covers 1,9% of the positive examples, 3 of 161,
(faculty(D) :- linkto(D, D), linkto(Anon29643, D), r_faculty(Anon29643))

% On cycle #1, the best clause found is:
%      faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 1,9% of the positive examples and NaN% of the negatives.}
% Have selected pos example #158 as the next seed: faculty(httpwwwcsutexaseduusersqr)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 64 items to OPEN for evaluation and possible insertion.
% Have created 64 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,402875 (regressionFit = 6,402874, penalties=1.03E-6) for clause:  faculty(A) :- has(A, user).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,402875): faculty(A) :- has(A, user).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,304038 (regressionFit = 6,304037, penalties=1.03E-6) for clause:  faculty(A) :- has(A, artifici).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,304038): faculty(A) :- has(A, artifici).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,401978 (regressionFit = 6,401977, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dissert).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,421383 (regressionFit = 6,421382, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oct).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,130223 (regressionFit = 6,130222, penalties=1.03E-6) for clause:  faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,130223): faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,159550 (regressionFit = 6,159549, penalties=1.03E-6) for clause:  faculty(A) :- has(A, includ).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,410361 (regressionFit = 6,410360, penalties=1.03E-6) for clause:  faculty(A) :- has(A, knowledg).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,415535 (regressionFit = 6,415534, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fridai).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,418316 (regressionFit = 6,418315, penalties=1.03E-6) for clause:  faculty(A) :- has(A, directori).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,196784 (regressionFit = 6,196783, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,275347 (regressionFit = 6,275346, penalties=1.03E-6) for clause:  faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,416650 (regressionFit = 6,416649, penalties=1.03E-6) for clause:  faculty(A) :- has(A, logic).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,397274 (regressionFit = 6,397273, penalties=1.03E-6) for clause:  faculty(A) :- has(A, descript).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,407316 (regressionFit = 6,407315, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,294582 (regressionFit = 6,294581, penalties=1.03E-6) for clause:  faculty(A) :- has(A, robot).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,421667 (regressionFit = 6,421666, penalties=1.03E-6) for clause:  faculty(A) :- has(A, abstract).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,407472 (regressionFit = 6,407471, penalties=1.03E-6) for clause:  faculty(A) :- has(A, docum).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,390560 (regressionFit = 6,390559, penalties=1.03E-6) for clause:  faculty(A) :- has(A, pointer).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,414994 (regressionFit = 6,414993, penalties=1.03E-6) for clause:  faculty(A) :- has(A, access).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,402945 (regressionFit = 6,402944, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,394395 (regressionFit = 6,394394, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,420674 (regressionFit = 6,420673, penalties=1.03E-6) for clause:  faculty(A) :- has(A, world).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,420840 (regressionFit = 6,420839, penalties=1.03E-6) for clause:  faculty(A) :- has(A, reason).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,407316 (regressionFit = 6,407315, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,399128 (regressionFit = 6,399127, penalties=1.03E-6) for clause:  faculty(A) :- has(A, represent).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,404246 (regressionFit = 6,404244, penalties=1.03E-6) for clause:  faculty(A) :- has(A, limit).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,318806 (regressionFit = 6,318805, penalties=1.03E-6) for clause:  faculty(A) :- has(A, book).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,402309 (regressionFit = 6,402308, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,419821 (regressionFit = 6,419820, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ftp).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,405029 (regressionFit = 6,405028, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,963243 (regressionFit = 5,963242, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,963243): faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,531589 (regressionFit = 5,531588, penalties=1.03E-6) for clause:  faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,531589): faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,388774 (regressionFit = 6,388773, penalties=1.03E-6) for clause:  faculty(A) :- has(A, part).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,155679 (regressionFit = 6,155678, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,421315 (regressionFit = 6,421314, penalties=1.03E-6) for clause:  faculty(A) :- has(A, physic).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,420731 (regressionFit = 6,420730, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graduat).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,337421 (regressionFit = 6,337420, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,371124 (regressionFit = 6,371123, penalties=1.03E-6) for clause:  faculty(A) :- has(A, intellig).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,364338 (regressionFit = 6,364337, penalties=1.03E-6) for clause:  faculty(A) :- has(A, student).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,766326 (regressionFit = 4,766325, penalties=1.03E-6) for clause:  faculty(A) :- has(A, professor).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,766326): faculty(A) :- has(A, professor).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,131927 (regressionFit = 6,131925, penalties=1.03E-6) for clause:  faculty(A) :- has(A, softwar).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,405814 (regressionFit = 6,405813, penalties=1.03E-6) for clause:  faculty(A) :- has(A, index).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,416413 (regressionFit = 6,416412, penalties=1.03E-6) for clause:  faculty(A) :- has(A, visit).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,381673 (regressionFit = 6,381672, penalties=1.03E-6) for clause:  faculty(A) :- has(A, applic).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,420056 (regressionFit = 6,420055, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,414720 (regressionFit = 6,414719, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,060681 (regressionFit = 6,060680, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,772216 (regressionFit = 5,772215, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,420107 (regressionFit = 6,420106, penalties=1.03E-6) for clause:  faculty(A) :- has(A, qualit).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,390470 (regressionFit = 6,390469, penalties=1.03E-6) for clause:  faculty(A) :- has(A, lab).  [covers 23,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,421547 (regressionFit = 6,421546, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,071093 (regressionFit = 6,071092, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,421463 (regressionFit = 6,421462, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,600251 (regressionFit = 6,600250, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,415836 (regressionFit = 6,415835, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.415835718393378
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 3 variant children.  Sending 176 items to OPEN for evaluation and possible insertion.
% Have created 176 valid-on-seeds descendants.
%     Score = -6,751319 (regressionFit = 6,751317, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,128669 (regressionFit = 6,128667, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,447425 (regressionFit = 6,447423, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,748401 (regressionFit = 6,748399, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,707217 (regressionFit = 6,707215, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,739217 (regressionFit = 6,739215, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,428105 (regressionFit = 6,428102, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,316059 (regressionFit = 6,316057, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,654707 (regressionFit = 6,654705, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, user).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,497279 (regressionFit = 6,497277, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, artifici).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,738429 (regressionFit = 6,738427, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, dissert).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,740516 (regressionFit = 6,740513, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, oct).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,165806 (regressionFit = 6,165804, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, group).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,581196 (regressionFit = 6,581194, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, includ).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,654480 (regressionFit = 6,654478, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, knowledg).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,740310 (regressionFit = 6,740308, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, fridai).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,415837 (regressionFit = 6,415835, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,695856 (regressionFit = 6,695854, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, directori).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,415837 (regressionFit = 6,415835, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,162948 (regressionFit = 6,162946, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, texa).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,310655 (regressionFit = 6,310652, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, system).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,649493 (regressionFit = 6,649491, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, logic).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,738758 (regressionFit = 6,738756, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, descript).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,404995 (regressionFit = 6,404993, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mime).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,677879 (regressionFit = 6,677877, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, robot).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,725350 (regressionFit = 6,725348, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, abstract).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,731658 (regressionFit = 6,731656, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, docum).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, pointer).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,705112 (regressionFit = 6,705109, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, access).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,404995 (regressionFit = 6,404993, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, cern).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,415837 (regressionFit = 6,415835, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,420573 (regressionFit = 6,420571, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, mondai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,728474 (regressionFit = 6,728472, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, world).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,702496 (regressionFit = 6,702494, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, reason).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,404995 (regressionFit = 6,404993, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, version).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,739872 (regressionFit = 6,739870, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, represent).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,731225 (regressionFit = 6,731222, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, limit).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,415837 (regressionFit = 6,415835, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,740296 (regressionFit = 6,740294, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, book).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,707091 (regressionFit = 6,707089, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, page).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,718974 (regressionFit = 6,718972, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, ftp).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,394202 (regressionFit = 6,394200, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,066354 (regressionFit = 6,066352, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, comput).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,288683 (regressionFit = 6,288681, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, area).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,415837 (regressionFit = 6,415835, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, part).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,214119 (regressionFit = 6,214117, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, depart).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,693883 (regressionFit = 6,693880, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, physic).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,704509 (regressionFit = 6,704507, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, graduat).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,130857 (regressionFit = 6,130855, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, austin).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,497279 (regressionFit = 6,497277, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, intellig).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,537970 (regressionFit = 6,537968, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, student).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,455982 (regressionFit = 5,455979, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, professor).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,613622 (regressionFit = 6,613619, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, softwar).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,723358 (regressionFit = 6,723356, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, index).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,717330 (regressionFit = 6,717328, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, visit).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,740384 (regressionFit = 6,740382, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, applic).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,730680 (regressionFit = 6,730678, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, paper).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,401214 (regressionFit = 6,401211, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,125023 (regressionFit = 6,125021, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, scienc).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,415837 (regressionFit = 6,415835, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,060854 (regressionFit = 6,060852, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, research).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,415837 (regressionFit = 6,415835, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,690658 (regressionFit = 6,690656, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, qualit).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,405121 (regressionFit = 6,405119, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, jan).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,705595 (regressionFit = 6,705593, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, lab).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,401866 (regressionFit = 6,401863, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, utexa).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,206669 (regressionFit = 6,206667, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- linkto(_, A), has(A, univers).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,709574 (regressionFit = 6,709572, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, user).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, product).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,726062 (regressionFit = 6,726060, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, approach).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,684849 (regressionFit = 6,684846, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, dec).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,415837 (regressionFit = 6,415835, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,415837 (regressionFit = 6,415835, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,777480 (regressionFit = 6,777478, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, docum).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,625807 (regressionFit = 6,625805, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, physic).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,440409 (regressionFit = 6,440407, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, version).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,675489 (regressionFit = 6,675487, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, reason).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,725065 (regressionFit = 6,725063, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, publish).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,715436 (regressionFit = 6,715434, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, short).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,676734 (regressionFit = 6,676732, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, page).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,678021 (regressionFit = 6,678019, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, area).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,523931 (regressionFit = 6,523929, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, work).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,722072 (regressionFit = 6,722070, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, retriev).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,725108 (regressionFit = 6,725106, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, understand).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,687968 (regressionFit = 6,687966, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, qualit).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,812211 (regressionFit = 6,812209, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, abstract).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,490283 (regressionFit = 6,490281, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,675700 (regressionFit = 6,675698, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, index).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,378467 (regressionFit = 6,378465, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cern).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,388967 (regressionFit = 6,388965, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, lab).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,680041 (regressionFit = 6,680039, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, implem).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,611240 (regressionFit = 6,611238, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, structur).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,721681 (regressionFit = 6,721679, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, refin).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,712091 (regressionFit = 6,712089, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, autom).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, de).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,798042 (regressionFit = 6,798040, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, richard).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,717729 (regressionFit = 6,717727, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, point).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, june).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,707786 (regressionFit = 6,707784, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, report).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,679939 (regressionFit = 6,679937, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, manag).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, motion).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, januari).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,767189 (regressionFit = 6,767187, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, state).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,741044 (regressionFit = 6,741042, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mathemat).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,674195 (regressionFit = 6,674193, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, function).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,723509 (regressionFit = 6,723507, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, special).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,683465 (regressionFit = 6,683463, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, integr).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,681444 (regressionFit = 6,681442, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, dynam).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,705971 (regressionFit = 6,705969, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, pictur).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,758955 (regressionFit = 6,758953, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, problem).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,538968 (regressionFit = 6,538966, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, book).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,743098 (regressionFit = 6,743096, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, develop).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, constraint).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,591762 (regressionFit = 6,591760, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, home).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,683774 (regressionFit = 6,683772, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, real).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,787755 (regressionFit = 6,787753, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, contact).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,723509 (regressionFit = 6,723507, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, technic).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, flow).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,769125 (regressionFit = 6,769123, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, solv).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,716675 (regressionFit = 6,716673, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, compon).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,712640 (regressionFit = 6,712638, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, present).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,207409 (regressionFit = 6,207407, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, compil).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,728198 (regressionFit = 6,728196, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, event).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,716675 (regressionFit = 6,716673, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, mit).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,690488 (regressionFit = 6,690486, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, time).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,419103 (regressionFit = 6,419101, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, engin).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,721017 (regressionFit = 6,721015, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, definit).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,680628 (regressionFit = 6,680626, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, thesi).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,722250 (regressionFit = 6,722248, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, cc).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,368478 (regressionFit = 6,368476, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, austin).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, transact).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,455605 (regressionFit = 6,455603, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, scienc).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, deriv).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,668350 (regressionFit = 6,668348, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, box).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,401727 (regressionFit = 6,401725, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, man).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,679008 (regressionFit = 6,679006, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, pp).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,773743 (regressionFit = 6,773741, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, recent).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,686666 (regressionFit = 6,686664, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, postscript).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, ieee).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,402670 (regressionFit = 6,402668, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, file).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,713373 (regressionFit = 6,713371, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, natur).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714698 (regressionFit = 6,714696, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, complet).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,667761 (regressionFit = 6,667759, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, extens).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,680041 (regressionFit = 6,680039, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, master).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,680796 (regressionFit = 6,680794, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, behavior).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,716675 (regressionFit = 6,716673, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, principl).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,680041 (regressionFit = 6,680039, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, high).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,719221 (regressionFit = 6,719219, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, reduc).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,675664 (regressionFit = 6,675662, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, analysi).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,716675 (regressionFit = 6,716673, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, press).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,284725 (regressionFit = 6,284723, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, texa).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714508 (regressionFit = 6,714506, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, global).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,800974 (regressionFit = 6,800972, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, variabl).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,704108 (regressionFit = 6,704105, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, neural).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,340627 (regressionFit = 6,340624, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, inform).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,682116 (regressionFit = 6,682114, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, perform).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, march).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,554422 (regressionFit = 6,554420, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, nov).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714664 (regressionFit = 6,714662, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, formal).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,288799 (regressionFit = 6,288797, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, gener).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,714508 (regressionFit = 6,714506, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, output).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,351428 (regressionFit = 6,351426, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, construct).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,660851 (regressionFit = 6,660849, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, applic).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,801804 (regressionFit = 6,801802, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, simul).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,748241 (regressionFit = 6,748239, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, address).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, properti).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,478845 (regressionFit = 6,478843, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, thursdai).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,740553 (regressionFit = 6,740551, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,445611 (regressionFit = 6,445609, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,514545 (regressionFit = 6,514543, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,749429 (regressionFit = 6,749427, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332359 (regressionFit = 6,332357, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,472602 (regressionFit = 6,472600, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354025 (regressionFit = 6,354023, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.332359354242202
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 7 variant children.  Sending 268 items to OPEN for evaluation and possible insertion.
% Have created 268 valid-on-seeds descendants.
%     Score = -6,801815 (regressionFit = 6,801812, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,289182 (regressionFit = 5,289179, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), r_faculty(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,470028 (regressionFit = 6,470025, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,013416 (regressionFit = 7,013413, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), course(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,792798 (regressionFit = 6,792795, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,907610 (regressionFit = 6,907607, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), department(C).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,818728 (regressionFit = 6,818725, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,254991 (regressionFit = 6,254988, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), person(C).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,800993 (regressionFit = 6,800990, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), researchproject(C).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), staff(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,904444 (regressionFit = 6,904441, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,786268 (regressionFit = 6,786265, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), student(C).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,375353 (regressionFit = 6,375349, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,268648 (regressionFit = 6,268645, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,386681 (regressionFit = 6,386678, penalties=3.04E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,906557 (regressionFit = 6,906554, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, user).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,826690 (regressionFit = 6,826687, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, artifici).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,908258 (regressionFit = 6,908255, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, dissert).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,907051 (regressionFit = 6,907048, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, oct).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,521700 (regressionFit = 6,521697, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, group).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,822862 (regressionFit = 6,822859, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, includ).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,785225 (regressionFit = 6,785222, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, knowledg).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,908593 (regressionFit = 6,908590, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, fridai).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,830741 (regressionFit = 6,830738, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, directori).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,511829 (regressionFit = 6,511826, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, texa).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,421535 (regressionFit = 6,421532, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, system).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,881222 (regressionFit = 6,881219, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, logic).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,908410 (regressionFit = 6,908407, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, descript).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,357680 (regressionFit = 6,357677, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, mime).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,882733 (regressionFit = 6,882730, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, robot).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,844450 (regressionFit = 6,844447, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, abstract).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,826202 (regressionFit = 6,826199, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, docum).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, pointer).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,888094 (regressionFit = 6,888091, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, access).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,357680 (regressionFit = 6,357677, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, cern).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,606590 (regressionFit = 6,606587, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, mondai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,889782 (regressionFit = 6,889779, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, world).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,814244 (regressionFit = 6,814241, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, reason).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,357680 (regressionFit = 6,357677, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, version).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,908564 (regressionFit = 6,908561, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, represent).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,889585 (regressionFit = 6,889582, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, limit).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,886197 (regressionFit = 6,886193, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, book).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,887992 (regressionFit = 6,887989, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, page).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,850682 (regressionFit = 6,850679, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, ftp).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,307063 (regressionFit = 6,307060, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,184167 (regressionFit = 6,184164, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, comput).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,705273 (regressionFit = 6,705270, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, area).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, part).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,530406 (regressionFit = 6,530403, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, depart).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,874840 (regressionFit = 6,874837, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, physic).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,897949 (regressionFit = 6,897946, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, graduat).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,169920 (regressionFit = 6,169917, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, austin).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,826690 (regressionFit = 6,826687, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, intellig).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,836700 (regressionFit = 6,836697, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, student).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,989842 (regressionFit = 5,989839, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, professor).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,604419 (regressionFit = 6,604416, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, softwar).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,900086 (regressionFit = 6,900083, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, index).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,824610 (regressionFit = 6,824607, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, visit).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,902694 (regressionFit = 6,902691, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, applic).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,874426 (regressionFit = 6,874423, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, paper).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,315197 (regressionFit = 6,315194, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,510459 (regressionFit = 6,510456, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, scienc).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,395834 (regressionFit = 6,395831, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, research).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,799400 (regressionFit = 6,799397, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, qualit).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,320008 (regressionFit = 6,320005, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, jan).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,798898 (regressionFit = 6,798894, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, lab).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,370540 (regressionFit = 6,370537, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, utexa).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,536423 (regressionFit = 6,536420, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, univers).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,854150 (regressionFit = 6,854147, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, user).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, product).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,902060 (regressionFit = 6,902057, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, approach).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,881788 (regressionFit = 6,881785, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, docum).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,905852 (regressionFit = 6,905849, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, publish).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,775018 (regressionFit = 6,775015, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, page).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,787953 (regressionFit = 6,787950, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, area).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,444009 (regressionFit = 6,444006, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, jan).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,789905 (regressionFit = 6,789902, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, ut).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,424585 (regressionFit = 6,424582, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, mime).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,902012 (regressionFit = 6,902009, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, ai).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,216984 (regressionFit = 6,216981, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, utexa).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,786735 (regressionFit = 6,786732, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, qualit).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,424392 (regressionFit = 6,424389, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,786451 (regressionFit = 6,786448, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, index).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,767595 (regressionFit = 6,767592, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, faculti).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,611253 (regressionFit = 6,611250, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, lab).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,615315 (regressionFit = 6,615312, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, softwar).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,636839 (regressionFit = 6,636836, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, system).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,898242 (regressionFit = 6,898239, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, point).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,904119 (regressionFit = 6,904116, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, purpos).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,902616 (regressionFit = 6,902613, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, theori).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, statem).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, januari).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,901619 (regressionFit = 6,901616, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, techniqu).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,900052 (regressionFit = 6,900049, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, step).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,900045 (regressionFit = 6,900042, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, tr).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,816180 (regressionFit = 6,816177, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, mathemat).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,740428 (regressionFit = 6,740425, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, copi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,895546 (regressionFit = 6,895543, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, learn).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,785121 (regressionFit = 6,785118, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, space).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,707849 (regressionFit = 6,707846, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, book).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,947722 (regressionFit = 6,947719, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, develop).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,899653 (regressionFit = 6,899650, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, discuss).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,686571 (regressionFit = 6,686568, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, home).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,788726 (regressionFit = 6,788723, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, real).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,955083 (regressionFit = 6,955080, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, larg).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,780422 (regressionFit = 6,780419, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, logic).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, protocol).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,660344 (regressionFit = 6,660341, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, select).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, multipl).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,902425 (regressionFit = 6,902422, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, technic).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,805431 (regressionFit = 6,805428, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, tx).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, flow).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,938013 (regressionFit = 6,938010, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, solv).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,903522 (regressionFit = 6,903519, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, numer).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,893037 (regressionFit = 6,893034, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, network).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,900014 (regressionFit = 6,900011, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, mit).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,795951 (regressionFit = 6,795948, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, time).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,765047 (regressionFit = 6,765044, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, engin).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,899913 (regressionFit = 6,899910, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, definit).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,784549 (regressionFit = 6,784546, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, thesi).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,040767 (regressionFit = 7,040764, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, continu).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,903383 (regressionFit = 6,903380, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, cc).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,900068 (regressionFit = 6,900065, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, novemb).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, transact).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,465792 (regressionFit = 6,465789, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, scienc).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, scale).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,755048 (regressionFit = 6,755045, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, april).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,417077 (regressionFit = 6,417074, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, univers).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,899773 (regressionFit = 6,899770, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, review).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, ieee).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, separ).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,889673 (regressionFit = 6,889670, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, submit).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, shape).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, top).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,899643 (regressionFit = 6,899639, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, complet).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,784763 (regressionFit = 6,784760, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, extens).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,820403 (regressionFit = 6,820400, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, technologi).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,803103 (regressionFit = 6,803100, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, algorithm).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,980626 (regressionFit = 6,980623, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, detail).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,902425 (regressionFit = 6,902422, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, acm).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,899458 (regressionFit = 6,899455, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, reduc).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,900014 (regressionFit = 6,900011, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, press).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,843836 (regressionFit = 6,843833, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, read).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,896762 (regressionFit = 6,896759, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, global).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,421565 (regressionFit = 6,421561, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, inform).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,756479 (regressionFit = 6,756476, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, perform).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,681594 (regressionFit = 6,681591, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, nov).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,900646 (regressionFit = 6,900643, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, nation).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,784557 (regressionFit = 6,784554, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, fault).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,937502 (regressionFit = 6,937499, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, control).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,757176 (regressionFit = 6,757173, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, intern).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,902425 (regressionFit = 6,902422, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, york).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,784081 (regressionFit = 6,784078, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, van).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,901765 (regressionFit = 6,901762, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, graph).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,778427 (regressionFit = 6,778424, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, note).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, position).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,585292 (regressionFit = 6,585289, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, depart).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,755048 (regressionFit = 6,755045, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, proceed).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -7,054746 (regressionFit = 7,054743, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, simul).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,843757 (regressionFit = 6,843754, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, languag).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,941761 (regressionFit = 6,941757, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, editor).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, devic).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,901474 (regressionFit = 6,901471, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, base).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,783465 (regressionFit = 6,783462, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, thursdai).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,870603 (regressionFit = 6,870600, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, jame).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,626201 (regressionFit = 6,626198, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, oct).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,890461 (regressionFit = 6,890458, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, user).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,915707 (regressionFit = 6,915704, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, artifici).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,802448 (regressionFit = 6,802445, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, dissert).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,910203 (regressionFit = 6,910200, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, oct).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,327195 (regressionFit = 6,327192, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, group).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,554392 (regressionFit = 6,554390, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, includ).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,627271 (regressionFit = 6,627268, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, knowledg).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,692769 (regressionFit = 6,692766, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, fridai).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, text).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,837990 (regressionFit = 6,837987, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, directori).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, type).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,346072 (regressionFit = 6,346069, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, texa).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,620707 (regressionFit = 6,620704, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, system).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,774372 (regressionFit = 6,774369, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, logic).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,795666 (regressionFit = 6,795663, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, descript).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,328322 (regressionFit = 6,328319, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, mime).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,967986 (regressionFit = 6,967983, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, robot).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,780132 (regressionFit = 6,780129, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, abstract).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,828854 (regressionFit = 6,828851, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, docum).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,902357 (regressionFit = 6,902354, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, pointer).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,720567 (regressionFit = 6,720564, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, access).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,328322 (regressionFit = 6,328319, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, cern).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, date).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,469669 (regressionFit = 6,469666, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, mondai).  [covers 44,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,645575 (regressionFit = 6,645572, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, world).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,658821 (regressionFit = 6,658818, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, reason).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,328322 (regressionFit = 6,328319, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, version).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,800503 (regressionFit = 6,800500, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, represent).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,643271 (regressionFit = 6,643268, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, limit).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, server).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,888568 (regressionFit = 6,888565, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, book).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,724540 (regressionFit = 6,724537, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, page).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,841772 (regressionFit = 6,841769, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, ftp).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,307063 (regressionFit = 6,307060, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, modifi).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,327537 (regressionFit = 6,327535, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, comput).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,504866 (regressionFit = 6,504863, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, area).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, content).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,902377 (regressionFit = 6,902374, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, part).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,487755 (regressionFit = 6,487752, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, depart).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,820151 (regressionFit = 6,820148, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, physic).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,909701 (regressionFit = 6,909698, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, graduat).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,382300 (regressionFit = 6,382297, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, austin).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,915707 (regressionFit = 6,915704, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, intellig).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,846183 (regressionFit = 6,846180, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, student).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,730658 (regressionFit = 5,730655, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, professor).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,835593 (regressionFit = 6,835590, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, softwar).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,797923 (regressionFit = 6,797920, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, index).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,668172 (regressionFit = 6,668169, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, visit).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,809697 (regressionFit = 6,809694, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, applic).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,810439 (regressionFit = 6,810436, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, paper).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,315197 (regressionFit = 6,315194, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, length).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,327717 (regressionFit = 6,327714, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, scienc).  [covers 33,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, gmt).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,363505 (regressionFit = 6,363502, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, research).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,332360 (regressionFit = 6,332357, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, html).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,635160 (regressionFit = 6,635157, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, qualit).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,320008 (regressionFit = 6,320005, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, jan).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,898737 (regressionFit = 6,898734, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, lab).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,342166 (regressionFit = 6,342163, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, utexa).  [covers 43,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,349398 (regressionFit = 6,349395, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, univers).  [covers 36,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,897126 (regressionFit = 6,897123, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, product).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,633450 (regressionFit = 6,633447, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, approach).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,676123 (regressionFit = 6,676120, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, dec).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,789025 (regressionFit = 6,789022, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, describ).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,692428 (regressionFit = 6,692425, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, web).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,733508 (regressionFit = 6,733505, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, tuesdai).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,655329 (regressionFit = 6,655326, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, overview).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,898050 (regressionFit = 6,898047, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, publish).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, short).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,897516 (regressionFit = 6,897513, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, find).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,403270 (regressionFit = 6,403268, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, work).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,900167 (regressionFit = 6,900164, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, retriev).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,796332 (regressionFit = 6,796329, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, understand).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,666913 (regressionFit = 6,666910, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, ut).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,640934 (regressionFit = 6,640932, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, ai).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,900123 (regressionFit = 6,900120, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, math).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,629951 (regressionFit = 6,629948, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, faculti).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,652192 (regressionFit = 6,652189, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, build).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,908601 (regressionFit = 6,908598, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,794332 (regressionFit = 6,794329, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,913049 (regressionFit = 6,913046, penalties=2.8300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(A, C).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,837190 (regressionFit = 6,837187, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,796032 (regressionFit = 6,796029, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,338087 (regressionFit = 6,338084, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,666305 (regressionFit = 6,666302, penalties=2.8300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(C, A).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,288145 (regressionFit = 6,288142, penalties=2.8300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(C, B).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,764932 (regressionFit = 6,764929, penalties=2.8300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(C, C).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,391415 (regressionFit = 6,391412, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(C, _).  [covers 40,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,405580 (regressionFit = 6,405577, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,295922 (regressionFit = 6,295919, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,406598 (regressionFit = 6,406595, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, C).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(B, A), linkto(B, C), linkto(C, B).  [covers 34,0/161,0 pos, 0,0/0,0 neg]' score=-6.28814460520179

% Consider expanding [#5 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.2959217726127745

% Consider expanding [#6 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-6.338086948923951

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.3540251507898615
%  At # nodes expanded = 7, |OPEN| = 6.  Pruned 7 variant children.  Sending 290 items to OPEN for evaluation and possible insertion.
% Have created 290 valid-on-seeds descendants.
%     Score = -6,855234 (regressionFit = 6,855231, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,508183 (regressionFit = 6,508180, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), r_faculty(C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,933671 (regressionFit = 5,933668, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,782886 (regressionFit = 6,782883, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), course(C).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,689049 (regressionFit = 6,689046, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), department(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,678890 (regressionFit = 6,678887, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), department(C).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,859985 (regressionFit = 6,859982, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,507241 (regressionFit = 6,507238, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), person(C).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,693793 (regressionFit = 6,693790, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,695288 (regressionFit = 6,695285, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), researchproject(C).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), staff(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,717833 (regressionFit = 6,717830, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,699492 (regressionFit = 6,699489, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), student(C).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,366150 (regressionFit = 6,366147, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, _).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,317087 (regressionFit = 6,317084, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, _).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,344037 (regressionFit = 6,344034, penalties=3.04E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, _).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,685528 (regressionFit = 6,685525, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, user).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,624387 (regressionFit = 6,624384, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, artifici).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,702549 (regressionFit = 6,702546, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, dissert).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,704804 (regressionFit = 6,704800, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, oct).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,325627 (regressionFit = 6,325624, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, group).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,667868 (regressionFit = 6,667865, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, includ).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,697036 (regressionFit = 6,697033, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, knowledg).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,719532 (regressionFit = 6,719529, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, fridai).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354026 (regressionFit = 6,354023, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, text).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,678298 (regressionFit = 6,678295, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, directori).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354026 (regressionFit = 6,354023, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, type).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,271128 (regressionFit = 6,271125, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, texa).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,388212 (regressionFit = 6,388209, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, system).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, logic).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,712805 (regressionFit = 6,712802, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, descript).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,350617 (regressionFit = 6,350614, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, mime).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,650176 (regressionFit = 6,650173, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, robot).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,659933 (regressionFit = 6,659930, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, abstract).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,640955 (regressionFit = 6,640952, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, docum).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, pointer).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,690954 (regressionFit = 6,690951, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, access).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,350617 (regressionFit = 6,350614, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, cern).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354026 (regressionFit = 6,354023, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, date).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,556638 (regressionFit = 6,556635, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, mondai).  [covers 28,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,703680 (regressionFit = 6,703677, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, world).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,677753 (regressionFit = 6,677750, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, reason).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,350617 (regressionFit = 6,350614, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, version).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,710823 (regressionFit = 6,710820, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, represent).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, limit).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354026 (regressionFit = 6,354023, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, server).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,713455 (regressionFit = 6,713452, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, book).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,718382 (regressionFit = 6,718379, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, page).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,690826 (regressionFit = 6,690822, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, ftp).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,337135 (regressionFit = 6,337132, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, modifi).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,184440 (regressionFit = 6,184437, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, comput).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,436575 (regressionFit = 6,436572, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, area).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354026 (regressionFit = 6,354023, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, content).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, part).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,311535 (regressionFit = 6,311532, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, depart).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,666253 (regressionFit = 6,666250, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, physic).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,673110 (regressionFit = 6,673107, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, graduat).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,192033 (regressionFit = 6,192030, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, austin).  [covers 23,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,624387 (regressionFit = 6,624384, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, intellig).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,433626 (regressionFit = 6,433623, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, student).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,927310 (regressionFit = 5,927307, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, professor).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,612162 (regressionFit = 6,612159, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, softwar).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,695371 (regressionFit = 6,695368, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, index).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,698635 (regressionFit = 6,698632, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, visit).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,704537 (regressionFit = 6,704534, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, applic).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,693352 (regressionFit = 6,693349, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, paper).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,343829 (regressionFit = 6,343826, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, length).  [covers 36,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,236998 (regressionFit = 6,236995, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, scienc).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354026 (regressionFit = 6,354023, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, gmt).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,250818 (regressionFit = 6,250815, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, research).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354026 (regressionFit = 6,354023, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, html).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672656 (regressionFit = 6,672653, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, qualit).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,343829 (regressionFit = 6,343826, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, jan).  [covers 36,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,685719 (regressionFit = 6,685716, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, lab).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,468972 (regressionFit = 6,468969, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, utexa).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,284177 (regressionFit = 6,284174, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(A, univers).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,695285 (regressionFit = 6,695282, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, approach).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354026 (regressionFit = 6,354023, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, content).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,677745 (regressionFit = 6,677742, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, fridai).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,343980 (regressionFit = 6,343977, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, version).  [covers 33,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,604935 (regressionFit = 6,604932, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, tuesdai).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,626092 (regressionFit = 6,626089, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, world).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,668776 (regressionFit = 6,668773, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, reason).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,706328 (regressionFit = 6,706325, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, overview).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,626983 (regressionFit = 6,626980, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, page).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,591086 (regressionFit = 6,591083, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, area).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,701636 (regressionFit = 6,701633, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, find).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,651569 (regressionFit = 6,651566, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, work).  [covers 23,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, retriev).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,753724 (regressionFit = 6,753721, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, research).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,343980 (regressionFit = 6,343977, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, mime).  [covers 33,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,797575 (regressionFit = 6,797572, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, abstract).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,666814 (regressionFit = 6,666811, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, ftp).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,335739 (regressionFit = 6,335736, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, modifi).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,649720 (regressionFit = 6,649717, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, faculti).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,560900 (regressionFit = 6,560897, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, softwar).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354026 (regressionFit = 6,354023, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, date).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,257534 (regressionFit = 6,257531, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, public).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, de).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, june).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,662017 (regressionFit = 6,662014, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, dissert).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,669683 (regressionFit = 6,669680, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, represent).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, manag).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,412417 (regressionFit = 6,412414, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, descript).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, step).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,833421 (regressionFit = 6,833418, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, mathemat).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,645074 (regressionFit = 6,645071, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, special).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,693113 (regressionFit = 6,693110, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, method).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,688884 (regressionFit = 6,688880, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, idea).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,642856 (regressionFit = 6,642853, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, question).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,665811 (regressionFit = 6,665808, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, discuss).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,682179 (regressionFit = 6,682176, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, home).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, express).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,699525 (regressionFit = 6,699522, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, real).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,747235 (regressionFit = 6,747232, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, larg).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,688884 (regressionFit = 6,688880, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, set).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, mode).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,777943 (regressionFit = 6,777940, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, tx).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,844643 (regressionFit = 6,844640, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, intellig).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,824526 (regressionFit = 6,824523, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, solv).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,662857 (regressionFit = 6,662854, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, numer).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, august).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,639068 (regressionFit = 6,639065, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, advanc).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,700220 (regressionFit = 6,700217, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, network).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,740179 (regressionFit = 6,740176, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, event).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,688884 (regressionFit = 6,688880, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, mit).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,693239 (regressionFit = 6,693236, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, engin).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,691124 (regressionFit = 6,691121, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, partial).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,461956 (regressionFit = 6,461953, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, scienc).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,691766 (regressionFit = 6,691763, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, box).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,222258 (regressionFit = 6,222255, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, man).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,646779 (regressionFit = 6,646776, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, foundat).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,667081 (regressionFit = 6,667078, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, decemb).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,691766 (regressionFit = 6,691763, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, chang).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, washington).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, april).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,694121 (regressionFit = 6,694118, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, univers).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,688884 (regressionFit = 6,688880, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, review).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,560910 (regressionFit = 6,560907, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, laboratori).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,619231 (regressionFit = 6,619228, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, postscript).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, ieee).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,438274 (regressionFit = 6,438271, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, file).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,693115 (regressionFit = 6,693112, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, natur).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,698232 (regressionFit = 6,698229, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, extens).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,848944 (regressionFit = 6,848941, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, technologi).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,808045 (regressionFit = 6,808042, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, algorithm).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, behavior).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, figur).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,875055 (regressionFit = 6,875052, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, detail).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, san).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,693113 (regressionFit = 6,693110, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, task).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, high).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,694304 (regressionFit = 6,694301, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, semant).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,793196 (regressionFit = 6,793193, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, decision).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,688884 (regressionFit = 6,688880, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, press).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, perform).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, march).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,645074 (regressionFit = 6,645071, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, nation).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,777338 (regressionFit = 6,777335, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, control).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,236892 (regressionFit = 6,236889, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, gener).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,388818 (regressionFit = 6,388815, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, specif).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,867295 (regressionFit = 6,867292, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, vision).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,679531 (regressionFit = 6,679528, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, construct).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,480811 (regressionFit = 6,480808, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, comput).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, graph).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, proceed).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,760016 (regressionFit = 6,760013, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, simul).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,824989 (regressionFit = 6,824986, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, languag).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,662233 (regressionFit = 6,662230, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, journal).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,844305 (regressionFit = 6,844302, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, address).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,685375 (regressionFit = 6,685372, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, object).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, previou).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,673415 (regressionFit = 6,673412, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, knowledg).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, complex).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,275726 (regressionFit = 6,275723, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, thursdai).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,683801 (regressionFit = 6,683798, penalties=3.0500000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), has(B, human).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, refin).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,677460 (regressionFit = 6,677457, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, amp).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, de).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, june).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,673071 (regressionFit = 6,673068, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, dissert).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,455288 (regressionFit = 6,455285, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, work).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, statem).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,331440 (regressionFit = 6,331437, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, area).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, ca).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, step).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, basic).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,762306 (regressionFit = 6,762304, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, copi).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,675870 (regressionFit = 6,675867, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, integr).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,664755 (regressionFit = 6,664752, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, method).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,466036 (regressionFit = 6,466033, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, problem).  [covers 23,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,705650 (regressionFit = 6,705647, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, learn).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,670961 (regressionFit = 6,670958, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, space).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,733828 (regressionFit = 6,733825, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, book).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,679956 (regressionFit = 6,679953, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, constraint).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,649917 (regressionFit = 6,649914, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, discuss).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,767225 (regressionFit = 6,767222, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, artifici).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,673279 (regressionFit = 6,673276, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, logic).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, multipl).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,607190 (regressionFit = 6,607187, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, technic).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,664755 (regressionFit = 6,664752, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, compar).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,767225 (regressionFit = 6,767222, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, intellig).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, flow).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,713472 (regressionFit = 6,713469, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, present).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,322635 (regressionFit = 6,322632, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, advanc).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,671199 (regressionFit = 6,671196, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, issu).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,661117 (regressionFit = 6,661114, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, mit).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,769712 (regressionFit = 6,769709, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, automat).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,677934 (regressionFit = 6,677931, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, connect).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,777445 (regressionFit = 6,777442, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, continu).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,670821 (regressionFit = 6,670818, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, workshop).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,671873 (regressionFit = 6,671870, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, cc).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, novemb).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,679956 (regressionFit = 6,679953, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, scale).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,634867 (regressionFit = 6,634864, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, box).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, pp).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,829030 (regressionFit = 6,829027, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, recent).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,636659 (regressionFit = 6,636656, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, chang).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,670821 (regressionFit = 6,670818, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, washington).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,660529 (regressionFit = 6,660526, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, review).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,215183 (regressionFit = 6,215180, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, laboratori).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,348509 (regressionFit = 6,348506, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, cern).  [covers 33,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,475932 (regressionFit = 6,475929, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, file).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, industri).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,566705 (regressionFit = 6,566702, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, technologi).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,629442 (regressionFit = 6,629439, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, algorithm).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, master).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,679956 (regressionFit = 6,679953, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, behavior).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, san).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,661117 (regressionFit = 6,661114, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, principl).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,661117 (regressionFit = 6,661114, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, chapter).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,607190 (regressionFit = 6,607187, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, acm).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354026 (regressionFit = 6,354023, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, type).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,608096 (regressionFit = 6,608093, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, analysi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,654990 (regressionFit = 6,654987, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, read).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,225164 (regressionFit = 6,225161, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, texa).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,726932 (regressionFit = 6,726929, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, variabl).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,675599 (regressionFit = 6,675596, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, neural).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,293882 (regressionFit = 6,293879, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, inform).  [covers 23,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,709157 (regressionFit = 6,709154, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, nov).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,574262 (regressionFit = 6,574259, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, gener).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,607190 (regressionFit = 6,607187, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, york).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,632136 (regressionFit = 6,632133, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, construct).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,244487 (regressionFit = 6,244484, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, comput).  [covers 28,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,398074 (regressionFit = 6,398071, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, graph).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,778045 (regressionFit = 6,778043, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, applic).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,658202 (regressionFit = 6,658199, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, note).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,352394 (regressionFit = 6,352391, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, depart).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,678616 (regressionFit = 6,678614, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, editor).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354026 (regressionFit = 6,354023, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, content).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,348016 (regressionFit = 6,348013, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, journal).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,663224 (regressionFit = 6,663221, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, object).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,672403 (regressionFit = 6,672400, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, devic).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,679956 (regressionFit = 6,679953, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, complex).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,688125 (regressionFit = 6,688122, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, base).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,679375 (regressionFit = 6,679372, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, result).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,683637 (regressionFit = 6,683634, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, requir).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,699564 (regressionFit = 6,699561, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, user).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,429505 (regressionFit = 6,429502, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, group).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,685311 (regressionFit = 6,685308, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, graduat).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,493884 (regressionFit = 6,493881, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, professor).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,565914 (regressionFit = 6,565912, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, softwar).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,334222 (regressionFit = 6,334219, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, lab).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,690116 (regressionFit = 6,690113, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, explor).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,876649 (regressionFit = 6,876646, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, common).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,778953 (regressionFit = 6,778950, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, start).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,351959 (regressionFit = 6,351956, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, ph).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,683855 (regressionFit = 6,683852, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, rang).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,598177 (regressionFit = 6,598174, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, unit).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,690116 (regressionFit = 6,690113, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, art).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,573863 (regressionFit = 6,573860, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, phone).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,660784 (regressionFit = 6,660781, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, internet).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,695706 (regressionFit = 6,695703, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, map).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, mobil).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,447356 (regressionFit = 6,447353, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, www).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,479297 (regressionFit = 6,479294, penalties=2.9500000000000006E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), has(C, person).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,712216 (regressionFit = 6,712213, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,467692 (regressionFit = 6,467689, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,703160 (regressionFit = 6,703157, penalties=2.8300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), linkto(A, C).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,358491 (regressionFit = 6,358488, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), linkto(A, _).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,751943 (regressionFit = 6,751940, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,651964 (regressionFit = 6,651961, penalties=2.8300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), linkto(C, A).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,750763 (regressionFit = 6,750760, penalties=2.8300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), linkto(C, C).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,314606 (regressionFit = 6,314603, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), linkto(C, _).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,416762 (regressionFit = 6,416759, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), linkto(_, A).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,408391 (regressionFit = 6,408388, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,266294 (regressionFit = 6,266291, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(C, B), linkto(_, C).  [covers 34,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(B, A), linkto(C, B), linkto(_, C).  [covers 34,0/161,0 pos, 0,0/0,0 neg]' score=-6.266294068537343

% Consider expanding [#9 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(B, A), linkto(C, B), linkto(C, _).  [covers 37,0/161,0 pos, 0,0/0,0 neg]' score=-6.314606086557499

***** Warning: #43 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, professor).  [covers 13,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, professor).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
Setting 0.2556834972901415 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,77 and has recall=0,08, precision=0,99, and F1=0,15 (using m-estimates).
 // It covers 8,1% of the positive examples, 13 of 161 (of which 11 are newly covered),
 // So far 14 (8,7%) of the positive examples have been covered.
(faculty(D) :- has(D, professor))

% On cycle #2, the best clause found is:
%      faculty(A) :- has(A, professor).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 13 positive examples, of which 11 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 8,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #95 as the next seed: faculty(httpwwwcsutexaseduusersfussellturninghtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 49 items to OPEN for evaluation and possible insertion.
% Have created 49 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,854289 (regressionFit = 4,854288, penalties=1.03E-6) for clause:  faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,854289): faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,926734 (regressionFit = 4,926733, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,863172 (regressionFit = 4,863171, penalties=1.03E-6) for clause:  faculty(A) :- has(A, problem).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,927596 (regressionFit = 4,927595, penalties=1.03E-6) for clause:  faculty(A) :- has(A, architectur).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,927181 (regressionFit = 4,927180, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,816399 (regressionFit = 4,816398, penalties=1.03E-6) for clause:  faculty(A) :- has(A, user).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,816399): faculty(A) :- has(A, user).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,877629 (regressionFit = 4,877628, penalties=1.03E-6) for clause:  faculty(A) :- has(A, includ).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,922360 (regressionFit = 4,922359, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interfac).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,827634 (regressionFit = 4,827633, penalties=1.03E-6) for clause:  faculty(A) :- has(A, turn).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,928505 (regressionFit = 4,928504, penalties=1.03E-6) for clause:  faculty(A) :- has(A, electron).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,925870 (regressionFit = 4,925869, penalties=1.03E-6) for clause:  faculty(A) :- has(A, provid).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,862217 (regressionFit = 4,862216, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sourc).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,928499 (regressionFit = 4,928498, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oct).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,894068 (regressionFit = 4,894067, penalties=1.03E-6) for clause:  faculty(A) :- has(A, command).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,926734 (regressionFit = 4,926733, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,925376 (regressionFit = 4,925375, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,878221 (regressionFit = 4,878220, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,824591 (regressionFit = 4,824590, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,845972 (regressionFit = 4,845971, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sun).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,923736 (regressionFit = 4,923735, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,922538 (regressionFit = 4,922537, penalties=1.03E-6) for clause:  faculty(A) :- has(A, describ).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,900928 (regressionFit = 4,900927, penalties=1.03E-6) for clause:  faculty(A) :- has(A, man).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,867444 (regressionFit = 4,867443, penalties=1.03E-6) for clause:  faculty(A) :- has(A, check).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,892252 (regressionFit = 4,892251, penalties=1.03E-6) for clause:  faculty(A) :- has(A, state).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,888243 (regressionFit = 4,888242, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graph).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,820603 (regressionFit = 4,820602, penalties=1.03E-6) for clause:  faculty(A) :- has(A, descript).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,928513 (regressionFit = 4,928512, penalties=1.03E-6) for clause:  faculty(A) :- has(A, short).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,904657 (regressionFit = 4,904656, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,788268 (regressionFit = 4,788267, penalties=1.03E-6) for clause:  faculty(A) :- has(A, code).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,788268): faculty(A) :- has(A, code).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,928511 (regressionFit = 4,928510, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,847950 (regressionFit = 4,847949, penalties=1.03E-6) for clause:  faculty(A) :- has(A, submit).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,924609 (regressionFit = 4,924608, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,928361 (regressionFit = 4,928360, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,875982 (regressionFit = 4,875981, penalties=1.03E-6) for clause:  faculty(A) :- has(A, guid).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,755259 (regressionFit = 4,755258, penalties=1.03E-6) for clause:  faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,755259): faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,843561 (regressionFit = 4,843560, penalties=1.03E-6) for clause:  faculty(A) :- has(A, assign).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,822574 (regressionFit = 4,822573, penalties=1.03E-6) for clause:  faculty(A) :- has(A, call).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,915456 (regressionFit = 4,915455, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,102401 (regressionFit = 5,102400, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,038407 (regressionFit = 5,038406, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.915455545191606
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -4,925902 (regressionFit = 4,925900, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,923770 (regressionFit = 4,923767, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,866565 (regressionFit = 4,866563, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.866565421817587
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -4,973406 (regressionFit = 4,973403, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,968106 (regressionFit = 4,968103, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,867487 (regressionFit = 4,867484, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,838291 (regressionFit = 4,838288, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,853997 (regressionFit = 4,853994, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,815730 (regressionFit = 4,815727, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,938993 (regressionFit = 4,938990, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,835930 (regressionFit = 4,835928, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,855971 (regressionFit = 4,855968, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,846228 (regressionFit = 4,846225, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.81572968966259

% Consider expanding [#5 of outerLoop #3, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.835930430948879

% Consider expanding [#6 of outerLoop #3, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.846227735840775

% Consider expanding [#7 of outerLoop #3, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.85399657695672

% Consider expanding [#8 of outerLoop #3, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.855970957875158

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.923769502532545
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), r_faculty(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), department(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,819363 (regressionFit = 4,819360, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,914849 (regressionFit = 4,914846, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,937151 (regressionFit = 4,937148, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,988909 (regressionFit = 4,988906, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,938993 (regressionFit = 4,938990, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,900036 (regressionFit = 4,900034, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,936350 (regressionFit = 4,936347, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

***** Warning: #44 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
Setting -0.18360444877398796 for 
 // Learned this clause on outer loop cycle #3.  It scores=-4,76 and has recall=0,16, precision=1,00, and F1=0,27 (using m-estimates).
 // It covers 15,5% of the positive examples, 25 of 161 (of which 21 are newly covered),
 // So far 35 (21,7%) of the positive examples have been covered.
(faculty(D) :- has(D, make))

% On cycle #3, the best clause found is:
%      faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 25 positive examples, of which 21 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 21,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #55 as the next seed: faculty(httpwwwphutexasedu)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 39 items to OPEN for evaluation and possible insertion.
% Have created 39 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,507611 (regressionFit = 4,507610, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,507611): faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,918323 (regressionFit = 4,918322, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mon).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,927756 (regressionFit = 4,927755, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,846094 (regressionFit = 4,846093, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,911159 (regressionFit = 4,911158, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ncsa).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,935576 (regressionFit = 4,935575, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tx).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,934701 (regressionFit = 4,934700, penalties=1.03E-6) for clause:  faculty(A) :- has(A, colleg).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,937165 (regressionFit = 4,937164, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,877584 (regressionFit = 4,877583, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thu).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,934731 (regressionFit = 4,934730, penalties=1.03E-6) for clause:  faculty(A) :- has(A, undergradu).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,902929 (regressionFit = 4,902928, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,785239 (regressionFit = 4,785238, penalties=1.03E-6) for clause:  faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,935594 (regressionFit = 4,935593, penalties=1.03E-6) for clause:  faculty(A) :- has(A, natur).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,876181 (regressionFit = 4,876180, penalties=1.03E-6) for clause:  faculty(A) :- has(A, event).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,930745 (regressionFit = 4,930743, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,932792 (regressionFit = 4,932791, penalties=1.03E-6) for clause:  faculty(A) :- has(A, peopl).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,921595 (regressionFit = 4,921594, penalties=1.03E-6) for clause:  faculty(A) :- has(A, give).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,788048 (regressionFit = 4,788047, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,914956 (regressionFit = 4,914955, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,706090 (regressionFit = 4,706089, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,922514 (regressionFit = 4,922513, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graduat).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,937861 (regressionFit = 4,937860, penalties=1.03E-6) for clause:  faculty(A) :- has(A, physic).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,782506 (regressionFit = 4,782505, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,767518 (regressionFit = 4,767517, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,816881 (regressionFit = 4,816880, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,884757 (regressionFit = 4,884756, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,825475 (regressionFit = 4,825474, penalties=1.03E-6) for clause:  faculty(A) :- has(A, center).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,916283 (regressionFit = 4,916282, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,009617 (regressionFit = 5,009616, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,022304 (regressionFit = 5,022303, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.916283066021492
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -4,950150 (regressionFit = 4,950148, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,897966 (regressionFit = 4,897964, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,847531 (regressionFit = 4,847529, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.847531493361547
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -4,918886 (regressionFit = 4,918883, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,920362 (regressionFit = 4,920359, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,866640 (regressionFit = 4,866637, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,842272 (regressionFit = 4,842269, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,847476 (regressionFit = 4,847474, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,782436 (regressionFit = 4,782433, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,927678 (regressionFit = 4,927676, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,804529 (regressionFit = 4,804526, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,820225 (regressionFit = 4,820222, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,815938 (regressionFit = 4,815935, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.782435687741619

% Consider expanding [#5 of outerLoop #4, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.804528913723995

% Consider expanding [#6 of outerLoop #4, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.815938179932932

% Consider expanding [#7 of outerLoop #4, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.820225183270753

% Consider expanding [#8 of outerLoop #4, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.847476451049534

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.897965775272773
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), r_faculty(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), department(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,810050 (regressionFit = 4,810047, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,903639 (regressionFit = 4,903636, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,923049 (regressionFit = 4,923046, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,946930 (regressionFit = 4,946927, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,927678 (regressionFit = 4,927676, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,870662 (regressionFit = 4,870659, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,899892 (regressionFit = 4,899889, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

***** Warning: #45 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
Setting -0.007783226151995883 for 
 // Learned this clause on outer loop cycle #4.  It scores=-4,51 and has recall=0,35, precision=1,00, and F1=0,52 (using m-estimates).
 // It covers 34,8% of the positive examples, 56 of 161 (of which 39 are newly covered),
 // So far 74 (46,0%) of the positive examples have been covered.
(faculty(D) :- has(D, research))

% On cycle #4, the best clause found is:
%      faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 56 positive examples, of which 39 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 4 best clauses covers 46,0% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (4).

% ******************************************
adding regression values
Added 0.47624420994404343 to wgt = 0,4762 (faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B))
Added 0.2556834972901415 to wgt = 0,2557 (faculty(A) :- has(A, professor))
Added -0.18360444877398796 to wgt = -0,1836 (faculty(A) :- has(A, make))
Added -0.007783226151995883 to wgt = -0,0078 (faculty(A) :- has(A, research))
% Saving model in: datasets\MyWebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 5 trees is 18,768 seconds.

% Kept 10 of the 10 positive examples.
% Kept 151 of the 151 negative examples.
% Dataset size: 161
Computing probabilities
prob time:136 milliseconds
No hidden examples for : faculty
Time to build dataset: 137 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #49 as the next seed: faculty(httpwwwcsutexaseduusersqzuo)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 72 items to OPEN for evaluation and possible insertion.
% Have created 72 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,417058 (regressionFit = 6,417057, penalties=1.03E-6) for clause:  faculty(A) :- has(A, java).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,417058): faculty(A) :- has(A, java).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,239954 (regressionFit = 6,239953, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,239954): faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,115868 (regressionFit = 6,115867, penalties=1.03E-6) for clause:  faculty(A) :- has(A, institut).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,115868): faculty(A) :- has(A, institut).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,418891 (regressionFit = 6,418890, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,061737 (regressionFit = 6,061736, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,061737): faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,423983 (regressionFit = 6,423982, penalties=1.03E-6) for clause:  faculty(A) :- has(A, back).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,997327 (regressionFit = 5,997326, penalties=1.03E-6) for clause:  faculty(A) :- has(A, servic).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,997327): faculty(A) :- has(A, servic).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,388150 (regressionFit = 6,388149, penalties=1.03E-6) for clause:  faculty(A) :- has(A, suggest).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,075898 (regressionFit = 6,075897, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,371986 (regressionFit = 6,371985, penalties=1.03E-6) for clause:  faculty(A) :- has(A, book).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,393584 (regressionFit = 6,393583, penalties=1.03E-6) for clause:  faculty(A) :- has(A, point).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,418069 (regressionFit = 6,418068, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,405275 (regressionFit = 6,405274, penalties=1.03E-6) for clause:  faculty(A) :- has(A, leav).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,425587 (regressionFit = 6,425586, penalties=1.03E-6) for clause:  faculty(A) :- has(A, world).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,408823 (regressionFit = 6,408822, penalties=1.03E-6) for clause:  faculty(A) :- has(A, game).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,420798 (regressionFit = 6,420797, penalties=1.03E-6) for clause:  faculty(A) :- has(A, docum).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,362936 (regressionFit = 6,362935, penalties=1.03E-6) for clause:  faculty(A) :- has(A, refer).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,354206 (regressionFit = 6,354205, penalties=1.03E-6) for clause:  faculty(A) :- has(A, open).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,068722 (regressionFit = 6,068721, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,376928 (regressionFit = 6,376927, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cours).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,276212 (regressionFit = 6,276211, penalties=1.03E-6) for clause:  faculty(A) :- has(A, address).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,372525 (regressionFit = 6,372524, penalties=1.03E-6) for clause:  faculty(A) :- has(A, john).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,405609 (regressionFit = 6,405608, penalties=1.03E-6) for clause:  faculty(A) :- has(A, job).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,409571 (regressionFit = 6,409570, penalties=1.03E-6) for clause:  faculty(A) :- has(A, lt).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,278473 (regressionFit = 6,278472, penalties=1.03E-6) for clause:  faculty(A) :- has(A, languag).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,989535 (regressionFit = 5,989534, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,989535): faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,395908 (regressionFit = 6,395907, penalties=1.03E-6) for clause:  faculty(A) :- has(A, organ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,426530 (regressionFit = 6,426529, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thursdai).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,392333 (regressionFit = 6,392332, penalties=1.03E-6) for clause:  faculty(A) :- has(A, compani).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,409571 (regressionFit = 6,409570, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gt).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,344661 (regressionFit = 6,344660, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,351296 (regressionFit = 6,351295, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comment).  [covers 28,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,344067 (regressionFit = 6,344066, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graphic).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,406570 (regressionFit = 6,406569, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,196016 (regressionFit = 6,196015, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,353802 (regressionFit = 6,353801, penalties=1.03E-6) for clause:  faculty(A) :- has(A, net).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,417009 (regressionFit = 6,417008, penalties=1.03E-6) for clause:  faculty(A) :- has(A, visit).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,405439 (regressionFit = 6,405438, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,424987 (regressionFit = 6,424986, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tx).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,197329 (regressionFit = 6,197328, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,409960 (regressionFit = 6,409959, penalties=1.03E-6) for clause:  faculty(A) :- has(A, copyright).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,368242 (regressionFit = 6,368241, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,293613 (regressionFit = 6,293612, penalties=1.03E-6) for clause:  faculty(A) :- has(A, contact).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,383596 (regressionFit = 6,383595, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,396100 (regressionFit = 6,396099, penalties=1.03E-6) for clause:  faculty(A) :- has(A, master).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,422955 (regressionFit = 6,422954, penalties=1.03E-6) for clause:  faculty(A) :- has(A, start).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,424609 (regressionFit = 6,424608, penalties=1.03E-6) for clause:  faculty(A) :- has(A, introduct).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,416570 (regressionFit = 6,416569, penalties=1.03E-6) for clause:  faculty(A) :- has(A, time).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,427949 (regressionFit = 6,427948, penalties=1.03E-6) for clause:  faculty(A) :- has(A, free).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,427584 (regressionFit = 6,427583, penalties=1.03E-6) for clause:  faculty(A) :- has(A, write).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,131589 (regressionFit = 6,131588, penalties=1.03E-6) for clause:  faculty(A) :- has(A, technic).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,376566 (regressionFit = 6,376565, penalties=1.03E-6) for clause:  faculty(A) :- has(A, function).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,424983 (regressionFit = 6,424982, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,400986 (regressionFit = 6,400985, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,393663 (regressionFit = 6,393662, penalties=1.03E-6) for clause:  faculty(A) :- has(A, window).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,427993 (regressionFit = 6,427992, penalties=1.03E-6) for clause:  faculty(A) :- has(A, directori).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,406570 (regressionFit = 6,406569, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,330911 (regressionFit = 6,330910, penalties=1.03E-6) for clause:  faculty(A) :- has(A, click).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,419465 (regressionFit = 6,419464, penalties=1.03E-6) for clause:  faculty(A) :- has(A, unix).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,244436 (regressionFit = 6,244435, penalties=1.03E-6) for clause:  faculty(A) :- has(A, phone).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,325960 (regressionFit = 6,325959, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,536790 (regressionFit = 6,536789, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,355867 (regressionFit = 6,355866, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.325959729765116
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -6,329512 (regressionFit = 6,329510, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,305697 (regressionFit = 6,305695, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,329523 (regressionFit = 6,329521, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.305697383413968
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), r_faculty(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), department(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,873342 (regressionFit = 5,873339, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,873342): faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,325191 (regressionFit = 6,325188, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,275718 (regressionFit = 6,275715, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,254801 (regressionFit = 6,254798, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,327668 (regressionFit = 6,327665, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,329154 (regressionFit = 6,329151, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,327078 (regressionFit = 6,327075, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,329530 (regressionFit = 6,329527, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,288382 (regressionFit = 6,288379, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.254800608335341

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.288381861188001

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.32707756405554

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.327667914158983

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.329154311458602

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-6.329523006224775
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -5,867403 (regressionFit = 5,867400, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,867403): faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,026743 (regressionFit = 6,026740, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,328583 (regressionFit = 6,328580, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,326382 (regressionFit = 6,326379, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,329154 (regressionFit = 6,329151, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,328399 (regressionFit = 6,328396, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,325955 (regressionFit = 6,325952, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,317691 (regressionFit = 6,317688, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

***** Warning: #46 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
Setting 0.35773997936377727 for 
 // Learned this clause on outer loop cycle #1.  It scores=-5,87 and has recall=0,02, precision=0,97, and F1=0,04 (using m-estimates).
 // It covers 1,9% of the positive examples, 3 of 161,
(faculty(D) :- linkto(D, D), linkto(Anon40111, D), r_faculty(Anon40111))

% On cycle #1, the best clause found is:
%      faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 1,9% of the positive examples and NaN% of the negatives.}
% Have selected pos example #76 as the next seed: faculty(httpwwwcsutexaseduusershqliuinternethtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 55 items to OPEN for evaluation and possible insertion.
% Have created 55 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,849078 (regressionFit = 5,849077, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,849078): faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,788083 (regressionFit = 5,788082, penalties=1.03E-6) for clause:  faculty(A) :- has(A, web).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,788083): faculty(A) :- has(A, web).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,835409 (regressionFit = 5,835408, penalties=1.03E-6) for clause:  faculty(A) :- has(A, send).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,801059 (regressionFit = 5,801058, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,825839 (regressionFit = 5,825838, penalties=1.03E-6) for clause:  faculty(A) :- has(A, stuff).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,396472 (regressionFit = 5,396471, penalties=1.03E-6) for clause:  faculty(A) :- has(A, servic).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,396472): faculty(A) :- has(A, servic).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,708169 (regressionFit = 5,708168, penalties=1.03E-6) for clause:  faculty(A) :- has(A, center).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,841362 (regressionFit = 5,841361, penalties=1.03E-6) for clause:  faculty(A) :- has(A, point).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,854965 (regressionFit = 5,854964, penalties=1.03E-6) for clause:  faculty(A) :- has(A, societi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,852733 (regressionFit = 5,852732, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,867437 (regressionFit = 5,867436, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,808236 (regressionFit = 5,808235, penalties=1.03E-6) for clause:  faculty(A) :- has(A, net).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,850065 (regressionFit = 5,850064, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,861517 (regressionFit = 5,861516, penalties=1.03E-6) for clause:  faculty(A) :- has(A, http).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,864116 (regressionFit = 5,864115, penalties=1.03E-6) for clause:  faculty(A) :- has(A, common).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,004826 (regressionFit = 5,004825, penalties=1.03E-6) for clause:  faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,004826): faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,746906 (regressionFit = 5,746905, penalties=1.03E-6) for clause:  faculty(A) :- has(A, languag).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,866013 (regressionFit = 5,866012, penalties=1.03E-6) for clause:  faculty(A) :- has(A, start).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,813968 (regressionFit = 5,813967, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interfac).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,858344 (regressionFit = 5,858343, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tutori).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,855173 (regressionFit = 5,855172, penalties=1.03E-6) for clause:  faculty(A) :- has(A, defin).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,841577 (regressionFit = 5,841576, penalties=1.03E-6) for clause:  faculty(A) :- has(A, guid).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,855131 (regressionFit = 5,855130, penalties=1.03E-6) for clause:  faculty(A) :- has(A, netscap).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,801838 (regressionFit = 5,801837, penalties=1.03E-6) for clause:  faculty(A) :- has(A, email).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,865164 (regressionFit = 5,865163, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,842593 (regressionFit = 5,842592, penalties=1.03E-6) for clause:  faculty(A) :- has(A, faq).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,861092 (regressionFit = 5,861091, penalties=1.03E-6) for clause:  faculty(A) :- has(A, internet).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,797326 (regressionFit = 5,797325, penalties=1.03E-6) for clause:  faculty(A) :- has(A, site).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,860308 (regressionFit = 5,860307, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,841184 (regressionFit = 5,841183, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,843551 (regressionFit = 5,843550, penalties=1.03E-6) for clause:  faculty(A) :- has(A, wide).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,810735 (regressionFit = 5,810734, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comment).  [covers 28,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,860910 (regressionFit = 5,860909, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fridai).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,834061 (regressionFit = 5,834060, penalties=1.03E-6) for clause:  faculty(A) :- has(A, explor).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,848336 (regressionFit = 5,848335, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,838393 (regressionFit = 5,838392, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ncsa).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,616383 (regressionFit = 5,616382, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,856300 (regressionFit = 5,856299, penalties=1.03E-6) for clause:  faculty(A) :- has(A, protocol).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,825527 (regressionFit = 5,825526, penalties=1.03E-6) for clause:  faculty(A) :- has(A, www).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,852733 (regressionFit = 5,852732, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,850323 (regressionFit = 5,850322, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,688258 (regressionFit = 5,688257, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nov).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,827860 (regressionFit = 5,827859, penalties=1.03E-6) for clause:  faculty(A) :- has(A, intellig).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,867444 (regressionFit = 5,867443, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,045065 (regressionFit = 6,045064, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,885060 (regressionFit = 5,885059, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.867443969793355
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -5,862143 (regressionFit = 5,862141, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,882938 (regressionFit = 5,882936, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,821634 (regressionFit = 5,821632, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.821634468901548
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -5,867403 (regressionFit = 5,867400, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,872876 (regressionFit = 5,872873, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,815872 (regressionFit = 5,815869, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,792808 (regressionFit = 5,792805, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,807563 (regressionFit = 5,807560, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,786681 (regressionFit = 5,786678, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,862709 (regressionFit = 5,862706, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,810191 (regressionFit = 5,810188, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,793423 (regressionFit = 5,793420, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,776085 (regressionFit = 5,776082, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.776084703412987

% Consider expanding [#5 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.786681447921625

% Consider expanding [#6 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.7934228381043615

% Consider expanding [#7 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.807562935739939

% Consider expanding [#8 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.81019132988964

% Consider expanding [#9 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.862708564083247

***** Warning: #47 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
Setting 0.08511007554604876 for 
 // Learned this clause on outer loop cycle #2.  It scores=-5,00 and has recall=0,16, precision=1,00, and F1=0,27 (using m-estimates).
 // It covers 15,5% of the positive examples, 25 of 161,
 // So far 28 (17,4%) of the positive examples have been covered.
(faculty(D) :- has(D, area))

% On cycle #2, the best clause found is:
%      faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 25 positive examples, of which 25 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 17,4% of the positive examples and NaN% of the negatives.}
% Have selected pos example #36 as the next seed: faculty(httpwwwcsutexaseduusersnnpagesgeneraltoolsgeneraltoolshtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 41 items to OPEN for evaluation and possible insertion.
% Have created 41 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,287527 (regressionFit = 5,287526, penalties=1.03E-6) for clause:  faculty(A) :- has(A, applic).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,287527): faculty(A) :- has(A, applic).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,203874 (regressionFit = 5,203873, penalties=1.03E-6) for clause:  faculty(A) :- has(A, open).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,203874): faculty(A) :- has(A, open).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,274037 (regressionFit = 5,274036, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,205952 (regressionFit = 5,205951, penalties=1.03E-6) for clause:  faculty(A) :- has(A, web).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,218948 (regressionFit = 5,218947, penalties=1.03E-6) for clause:  faculty(A) :- has(A, express).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,265792 (regressionFit = 5,265791, penalties=1.03E-6) for clause:  faculty(A) :- has(A, travel).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,286415 (regressionFit = 5,286414, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,034775 (regressionFit = 5,034774, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tool).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,034775): faculty(A) :- has(A, tool).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,262597 (regressionFit = 5,262596, penalties=1.03E-6) for clause:  faculty(A) :- has(A, aug).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,281566 (regressionFit = 5,281565, penalties=1.03E-6) for clause:  faculty(A) :- has(A, network).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,245420 (regressionFit = 5,245419, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,286403 (regressionFit = 5,286402, penalties=1.03E-6) for clause:  faculty(A) :- has(A, databas).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,290927 (regressionFit = 5,290926, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,288772 (regressionFit = 5,288771, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,283534 (regressionFit = 5,283533, penalties=1.03E-6) for clause:  faculty(A) :- has(A, internet).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,288772 (regressionFit = 5,288771, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,251506 (regressionFit = 5,251505, penalties=1.03E-6) for clause:  faculty(A) :- has(A, onlin).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,291957 (regressionFit = 5,291956, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gener).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,233546 (regressionFit = 5,233545, penalties=1.03E-6) for clause:  faculty(A) :- has(A, librari).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,263185 (regressionFit = 5,263184, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293178 (regressionFit = 5,293177, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,291898 (regressionFit = 5,291897, penalties=1.03E-6) for clause:  faculty(A) :- has(A, abstract).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,285331 (regressionFit = 5,285330, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,271183 (regressionFit = 5,271182, penalties=1.03E-6) for clause:  faculty(A) :- has(A, index).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,119177 (regressionFit = 5,119176, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,287758 (regressionFit = 5,287757, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,292466 (regressionFit = 5,292465, penalties=1.03E-6) for clause:  faculty(A) :- has(A, neural).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,250086 (regressionFit = 5,250084, penalties=1.03E-6) for clause:  faculty(A) :- has(A, back).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,219315 (regressionFit = 5,219314, penalties=1.03E-6) for clause:  faculty(A) :- has(A, net).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293483 (regressionFit = 5,293482, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,499061 (regressionFit = 5,499060, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,326431 (regressionFit = 5,326430, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.293482968796916
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -5,279996 (regressionFit = 5,279994, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,308220 (regressionFit = 5,308218, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,238729 (regressionFit = 5,238727, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.238728609394549
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -5,278667 (regressionFit = 5,278664, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,280402 (regressionFit = 5,280399, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,224943 (regressionFit = 5,224940, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,199566 (regressionFit = 5,199563, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,219639 (regressionFit = 5,219636, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,197503 (regressionFit = 5,197500, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,280911 (regressionFit = 5,280908, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,222476 (regressionFit = 5,222474, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,205522 (regressionFit = 5,205519, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,185827 (regressionFit = 5,185824, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.185826705756069

% Consider expanding [#5 of outerLoop #3, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.197503211199473

% Consider expanding [#6 of outerLoop #3, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.205522050789666

% Consider expanding [#7 of outerLoop #3, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.219638500495891

% Consider expanding [#8 of outerLoop #3, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.222476441541966

% Consider expanding [#9 of outerLoop #3, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.280910985289787

***** Warning: #48 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, tool).  [covers 9,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, tool).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
Setting 0.06604639838103764 for 
 // Learned this clause on outer loop cycle #3.  It scores=-5,03 and has recall=0,06, precision=0,99, and F1=0,11 (using m-estimates).
 // It covers 5,6% of the positive examples, 9 of 161 (of which 7 are newly covered),
 // So far 35 (21,7%) of the positive examples have been covered.
(faculty(D) :- has(D, tool))

% On cycle #3, the best clause found is:
%      faculty(A) :- has(A, tool).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 9 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 21,7% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (3).

% ******************************************
adding regression values
Added 0.35773997936377727 to wgt = 0,3577 (faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B))
Added 0.08511007554604876 to wgt = 0,0851 (faculty(A) :- has(A, area))
Added 0.06604639838103764 to wgt = 0,0660 (faculty(A) :- has(A, tool))
% Saving model in: datasets\MyWebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 6 trees is 19,374 seconds.

% Kept 10 of the 10 positive examples.
% Kept 151 of the 151 negative examples.
% Dataset size: 161
Computing probabilities
prob time:155 milliseconds
No hidden examples for : faculty
Time to build dataset: 157 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #4 as the next seed: faculty(httpwwwcsutexaseduusersmisra)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 72 items to OPEN for evaluation and possible insertion.
% Have created 72 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,910356 (regressionFit = 4,910355, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ph).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,910356): faculty(A) :- has(A, ph).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,034803 (regressionFit = 6,034802, penalties=1.03E-6) for clause:  faculty(A) :- has(A, access).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,869969 (regressionFit = 5,869968, penalties=1.03E-6) for clause:  faculty(A) :- has(A, system).  [covers 47,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,027044 (regressionFit = 6,027043, penalties=1.03E-6) for clause:  faculty(A) :- has(A, overview).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,434125 (regressionFit = 5,434124, penalties=1.03E-6) for clause:  faculty(A) :- has(A, vol).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,183072 (regressionFit = 5,183071, penalties=1.03E-6) for clause:  faculty(A) :- has(A, public).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,023403 (regressionFit = 6,023402, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,017014 (regressionFit = 6,017013, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,626079 (regressionFit = 5,626078, penalties=1.03E-6) for clause:  faculty(A) :- has(A, servic).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,017014 (regressionFit = 6,017013, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,850204 (regressionFit = 5,850203, penalties=1.03E-6) for clause:  faculty(A) :- has(A, method).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,962985 (regressionFit = 5,962984, penalties=1.03E-6) for clause:  faculty(A) :- has(A, synchron).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,969861 (regressionFit = 5,969860, penalties=1.03E-6) for clause:  faculty(A) :- has(A, futur).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,445474 (regressionFit = 5,445473, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interest).  [covers 41,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,318758 (regressionFit = 5,318757, penalties=1.03E-6) for clause:  faculty(A) :- has(A, area).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,484908 (regressionFit = 5,484907, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,976031 (regressionFit = 5,976030, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,710560 (regressionFit = 5,710559, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,875121 (regressionFit = 5,875120, penalties=1.03E-6) for clause:  faculty(A) :- has(A, formal).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,863077 (regressionFit = 5,863076, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,561138 (regressionFit = 5,561137, penalties=1.03E-6) for clause:  faculty(A) :- has(A, equat).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,015147 (regressionFit = 6,015146, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,027121 (regressionFit = 6,027120, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gener).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,716647 (regressionFit = 5,716646, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,020626 (regressionFit = 6,020625, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fridai).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,026350 (regressionFit = 6,026349, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,983771 (regressionFit = 5,983770, penalties=1.03E-6) for clause:  faculty(A) :- has(A, john).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,492843 (regressionFit = 5,492842, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ieee).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,814783 (regressionFit = 5,814782, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,604302 (regressionFit = 5,604301, penalties=1.03E-6) for clause:  faculty(A) :- has(A, pp).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,636082 (regressionFit = 5,636081, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,601107 (regressionFit = 5,601106, penalties=1.03E-6) for clause:  faculty(A) :- has(A, award).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,891374 (regressionFit = 5,891373, penalties=1.03E-6) for clause:  faculty(A) :- has(A, design).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,021608 (regressionFit = 6,021607, penalties=1.03E-6) for clause:  faculty(A) :- has(A, apr).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,636494 (regressionFit = 5,636493, penalties=1.03E-6) for clause:  faculty(A) :- has(A, technologi).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,759954 (regressionFit = 5,759953, penalties=1.03E-6) for clause:  faculty(A) :- has(A, institut).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,472466 (regressionFit = 5,472465, penalties=1.03E-6) for clause:  faculty(A) :- has(A, recent).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,034066 (regressionFit = 6,034065, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,994030 (regressionFit = 5,994029, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,715896 (regressionFit = 5,715895, penalties=1.03E-6) for clause:  faculty(A) :- has(A, hall).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,981022 (regressionFit = 5,981021, penalties=1.03E-6) for clause:  faculty(A) :- has(A, specif).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,569422 (regressionFit = 5,569421, penalties=1.03E-6) for clause:  faculty(A) :- has(A, process).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,012066 (regressionFit = 6,012065, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,829955 (regressionFit = 5,829954, penalties=1.03E-6) for clause:  faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,888008 (regressionFit = 5,888007, penalties=1.03E-6) for clause:  faculty(A) :- has(A, foundat).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,034728 (regressionFit = 6,034727, penalties=1.03E-6) for clause:  faculty(A) :- has(A, reason).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,713335 (regressionFit = 5,713334, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,902525 (regressionFit = 5,902524, penalties=1.03E-6) for clause:  faculty(A) :- has(A, parallel).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,034734 (regressionFit = 6,034733, penalties=1.03E-6) for clause:  faculty(A) :- has(A, structur).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,805704 (regressionFit = 5,805703, penalties=1.03E-6) for clause:  faculty(A) :- has(A, januari).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,958387 (regressionFit = 5,958386, penalties=1.03E-6) for clause:  faculty(A) :- has(A, project).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,022700 (regressionFit = 6,022699, penalties=1.03E-6) for clause:  faculty(A) :- has(A, practic).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,998507 (regressionFit = 5,998506, penalties=1.03E-6) for clause:  faculty(A) :- has(A, letter).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,478637 (regressionFit = 4,478636, penalties=1.03E-6) for clause:  faculty(A) :- has(A, summari).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,478637): faculty(A) :- has(A, summari).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,478273 (regressionFit = 5,478272, penalties=1.03E-6) for clause:  faculty(A) :- has(A, current).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,818118 (regressionFit = 5,818117, penalties=1.03E-6) for clause:  faculty(A) :- has(A, acm).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,833450 (regressionFit = 5,833449, penalties=1.03E-6) for clause:  faculty(A) :- has(A, work).  [covers 45,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,034108 (regressionFit = 6,034107, penalties=1.03E-6) for clause:  faculty(A) :- has(A, electron).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,329727 (regressionFit = 5,329726, penalties=1.03E-6) for clause:  faculty(A) :- has(A, select).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,025472 (regressionFit = 6,025471, penalties=1.03E-6) for clause:  faculty(A) :- has(A, postscript).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,971559 (regressionFit = 5,971558, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,173161 (regressionFit = 6,173160, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,990111 (regressionFit = 5,990109, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.9715588866525176
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -5,967895 (regressionFit = 5,967893, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,967397 (regressionFit = 5,967395, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,966261 (regressionFit = 5,966259, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.966260633848922
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -5,642875 (regressionFit = 5,642872, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,759756 (regressionFit = 5,759753, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,962136 (regressionFit = 5,962133, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,956853 (regressionFit = 5,956850, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,959661 (regressionFit = 5,959658, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,966042 (regressionFit = 5,966039, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,965007 (regressionFit = 5,965004, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,969897 (regressionFit = 5,969894, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,957277 (regressionFit = 5,957274, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,944989 (regressionFit = 5,944986, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.94498864423626

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.957277221968336

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.959661277854433

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.965007220372931

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.966041831373588

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.967396556223521
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), r_faculty(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), department(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,611306 (regressionFit = 5,611304, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,971721 (regressionFit = 5,971718, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,953067 (regressionFit = 5,953064, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,939132 (regressionFit = 5,939129, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,965007 (regressionFit = 5,965004, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,971191 (regressionFit = 5,971188, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,959384 (regressionFit = 5,959381, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

***** Warning: #49 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, summari).  [covers 7,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, summari).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
Setting 0.3786784092210644 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,48 and has recall=0,04, precision=0,99, and F1=0,08 (using m-estimates).
 // It covers 4,3% of the positive examples, 7 of 161,
(faculty(D) :- has(D, summari))

% On cycle #1, the best clause found is:
%      faculty(A) :- has(A, summari).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 7 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 4,3% of the positive examples and NaN% of the negatives.}
% Have selected pos example #81 as the next seed: faculty(httpwwwcsutexaseduusersnovakcgixgcldemo)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 52 items to OPEN for evaluation and possible insertion.
% Have created 52 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,516597 (regressionFit = 4,516596, penalties=1.03E-6) for clause:  faculty(A) :- has(A, log).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,516597): faculty(A) :- has(A, log).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,547823 (regressionFit = 4,547822, penalties=1.03E-6) for clause:  faculty(A) :- has(A, common).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,550180 (regressionFit = 4,550179, penalties=1.03E-6) for clause:  faculty(A) :- has(A, present).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,550230 (regressionFit = 4,550229, penalties=1.03E-6) for clause:  faculty(A) :- has(A, start).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,518278 (regressionFit = 4,518277, penalties=1.03E-6) for clause:  faculty(A) :- has(A, chang).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,517439 (regressionFit = 4,517438, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,446753 (regressionFit = 4,446752, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graphic).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,446753): faculty(A) :- has(A, graphic).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,550215 (regressionFit = 4,550214, penalties=1.03E-6) for clause:  faculty(A) :- has(A, creat).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,141091 (regressionFit = 4,141090, penalties=1.03E-6) for clause:  faculty(A) :- has(A, public).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,141091): faculty(A) :- has(A, public).  [covers 30,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,545648 (regressionFit = 4,545647, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thing).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,491226 (regressionFit = 4,491225, penalties=1.03E-6) for clause:  faculty(A) :- has(A, option).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,543859 (regressionFit = 4,543858, penalties=1.03E-6) for clause:  faculty(A) :- has(A, displai).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,528132 (regressionFit = 4,528131, penalties=1.03E-6) for clause:  faculty(A) :- has(A, left).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,529376 (regressionFit = 4,529375, penalties=1.03E-6) for clause:  faculty(A) :- has(A, www).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,549310 (regressionFit = 4,549309, penalties=1.03E-6) for clause:  faculty(A) :- has(A, run).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, menu).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,528206 (regressionFit = 4,528205, penalties=1.03E-6) for clause:  faculty(A) :- has(A, shown).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,545854 (regressionFit = 4,545853, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,430810 (regressionFit = 4,430809, penalties=1.03E-6) for clause:  faculty(A) :- has(A, code).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,545139 (regressionFit = 4,545138, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interact).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,521656 (regressionFit = 4,521655, penalties=1.03E-6) for clause:  faculty(A) :- has(A, write).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,542493 (regressionFit = 4,542492, penalties=1.03E-6) for clause:  faculty(A) :- has(A, simpl).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,424720 (regressionFit = 4,424719, penalties=1.03E-6) for clause:  faculty(A) :- has(A, softwar).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,314334 (regressionFit = 4,314333, penalties=1.03E-6) for clause:  faculty(A) :- has(A, lisp).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,497974 (regressionFit = 4,497973, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interfac).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,462966 (regressionFit = 4,462965, penalties=1.03E-6) for clause:  faculty(A) :- has(A, click).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,533906 (regressionFit = 4,533905, penalties=1.03E-6) for clause:  faculty(A) :- has(A, demonstr).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,547612 (regressionFit = 4,547611, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ftp).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,549888 (regressionFit = 4,549887, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gener).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,368842 (regressionFit = 4,368841, penalties=1.03E-6) for clause:  faculty(A) :- has(A, select).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,547256 (regressionFit = 4,547255, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,513251 (regressionFit = 4,513250, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,517439 (regressionFit = 4,517438, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,533181 (regressionFit = 4,533180, penalties=1.03E-6) for clause:  faculty(A) :- has(A, box).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,530333 (regressionFit = 4,530332, penalties=1.03E-6) for clause:  faculty(A) :- has(A, enter).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,530532 (regressionFit = 4,530531, penalties=1.03E-6) for clause:  faculty(A) :- has(A, instruct).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,548766 (regressionFit = 4,548765, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,528619 (regressionFit = 4,528618, penalties=1.03E-6) for clause:  faculty(A) :- has(A, window).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,549761 (regressionFit = 4,549760, penalties=1.03E-6) for clause:  faculty(A) :- has(A, free).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,490536 (regressionFit = 4,490535, penalties=1.03E-6) for clause:  faculty(A) :- has(A, time).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,457033 (regressionFit = 4,457032, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,682737 (regressionFit = 4,682736, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,549499 (regressionFit = 4,549498, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.457032552589969
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -4,453368 (regressionFit = 4,453366, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,452870 (regressionFit = 4,452868, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,451734 (regressionFit = 4,451732, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.451734299786373
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -4,152256 (regressionFit = 4,152253, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,264842 (regressionFit = 4,264839, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,447610 (regressionFit = 4,447607, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,442327 (regressionFit = 4,442324, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,445135 (regressionFit = 4,445132, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,451515 (regressionFit = 4,451512, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,450481 (regressionFit = 4,450478, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,455371 (regressionFit = 4,455368, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,442751 (regressionFit = 4,442748, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,430462 (regressionFit = 4,430459, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.430462310173712

% Consider expanding [#5 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.442750887905787

% Consider expanding [#6 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.445134943791884

% Consider expanding [#7 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.450480886310383

% Consider expanding [#8 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.45151549731104

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-4.452870222160973
%  At # nodes expanded = 9, |OPEN| = 4.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), r_faculty(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), department(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,130452 (regressionFit = 4,130449, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,130452): faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,457194 (regressionFit = 4,457191, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,438541 (regressionFit = 4,438538, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,424606 (regressionFit = 4,424603, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,450481 (regressionFit = 4,450478, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,456665 (regressionFit = 4,456662, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,444858 (regressionFit = 4,444855, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

***** Warning: #50 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
Setting 0.29738556726397936 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,13 and has recall=0,02, precision=0,97, and F1=0,04 (using m-estimates).
 // It covers 1,9% of the positive examples, 3 of 161,
 // So far 10 (6,2%) of the positive examples have been covered.
(faculty(D) :- linkto(D, D), linkto(D, Anon42361), person(Anon42361))

% On cycle #2, the best clause found is:
%      faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 6,2% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.3786784092210644 to wgt = 0,3787 (faculty(A) :- has(A, summari))
Added 0.29738556726397936 to wgt = 0,2974 (faculty(A) :- linkto(A, A), linkto(A, B), person(B))
% Saving model in: datasets\MyWebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 7 trees is 19,979 seconds.

% Kept 10 of the 10 positive examples.
% Kept 151 of the 151 negative examples.
% Dataset size: 161
Computing probabilities
prob time:195 milliseconds
No hidden examples for : faculty
Time to build dataset: 196 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #95 as the next seed: faculty(httpwwwcsutexaseduusersfussellturninghtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 49 items to OPEN for evaluation and possible insertion.
% Have created 49 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,335368 (regressionFit = 5,335367, penalties=1.03E-6) for clause:  faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,335368): faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,387389 (regressionFit = 5,387388, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,400136 (regressionFit = 5,400135, penalties=1.03E-6) for clause:  faculty(A) :- has(A, problem).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,382656 (regressionFit = 5,382655, penalties=1.03E-6) for clause:  faculty(A) :- has(A, architectur).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,398024 (regressionFit = 5,398023, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,399560 (regressionFit = 5,399559, penalties=1.03E-6) for clause:  faculty(A) :- has(A, user).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,219295 (regressionFit = 5,219294, penalties=1.03E-6) for clause:  faculty(A) :- has(A, includ).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,219295): faculty(A) :- has(A, includ).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,342963 (regressionFit = 5,342962, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interfac).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,371225 (regressionFit = 5,371224, penalties=1.03E-6) for clause:  faculty(A) :- has(A, turn).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,404295 (regressionFit = 5,404294, penalties=1.03E-6) for clause:  faculty(A) :- has(A, electron).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,403563 (regressionFit = 5,403562, penalties=1.03E-6) for clause:  faculty(A) :- has(A, provid).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,369286 (regressionFit = 5,369285, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sourc).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,404952 (regressionFit = 5,404951, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oct).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,390274 (regressionFit = 5,390273, penalties=1.03E-6) for clause:  faculty(A) :- has(A, command).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,387389 (regressionFit = 5,387388, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,382789 (regressionFit = 5,382788, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,268657 (regressionFit = 5,268656, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,113660 (regressionFit = 5,113659, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,113660): faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,382358 (regressionFit = 5,382357, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sun).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,388305 (regressionFit = 5,388304, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,384635 (regressionFit = 5,384634, penalties=1.03E-6) for clause:  faculty(A) :- has(A, describ).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,373710 (regressionFit = 5,373709, penalties=1.03E-6) for clause:  faculty(A) :- has(A, man).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,379303 (regressionFit = 5,379302, penalties=1.03E-6) for clause:  faculty(A) :- has(A, check).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,402026 (regressionFit = 5,402025, penalties=1.03E-6) for clause:  faculty(A) :- has(A, state).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,389699 (regressionFit = 5,389698, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graph).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,375173 (regressionFit = 5,375172, penalties=1.03E-6) for clause:  faculty(A) :- has(A, descript).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,404647 (regressionFit = 5,404646, penalties=1.03E-6) for clause:  faculty(A) :- has(A, short).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,365814 (regressionFit = 5,365813, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,339551 (regressionFit = 5,339550, penalties=1.03E-6) for clause:  faculty(A) :- has(A, code).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,402179 (regressionFit = 5,402178, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,379536 (regressionFit = 5,379535, penalties=1.03E-6) for clause:  faculty(A) :- has(A, submit).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,395319 (regressionFit = 5,395318, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,391062 (regressionFit = 5,391061, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,374998 (regressionFit = 5,374997, penalties=1.03E-6) for clause:  faculty(A) :- has(A, guid).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,343710 (regressionFit = 5,343709, penalties=1.03E-6) for clause:  faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,362342 (regressionFit = 5,362340, penalties=1.03E-6) for clause:  faculty(A) :- has(A, assign).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,356960 (regressionFit = 5,356959, penalties=1.03E-6) for clause:  faculty(A) :- has(A, call).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,362966 (regressionFit = 5,362965, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,558389 (regressionFit = 5,558388, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,380639 (regressionFit = 5,380638, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.362965857243905
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -5,355570 (regressionFit = 5,355568, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,368426 (regressionFit = 5,368424, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,353712 (regressionFit = 5,353710, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.353712038180106
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -5,107958 (regressionFit = 5,107955, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,107958): faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,218022 (regressionFit = 5,218019, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,347786 (regressionFit = 5,347783, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,341870 (regressionFit = 5,341867, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,345401 (regressionFit = 5,345398, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,355554 (regressionFit = 5,355550, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,352108 (regressionFit = 5,352105, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,360716 (regressionFit = 5,360714, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,344805 (regressionFit = 5,344802, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,331999 (regressionFit = 5,331997, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.3319994431196625

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.344805461862518

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.345400823929285

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.35210798047316

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.355553517312464

% Consider expanding [#9 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.360716441788548

***** Warning: #51 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
Setting 0.23616063713471092 for 
 // Learned this clause on outer loop cycle #1.  It scores=-5,11 and has recall=0,02, precision=0,97, and F1=0,04 (using m-estimates).
 // It covers 1,9% of the positive examples, 3 of 161,
(faculty(D) :- linkto(D, D), linkto(Anon42983, D), r_faculty(Anon42983))

% On cycle #1, the best clause found is:
%      faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 1,9% of the positive examples and NaN% of the negatives.}
% Have selected pos example #152 as the next seed: faculty(httpwwwcsutexaseduusersclancynetscapehotlisthtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 80 items to OPEN for evaluation and possible insertion.
% Have created 80 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,100714 (regressionFit = 5,100713, penalties=1.03E-6) for clause:  faculty(A) :- has(A, user).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,100714): faculty(A) :- has(A, user).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,779369 (regressionFit = 4,779368, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,779369): faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,112203 (regressionFit = 5,112202, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,896773 (regressionFit = 4,896772, penalties=1.03E-6) for clause:  faculty(A) :- has(A, group).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,607073 (regressionFit = 4,607072, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,607073): faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,096495 (regressionFit = 5,096494, penalties=1.03E-6) for clause:  faculty(A) :- has(A, intern).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,098672 (regressionFit = 5,098671, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,082163 (regressionFit = 5,082162, penalties=1.03E-6) for clause:  faculty(A) :- has(A, review).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,107822 (regressionFit = 5,107821, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,047837 (regressionFit = 5,047836, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,850314 (regressionFit = 4,850313, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 70,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,050914 (regressionFit = 5,050913, penalties=1.03E-6) for clause:  faculty(A) :- has(A, site).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,087688 (regressionFit = 5,087687, penalties=1.03E-6) for clause:  faculty(A) :- has(A, guid).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,937591 (regressionFit = 4,937590, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,076464 (regressionFit = 5,076463, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graphic).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,029938 (regressionFit = 5,029937, penalties=1.03E-6) for clause:  faculty(A) :- has(A, project).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,098737 (regressionFit = 5,098736, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,106823 (regressionFit = 5,106822, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,090538 (regressionFit = 5,090537, penalties=1.03E-6) for clause:  faculty(A) :- has(A, virtual).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,101602 (regressionFit = 5,101601, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ai).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,073977 (regressionFit = 5,073976, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,098846 (regressionFit = 5,098845, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dr).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,891461 (regressionFit = 4,891460, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,094858 (regressionFit = 5,094857, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,104582 (regressionFit = 5,104581, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ftp).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,096877 (regressionFit = 5,096876, penalties=1.03E-6) for clause:  faculty(A) :- has(A, apr).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,104983 (regressionFit = 5,104982, penalties=1.03E-6) for clause:  faculty(A) :- has(A, archiv).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,101223 (regressionFit = 5,101222, penalties=1.03E-6) for clause:  faculty(A) :- has(A, citi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,082469 (regressionFit = 5,082468, penalties=1.03E-6) for clause:  faculty(A) :- has(A, washington).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,110826 (regressionFit = 5,110825, penalties=1.03E-6) for clause:  faculty(A) :- has(A, qualit).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,071126 (regressionFit = 5,071125, penalties=1.03E-6) for clause:  faculty(A) :- has(A, usa).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,024350 (regressionFit = 5,024349, penalties=1.03E-6) for clause:  faculty(A) :- has(A, data).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,094807 (regressionFit = 5,094806, penalties=1.03E-6) for clause:  faculty(A) :- has(A, limit).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,095431 (regressionFit = 5,095430, penalties=1.03E-6) for clause:  faculty(A) :- has(A, time).  [covers 46,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,097280 (regressionFit = 5,097279, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,111906 (regressionFit = 5,111905, penalties=1.03E-6) for clause:  faculty(A) :- has(A, natur).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,105210 (regressionFit = 5,105209, penalties=1.03E-6) for clause:  faculty(A) :- has(A, document).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, menu).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,001549 (regressionFit = 5,001548, penalties=1.03E-6) for clause:  faculty(A) :- has(A, workshop).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,096936 (regressionFit = 5,096935, penalties=1.03E-6) for clause:  faculty(A) :- has(A, info).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,857492 (regressionFit = 4,857491, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,081329 (regressionFit = 5,081328, penalties=1.03E-6) for clause:  faculty(A) :- has(A, laboratori).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,081695 (regressionFit = 5,081694, penalties=1.03E-6) for clause:  faculty(A) :- has(A, music).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,076945 (regressionFit = 5,076944, penalties=1.03E-6) for clause:  faculty(A) :- has(A, www).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,098737 (regressionFit = 5,098736, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,110162 (regressionFit = 5,110161, penalties=1.03E-6) for clause:  faculty(A) :- has(A, electron).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,032078 (regressionFit = 5,032077, penalties=1.03E-6) for clause:  faculty(A) :- has(A, web).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,982417 (regressionFit = 4,982416, penalties=1.03E-6) for clause:  faculty(A) :- has(A, center).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,111499 (regressionFit = 5,111498, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mar).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,056876 (regressionFit = 5,056875, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,103806 (regressionFit = 5,103805, penalties=1.03E-6) for clause:  faculty(A) :- has(A, internet).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,084722 (regressionFit = 5,084721, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,104942 (regressionFit = 5,104941, penalties=1.03E-6) for clause:  faculty(A) :- has(A, directori).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,921795 (regressionFit = 4,921794, penalties=1.03E-6) for clause:  faculty(A) :- has(A, softwar).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,108219 (regressionFit = 5,108218, penalties=1.03E-6) for clause:  faculty(A) :- has(A, colleg).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,093522 (regressionFit = 5,093521, penalties=1.03E-6) for clause:  faculty(A) :- has(A, util).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,101606 (regressionFit = 5,101605, penalties=1.03E-6) for clause:  faculty(A) :- has(A, introduct).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,087671 (regressionFit = 5,087670, penalties=1.03E-6) for clause:  faculty(A) :- has(A, great).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,112056 (regressionFit = 5,112055, penalties=1.03E-6) for clause:  faculty(A) :- has(A, reason).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,083498 (regressionFit = 5,083497, penalties=1.03E-6) for clause:  faculty(A) :- has(A, faq).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,109079 (regressionFit = 5,109078, penalties=1.03E-6) for clause:  faculty(A) :- has(A, http).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,099504 (regressionFit = 5,099503, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tx).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,094829 (regressionFit = 5,094828, penalties=1.03E-6) for clause:  faculty(A) :- has(A, index).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,086821 (regressionFit = 5,086820, penalties=1.03E-6) for clause:  faculty(A) :- has(A, main).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,112203 (regressionFit = 5,112202, penalties=1.03E-6) for clause:  faculty(A) :- has(A, retriev).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,108916 (regressionFit = 5,108915, penalties=1.03E-6) for clause:  faculty(A) :- has(A, microsoft).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,088909 (regressionFit = 5,088908, penalties=1.03E-6) for clause:  faculty(A) :- has(A, onlin).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,091610 (regressionFit = 5,091609, penalties=1.03E-6) for clause:  faculty(A) :- has(A, connect).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,112059 (regressionFit = 5,112058, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,299121 (regressionFit = 5,299120, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,143559 (regressionFit = 5,143558, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.11205908605463
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -5,106402 (regressionFit = 5,106400, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,134950 (regressionFit = 5,134948, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,077614 (regressionFit = 5,077612, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.077613581898938
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -5,107958 (regressionFit = 5,107955, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,123715 (regressionFit = 5,123712, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,070620 (regressionFit = 5,070617, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,053589 (regressionFit = 5,053586, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,065212 (regressionFit = 5,065210, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,060558 (regressionFit = 5,060554, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,108035 (regressionFit = 5,108033, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,076196 (regressionFit = 5,076193, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,062814 (regressionFit = 5,062811, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,048282 (regressionFit = 5,048280, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.048282487574253

% Consider expanding [#5 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.060557527739019

% Consider expanding [#6 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.062814227167934

% Consider expanding [#7 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.065212421996987

% Consider expanding [#8 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.076196328688662

% Consider expanding [#9 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.108035454059539

***** Warning: #52 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
Setting -0.01403651063648549 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,61 and has recall=0,35, precision=1,00, and F1=0,52 (using m-estimates).
 // It covers 34,8% of the positive examples, 56 of 161 (of which 55 are newly covered),
 // So far 58 (36,0%) of the positive examples have been covered.
(faculty(D) :- has(D, research))

% On cycle #2, the best clause found is:
%      faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 56 positive examples, of which 55 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 36,0% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.23616063713471092 to wgt = 0,2362 (faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B))
Added -0.01403651063648549 to wgt = -0,0140 (faculty(A) :- has(A, research))
% Saving model in: datasets\MyWebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 8 trees is 20,758 seconds.

% Kept 10 of the 10 positive examples.
% Kept 151 of the 151 negative examples.
% Dataset size: 161
Computing probabilities
prob time:339 milliseconds
No hidden examples for : faculty
Time to build dataset: 341 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #66 as the next seed: faculty(httpwwwhostccutexaseduworld)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 53 items to OPEN for evaluation and possible insertion.
% Have created 53 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,324934 (regressionFit = 5,324932, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,324934): faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,324767 (regressionFit = 5,324766, penalties=1.03E-6) for clause:  faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,324767): faculty(A) :- has(A, dec).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,317550 (regressionFit = 5,317549, penalties=1.03E-6) for clause:  faculty(A) :- has(A, societi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,317550): faculty(A) :- has(A, societi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,331578 (regressionFit = 5,331577, penalties=1.03E-6) for clause:  faculty(A) :- has(A, link).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,330963 (regressionFit = 5,330962, penalties=1.03E-6) for clause:  faculty(A) :- has(A, academ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,814538 (regressionFit = 4,814537, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,814538): faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,275357 (regressionFit = 5,275356, penalties=1.03E-6) for clause:  faculty(A) :- has(A, web).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,299289 (regressionFit = 5,299288, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ncsa).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,331158 (regressionFit = 5,331157, penalties=1.03E-6) for clause:  faculty(A) :- has(A, search).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,315337 (regressionFit = 5,315336, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,259429 (regressionFit = 5,259428, penalties=1.03E-6) for clause:  faculty(A) :- has(A, student).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,302078 (regressionFit = 5,302077, penalties=1.03E-6) for clause:  faculty(A) :- has(A, www).  [covers 35,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293357 (regressionFit = 5,293356, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fri).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,136970 (regressionFit = 5,136969, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 68,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,271223 (regressionFit = 5,271222, penalties=1.03E-6) for clause:  faculty(A) :- has(A, usa).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,329918 (regressionFit = 5,329917, penalties=1.03E-6) for clause:  faculty(A) :- has(A, world).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,329050 (regressionFit = 5,329049, penalties=1.03E-6) for clause:  faculty(A) :- has(A, colleg).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,268392 (regressionFit = 5,268391, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comment).  [covers 28,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,256884 (regressionFit = 5,256883, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,321555 (regressionFit = 5,321554, penalties=1.03E-6) for clause:  faculty(A) :- has(A, person).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,918888 (regressionFit = 4,918887, penalties=1.03E-6) for clause:  faculty(A) :- has(A, associ).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,312389 (regressionFit = 5,312388, penalties=1.03E-6) for clause:  faculty(A) :- has(A, job).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,320346 (regressionFit = 5,320345, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,980927 (regressionFit = 4,980926, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,292659 (regressionFit = 5,292658, penalties=1.03E-6) for clause:  faculty(A) :- has(A, good).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,177922 (regressionFit = 5,177921, penalties=1.03E-6) for clause:  faculty(A) :- has(A, decemb).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,319037 (regressionFit = 5,319036, penalties=1.03E-6) for clause:  faculty(A) :- has(A, citi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,290478 (regressionFit = 5,290477, penalties=1.03E-6) for clause:  faculty(A) :- has(A, commun).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,324718 (regressionFit = 5,324717, penalties=1.03E-6) for clause:  faculty(A) :- has(A, multimedia).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,307466 (regressionFit = 5,307465, penalties=1.03E-6) for clause:  faculty(A) :- has(A, amp).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,073580 (regressionFit = 5,073579, penalties=1.03E-6) for clause:  faculty(A) :- has(A, lectur).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,277628 (regressionFit = 5,277627, penalties=1.03E-6) for clause:  faculty(A) :- has(A, book).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,313586 (regressionFit = 5,313585, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tue).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,327819 (regressionFit = 5,327818, penalties=1.03E-6) for clause:  faculty(A) :- has(A, state).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,310346 (regressionFit = 5,310345, penalties=1.03E-6) for clause:  faculty(A) :- has(A, index).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,306846 (regressionFit = 5,306845, penalties=1.03E-6) for clause:  faculty(A) :- has(A, virtual).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,277289 (regressionFit = 5,277288, penalties=1.03E-6) for clause:  faculty(A) :- has(A, librari).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,330429 (regressionFit = 5,330428, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,049704 (regressionFit = 5,049703, penalties=1.03E-6) for clause:  faculty(A) :- has(A, hall).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,054230 (regressionFit = 5,054229, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 72,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,284755 (regressionFit = 5,284754, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ut).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,305858 (regressionFit = 5,305857, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,494138 (regressionFit = 5,494137, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,320149 (regressionFit = 5,320148, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.305858219087053
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 52 items to OPEN for evaluation and possible insertion.
% Have created 52 valid-on-seeds descendants.
%     Score = -5,297100 (regressionFit = 5,297098, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,305859 (regressionFit = 5,305857, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, text).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,297064 (regressionFit = 5,297062, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, length).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,279759 (regressionFit = 5,279757, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, dec).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, societi).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,305859 (regressionFit = 5,305857, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, type).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,305859 (regressionFit = 5,305857, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, content).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,319928 (regressionFit = 5,319926, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, link).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, academ).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,298387 (regressionFit = 5,298385, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, research).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,318473 (regressionFit = 5,318471, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, web).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,327821 (regressionFit = 5,327819, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, ncsa).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, search).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,297064 (regressionFit = 5,297062, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, modifi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,327741 (regressionFit = 5,327739, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, student).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,317423 (regressionFit = 5,317421, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, www).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, fri).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,297064 (regressionFit = 5,297062, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, jan).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,233838 (regressionFit = 5,233836, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, texa).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, usa).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, world).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, colleg).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,305859 (regressionFit = 5,305857, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, date).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,305859 (regressionFit = 5,305857, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, gmt).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,326674 (regressionFit = 5,326672, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, comment).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,260682 (regressionFit = 5,260680, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, austin).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, person).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,317303 (regressionFit = 5,317301, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, associ).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, job).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,320094 (regressionFit = 5,320092, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, page).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,233838 (regressionFit = 5,233836, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, comput).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, good).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, decemb).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, citi).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, commun).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, multimedia).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,305859 (regressionFit = 5,305857, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, server).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, amp).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,305859 (regressionFit = 5,305857, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, html).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,327538 (regressionFit = 5,327536, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, lectur).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,320996 (regressionFit = 5,320994, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, book).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, tue).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,278728 (regressionFit = 5,278726, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, state).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, index).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, virtual).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, librari).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,295506 (regressionFit = 5,295504, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, utexa).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,279759 (regressionFit = 5,279757, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, hall).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,233838 (regressionFit = 5,233836, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, univers).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, ut).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,318025 (regressionFit = 5,318023, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293458 (regressionFit = 5,293456, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.293457668551073
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 138 items to OPEN for evaluation and possible insertion.
% Have created 138 valid-on-seeds descendants.
%     Score = -5,121105 (regressionFit = 5,121102, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,204523 (regressionFit = 5,204520, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,286820 (regressionFit = 5,286817, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,279409 (regressionFit = 5,279406, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, text).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,283114 (regressionFit = 5,283111, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, length).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,375820 (regressionFit = 5,375817, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, dec).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, societi).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, type).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, content).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,332190 (regressionFit = 5,332187, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, link).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, academ).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,292069 (regressionFit = 5,292066, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, research).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,330297 (regressionFit = 5,330294, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, web).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,415926 (regressionFit = 5,415923, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, ncsa).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, search).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,283114 (regressionFit = 5,283111, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, modifi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,402886 (regressionFit = 5,402883, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, student).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,414352 (regressionFit = 5,414349, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, www).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, fri).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,283114 (regressionFit = 5,283111, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, jan).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,238553 (regressionFit = 5,238550, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, texa).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, usa).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, world).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, colleg).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, date).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, gmt).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,415908 (regressionFit = 5,415905, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, comment).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,259367 (regressionFit = 5,259364, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, austin).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, person).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,306053 (regressionFit = 5,306050, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, associ).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, job).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,412850 (regressionFit = 5,412847, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, page).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,238553 (regressionFit = 5,238550, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, comput).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, good).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, decemb).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, citi).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, commun).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, multimedia).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, server).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, amp).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, html).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,405702 (regressionFit = 5,405699, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, lectur).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,400198 (regressionFit = 5,400195, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, book).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, tue).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,270747 (regressionFit = 5,270744, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, state).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, index).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, virtual).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, librari).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,284040 (regressionFit = 5,284037, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, utexa).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,375820 (regressionFit = 5,375817, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, hall).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,238553 (regressionFit = 5,238550, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, univers).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, ut).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, text).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,286285 (regressionFit = 5,286282, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, length).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,376852 (regressionFit = 5,376849, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, dec).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, societi).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, type).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, content).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,321749 (regressionFit = 5,321746, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, link).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,410873 (regressionFit = 5,410870, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, academ).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,322793 (regressionFit = 5,322790, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, research).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,318732 (regressionFit = 5,318729, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, web).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,406460 (regressionFit = 5,406457, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, ncsa).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, search).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,260281 (regressionFit = 5,260278, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, modifi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,402886 (regressionFit = 5,402883, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, student).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,323964 (regressionFit = 5,323961, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, www).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,420628 (regressionFit = 5,420625, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, fri).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,283114 (regressionFit = 5,283111, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, jan).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,268512 (regressionFit = 5,268509, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, texa).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,297223 (regressionFit = 5,297220, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, usa).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,406485 (regressionFit = 5,406483, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, world).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, colleg).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, date).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, gmt).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,406290 (regressionFit = 5,406287, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, comment).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,256236 (regressionFit = 5,256233, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, austin).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, person).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,313604 (regressionFit = 5,313601, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, associ).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, job).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,397277 (regressionFit = 5,397274, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, page).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,265682 (regressionFit = 5,265679, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, comput).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, good).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,376852 (regressionFit = 5,376849, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, decemb).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, citi).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, commun).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, multimedia).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, server).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, amp).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293459 (regressionFit = 5,293456, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, html).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,396036 (regressionFit = 5,396033, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, lectur).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,408524 (regressionFit = 5,408521, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, book).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, tue).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,318733 (regressionFit = 5,318731, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, state).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, index).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, virtual).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, librari).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,302270 (regressionFit = 5,302267, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, utexa).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,406395 (regressionFit = 5,406392, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, hall).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,268512 (regressionFit = 5,268509, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, univers).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,410873 (regressionFit = 5,410870, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, ut).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, account).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, print).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, train).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, archiv).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,397742 (regressionFit = 5,397739, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, resourc).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, learn).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,401506 (regressionFit = 5,401504, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, committe).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, facil).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, access).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, provid).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, hardwar).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,396542 (regressionFit = 5,396539, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, lab).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,407168 (regressionFit = 5,407165, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, docum).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,244315 (regressionFit = 5,244312, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, inform).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, cc).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,379204 (regressionFit = 5,379201, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, list).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, polici).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, store).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,411913 (regressionFit = 5,411910, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, mail).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,401506 (regressionFit = 5,401504, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, consult).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,316603 (regressionFit = 5,316600, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, support).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,405883 (regressionFit = 5,405880, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, faculti).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,280678 (regressionFit = 5,280675, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, internet).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,081603 (regressionFit = 5,081600, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, softwar).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,401506 (regressionFit = 5,401504, penalties=2.9400000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, servic).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,283392 (regressionFit = 5,283389, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,294610 (regressionFit = 5,294607, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293504 (regressionFit = 5,293502, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,301447 (regressionFit = 5,301445, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,283911 (regressionFit = 5,283908, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269878 (regressionFit = 5,269875, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.269878174228191
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 6 variant children.  Sending 201 items to OPEN for evaluation and possible insertion.
% Have created 201 valid-on-seeds descendants.
%     Score = -5,246085 (regressionFit = 5,246081, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,370423 (regressionFit = 5,370419, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), r_faculty(C).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), course(C).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,482371 (regressionFit = 5,482367, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), department(C).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,373745 (regressionFit = 5,373742, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,408272 (regressionFit = 5,408268, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), person(C).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), researchproject(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), staff(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), student(C).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,266158 (regressionFit = 5,266154, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,262370 (regressionFit = 5,262366, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,259642 (regressionFit = 5,259638, penalties=3.94E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, text).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,258540 (regressionFit = 5,258536, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, length).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,554250 (regressionFit = 5,554246, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, dec).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, societi).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, type).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, content).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,476866 (regressionFit = 5,476862, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, link).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, academ).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,426788 (regressionFit = 5,426784, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, research).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,475430 (regressionFit = 5,475426, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, web).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,574544 (regressionFit = 5,574540, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, ncsa).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, search).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,258540 (regressionFit = 5,258536, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, modifi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,473822 (regressionFit = 5,473818, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, student).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,553424 (regressionFit = 5,553420, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, www).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, fri).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,258540 (regressionFit = 5,258536, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, jan).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,388074 (regressionFit = 5,388070, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, texa).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, usa).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, world).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, colleg).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, date).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, gmt).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,574020 (regressionFit = 5,574016, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, comment).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,344547 (regressionFit = 5,344543, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, austin).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, person).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,362498 (regressionFit = 5,362494, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, associ).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, job).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,549066 (regressionFit = 5,549062, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, page).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,388074 (regressionFit = 5,388070, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, comput).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, good).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, decemb).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, citi).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, commun).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, multimedia).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, server).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, amp).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, html).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,520965 (regressionFit = 5,520961, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, lectur).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,399907 (regressionFit = 5,399903, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, book).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, tue).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,468941 (regressionFit = 5,468937, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, state).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, index).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, virtual).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, librari).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,344847 (regressionFit = 5,344843, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, utexa).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,554250 (regressionFit = 5,554246, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, hall).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,388074 (regressionFit = 5,388070, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, univers).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, ut).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, text).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,259108 (regressionFit = 5,259104, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, length).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,554250 (regressionFit = 5,554246, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, dec).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, societi).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, type).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, content).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,396877 (regressionFit = 5,396873, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, link).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,515151 (regressionFit = 5,515147, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, academ).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,324394 (regressionFit = 5,324390, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, research).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,395270 (regressionFit = 5,395266, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, web).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,513136 (regressionFit = 5,513132, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, ncsa).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, search).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,259108 (regressionFit = 5,259104, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, modifi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,473822 (regressionFit = 5,473818, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, student).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,459971 (regressionFit = 5,459967, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, www).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, fri).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,258540 (regressionFit = 5,258536, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, jan).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,265734 (regressionFit = 5,265730, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, texa).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,441424 (regressionFit = 5,441420, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, usa).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,514773 (regressionFit = 5,514769, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, world).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, colleg).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, date).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, gmt).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,512593 (regressionFit = 5,512589, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, comment).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,257961 (regressionFit = 5,257957, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, austin).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, person).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,306031 (regressionFit = 5,306027, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, associ).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, job).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,463604 (regressionFit = 5,463600, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, page).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,265734 (regressionFit = 5,265730, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, comput).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, good).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, decemb).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, citi).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, commun).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, multimedia).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, server).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, amp).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, html).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,419284 (regressionFit = 5,419280, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, lectur).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,406060 (regressionFit = 5,406056, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, book).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, tue).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,474425 (regressionFit = 5,474421, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, state).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, index).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, virtual).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, librari).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,276557 (regressionFit = 5,276553, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, utexa).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,538735 (regressionFit = 5,538731, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, hall).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,265734 (regressionFit = 5,265730, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, univers).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,515151 (regressionFit = 5,515147, penalties=3.95E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, ut).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, text).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,261382 (regressionFit = 5,261378, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, length).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,555282 (regressionFit = 5,555278, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, dec).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, societi).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, type).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, content).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,317806 (regressionFit = 5,317802, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, link).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,485368 (regressionFit = 5,485364, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, academ).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,299587 (regressionFit = 5,299583, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, research).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,311995 (regressionFit = 5,311991, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, web).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,479259 (regressionFit = 5,479255, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, ncsa).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, search).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,241630 (regressionFit = 5,241626, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, modifi).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,472500 (regressionFit = 5,472497, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, student).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,320426 (regressionFit = 5,320422, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, www).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,519020 (regressionFit = 5,519016, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, fri).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,258540 (regressionFit = 5,258536, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, jan).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,247104 (regressionFit = 5,247100, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, texa).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,457298 (regressionFit = 5,457294, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, usa).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,481194 (regressionFit = 5,481190, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, world).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, colleg).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, date).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, gmt).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,479024 (regressionFit = 5,479020, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, comment).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,240099 (regressionFit = 5,240095, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, austin).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, person).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,293165 (regressionFit = 5,293162, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, associ).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, job).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,418599 (regressionFit = 5,418595, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, page).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,245218 (regressionFit = 5,245214, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, comput).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, good).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,555282 (regressionFit = 5,555278, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, decemb).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, citi).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, commun).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, multimedia).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, server).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, amp).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,269879 (regressionFit = 5,269875, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, html).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,399653 (regressionFit = 5,399649, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, lectur).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,411005 (regressionFit = 5,411002, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, book).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,482371 (regressionFit = 5,482367, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, tue).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,474087 (regressionFit = 5,474083, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, state).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, index).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, virtual).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, librari).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,276557 (regressionFit = 5,276553, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, utexa).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,532619 (regressionFit = 5,532615, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, hall).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,247104 (regressionFit = 5,247100, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, univers).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,485368 (regressionFit = 5,485364, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, ut).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,472585 (regressionFit = 5,472581, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, account).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, print).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, train).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,472585 (regressionFit = 5,472581, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, archiv).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,397720 (regressionFit = 5,397716, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, resourc).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, learn).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,471706 (regressionFit = 5,471702, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, committe).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, facil).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, access).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, provid).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, hardwar).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,466791 (regressionFit = 5,466787, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, lab).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,408458 (regressionFit = 5,408454, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, docum).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,252458 (regressionFit = 5,252454, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, inform).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, cc).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,475768 (regressionFit = 5,475764, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, list).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, polici).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, store).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,488879 (regressionFit = 5,488876, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, mail).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,471706 (regressionFit = 5,471702, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, consult).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,465953 (regressionFit = 5,465949, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, support).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,473257 (regressionFit = 5,473254, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, faculti).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,479420 (regressionFit = 5,479416, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, internet).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,246706 (regressionFit = 5,246702, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, softwar).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,471706 (regressionFit = 5,471702, penalties=3.85E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, servic).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,272904 (regressionFit = 5,272900, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,268771 (regressionFit = 5,268768, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(A, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,271797 (regressionFit = 5,271793, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,281280 (regressionFit = 5,281276, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,264241 (regressionFit = 5,264237, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(B, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,274728 (regressionFit = 5,274724, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,274988 (regressionFit = 5,274984, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(C, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,275383 (regressionFit = 5,275380, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(C, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,277393 (regressionFit = 5,277389, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(C, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,266173 (regressionFit = 5,266169, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,265687 (regressionFit = 5,265683, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,258635 (regressionFit = 5,258631, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(_, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(_, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.258635155335253

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(B, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.264240504086874

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.265686693308159

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.266173268349395

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(A, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.268771233642796

***** Warning: #53 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
Setting -0.008997896264136721 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,81 and has recall=0,35, precision=1,00, and F1=0,52 (using m-estimates).
 // It covers 34,8% of the positive examples, 56 of 161,
(faculty(D) :- has(D, research))

% On cycle #1, the best clause found is:
%      faculty(A) :- has(A, research).  [covers 56,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 56 positive examples, of which 56 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 34,8% of the positive examples and NaN% of the negatives.}
% Have selected pos example #95 as the next seed: faculty(httpwwwcsutexaseduusersfussellturninghtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 49 items to OPEN for evaluation and possible insertion.
% Have created 49 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,344040 (regressionFit = 5,344039, penalties=1.03E-6) for clause:  faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,344040): faculty(A) :- has(A, file).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,397126 (regressionFit = 5,397125, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,408490 (regressionFit = 5,408489, penalties=1.03E-6) for clause:  faculty(A) :- has(A, problem).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,388789 (regressionFit = 5,388788, penalties=1.03E-6) for clause:  faculty(A) :- has(A, architectur).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,405593 (regressionFit = 5,405592, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,407562 (regressionFit = 5,407561, penalties=1.03E-6) for clause:  faculty(A) :- has(A, user).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,203904 (regressionFit = 5,203903, penalties=1.03E-6) for clause:  faculty(A) :- has(A, includ).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,203904): faculty(A) :- has(A, includ).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,353395 (regressionFit = 5,353394, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interfac).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,379372 (regressionFit = 5,379371, penalties=1.03E-6) for clause:  faculty(A) :- has(A, turn).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,411572 (regressionFit = 5,411571, penalties=1.03E-6) for clause:  faculty(A) :- has(A, electron).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,412037 (regressionFit = 5,412036, penalties=1.03E-6) for clause:  faculty(A) :- has(A, provid).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,380002 (regressionFit = 5,380001, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sourc).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,412769 (regressionFit = 5,412768, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oct).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,398600 (regressionFit = 5,398599, penalties=1.03E-6) for clause:  faculty(A) :- has(A, command).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,397126 (regressionFit = 5,397125, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,393325 (regressionFit = 5,393324, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,267718 (regressionFit = 5,267717, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,116271 (regressionFit = 5,116270, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,116271): faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,391276 (regressionFit = 5,391275, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sun).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,394981 (regressionFit = 5,394980, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,396528 (regressionFit = 5,396527, penalties=1.03E-6) for clause:  faculty(A) :- has(A, describ).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,384022 (regressionFit = 5,384020, penalties=1.03E-6) for clause:  faculty(A) :- has(A, man).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,389791 (regressionFit = 5,389790, penalties=1.03E-6) for clause:  faculty(A) :- has(A, check).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,410090 (regressionFit = 5,410089, penalties=1.03E-6) for clause:  faculty(A) :- has(A, state).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,398401 (regressionFit = 5,398400, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graph).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,384327 (regressionFit = 5,384326, penalties=1.03E-6) for clause:  faculty(A) :- has(A, descript).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,412660 (regressionFit = 5,412659, penalties=1.03E-6) for clause:  faculty(A) :- has(A, short).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,376085 (regressionFit = 5,376084, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,350898 (regressionFit = 5,350897, penalties=1.03E-6) for clause:  faculty(A) :- has(A, code).  [covers 20,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,409923 (regressionFit = 5,409922, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 51,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,387662 (regressionFit = 5,387661, penalties=1.03E-6) for clause:  faculty(A) :- has(A, submit).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,401085 (regressionFit = 5,401084, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,398057 (regressionFit = 5,398055, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,383448 (regressionFit = 5,383447, penalties=1.03E-6) for clause:  faculty(A) :- has(A, guid).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,355355 (regressionFit = 5,355354, penalties=1.03E-6) for clause:  faculty(A) :- has(A, make).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,369647 (regressionFit = 5,369646, penalties=1.03E-6) for clause:  faculty(A) :- has(A, assign).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,368114 (regressionFit = 5,368113, penalties=1.03E-6) for clause:  faculty(A) :- has(A, call).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,386528 (regressionFit = 5,386527, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,562730 (regressionFit = 5,562729, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,393416 (regressionFit = 5,393415, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.386528190816846
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -5,378307 (regressionFit = 5,378305, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,396725 (regressionFit = 5,396723, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,375661 (regressionFit = 5,375659, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.375660631791043
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -5,203452 (regressionFit = 5,203449, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,283714 (regressionFit = 5,283711, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,369483 (regressionFit = 5,369480, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,362185 (regressionFit = 5,362182, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,365334 (regressionFit = 5,365331, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,375582 (regressionFit = 5,375579, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,375136 (regressionFit = 5,375134, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,381999 (regressionFit = 5,381996, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,366587 (regressionFit = 5,366584, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,352424 (regressionFit = 5,352421, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.352423824724786
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 6 variant children.  Sending 29 items to OPEN for evaluation and possible insertion.
% Have created 29 valid-on-seeds descendants.
%     Score = -5,314362 (regressionFit = 5,314358, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,443259 (regressionFit = 5,443255, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), r_faculty(C).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), course(C).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,552783 (regressionFit = 5,552780, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), department(C).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,440376 (regressionFit = 5,440372, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,478464 (regressionFit = 5,478460, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), person(C).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), researchproject(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), staff(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), student(C).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,349069 (regressionFit = 5,349065, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,345106 (regressionFit = 5,345102, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,342218 (regressionFit = 5,342214, penalties=3.94E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,355400 (regressionFit = 5,355397, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,350906 (regressionFit = 5,350902, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(A, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,353023 (regressionFit = 5,353019, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,363746 (regressionFit = 5,363742, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,346282 (regressionFit = 5,346278, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(B, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,356130 (regressionFit = 5,356127, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,357606 (regressionFit = 5,357603, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(C, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,357450 (regressionFit = 5,357446, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(C, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,358517 (regressionFit = 5,358514, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(C, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,348612 (regressionFit = 5,348608, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,348103 (regressionFit = 5,348099, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,340569 (regressionFit = 5,340565, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(_, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(_, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.340569161700186

% Consider expanding [#6 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(B, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.346281607522061

% Consider expanding [#7 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.348103181475316

% Consider expanding [#8 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.348612055672646

% Consider expanding [#9 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(A, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.350905541490637

***** Warning: #54 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
Setting -0.030635293890520113 for 
 // Learned this clause on outer loop cycle #2.  It scores=-5,12 and has recall=0,40, precision=1,00, and F1=0,57 (using m-estimates).
 // It covers 39,8% of the positive examples, 64 of 161 (of which 31 are newly covered),
 // So far 87 (54,0%) of the positive examples have been covered.
(faculty(D) :- has(D, inform))

% On cycle #2, the best clause found is:
%      faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 64 positive examples, of which 31 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 54,0% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added -0.008997896264136721 to wgt = -0,0090 (faculty(A) :- has(A, research))
Added -0.030635293890520113 to wgt = -0,0306 (faculty(A) :- has(A, inform))
% Saving model in: datasets\MyWebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 9 trees is 22,184 seconds.

% Kept 10 of the 10 positive examples.
% Kept 151 of the 151 negative examples.
% Dataset size: 161
Computing probabilities
prob time:172 milliseconds
No hidden examples for : faculty
Time to build dataset: 173 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #74 as the next seed: faculty(httpwwwcsutexaseduusersmirankertoverviewhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 75 items to OPEN for evaluation and possible insertion.
% Have created 75 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,291354 (regressionFit = 5,291353, penalties=1.03E-6) for clause:  faculty(A) :- has(A, foundat).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,291354): faculty(A) :- has(A, foundat).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,410075 (regressionFit = 5,410074, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,383790 (regressionFit = 5,383789, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cover).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,371597 (regressionFit = 5,371596, penalties=1.03E-6) for clause:  faculty(A) :- has(A, collect).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,385639 (regressionFit = 5,385638, penalties=1.03E-6) for clause:  faculty(A) :- has(A, term).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,410267 (regressionFit = 5,410266, penalties=1.03E-6) for clause:  faculty(A) :- has(A, distribut).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,408317 (regressionFit = 5,408316, penalties=1.03E-6) for clause:  faculty(A) :- has(A, orient).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,396604 (regressionFit = 5,396603, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sep).  [covers 23,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,409658 (regressionFit = 5,409657, penalties=1.03E-6) for clause:  faculty(A) :- has(A, activ).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,381386 (regressionFit = 5,381385, penalties=1.03E-6) for clause:  faculty(A) :- has(A, manag).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,411424 (regressionFit = 5,411423, penalties=1.03E-6) for clause:  faculty(A) :- has(A, larg).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,376789 (regressionFit = 5,376788, penalties=1.03E-6) for clause:  faculty(A) :- has(A, year).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,406297 (regressionFit = 5,406296, penalties=1.03E-6) for clause:  faculty(A) :- has(A, background).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,268982 (regressionFit = 5,268981, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,268982): faculty(A) :- has(A, program).  [covers 52,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,340604 (regressionFit = 5,340603, penalties=1.03E-6) for clause:  faculty(A) :- has(A, student).  [covers 48,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,211166 (regressionFit = 5,211165, penalties=1.03E-6) for clause:  faculty(A) :- has(A, includ).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,211166): faculty(A) :- has(A, includ).  [covers 24,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,340480 (regressionFit = 5,340479, penalties=1.03E-6) for clause:  faculty(A) :- has(A, read).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,408759 (regressionFit = 5,408758, penalties=1.03E-6) for clause:  faculty(A) :- has(A, execut).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,404105 (regressionFit = 5,404104, penalties=1.03E-6) for clause:  faculty(A) :- has(A, instructor).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,405884 (regressionFit = 5,405883, penalties=1.03E-6) for clause:  faculty(A) :- has(A, write).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,152294 (regressionFit = 5,152293, penalties=1.03E-6) for clause:  faculty(A) :- has(A, lectur).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,152294): faculty(A) :- has(A, lectur).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,407431 (regressionFit = 5,407430, penalties=1.03E-6) for clause:  faculty(A) :- has(A, introduct).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,392033 (regressionFit = 5,392032, penalties=1.03E-6) for clause:  faculty(A) :- has(A, integr).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,408972 (regressionFit = 5,408971, penalties=1.03E-6) for clause:  faculty(A) :- has(A, start).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,399554 (regressionFit = 5,399553, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,356471 (regressionFit = 5,356470, penalties=1.03E-6) for clause:  faculty(A) :- has(A, web).  [covers 39,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,411330 (regressionFit = 5,411329, penalties=1.03E-6) for clause:  faculty(A) :- has(A, wednesdai).  [covers 38,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,104261 (regressionFit = 5,104260, penalties=1.03E-6) for clause:  faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,104261): faculty(A) :- has(A, inform).  [covers 64,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,391360 (regressionFit = 5,391359, penalties=1.03E-6) for clause:  faculty(A) :- has(A, investig).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,384908 (regressionFit = 5,384907, penalties=1.03E-6) for clause:  faculty(A) :- has(A, copi).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,384137 (regressionFit = 5,384136, penalties=1.03E-6) for clause:  faculty(A) :- has(A, wide).  [covers 14,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,400352 (regressionFit = 5,400351, penalties=1.03E-6) for clause:  faculty(A) :- has(A, databas).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,389662 (regressionFit = 5,389661, penalties=1.03E-6) for clause:  faculty(A) :- has(A, consist).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,382174 (regressionFit = 5,382173, penalties=1.03E-6) for clause:  faculty(A) :- has(A, part).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,330320 (regressionFit = 5,330319, penalties=1.03E-6) for clause:  faculty(A) :- has(A, seminar).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,300433 (regressionFit = 5,300432, penalties=1.03E-6) for clause:  faculty(A) :- has(A, data).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,356755 (regressionFit = 5,356754, penalties=1.03E-6) for clause:  faculty(A) :- has(A, develop).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,398458 (regressionFit = 5,398457, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depend).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,373898 (regressionFit = 5,373897, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,401118 (regressionFit = 5,401117, penalties=1.03E-6) for clause:  faculty(A) :- has(A, java).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,407778 (regressionFit = 5,407777, penalties=1.03E-6) for clause:  faculty(A) :- has(A, issu).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,400223 (regressionFit = 5,400222, penalties=1.03E-6) for clause:  faculty(A) :- has(A, measur).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,410765 (regressionFit = 5,410764, penalties=1.03E-6) for clause:  faculty(A) :- has(A, provid).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,407565 (regressionFit = 5,407564, penalties=1.03E-6) for clause:  faculty(A) :- has(A, respons).  [covers 11,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,380299 (regressionFit = 5,380298, penalties=1.03E-6) for clause:  faculty(A) :- has(A, form).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,394662 (regressionFit = 5,394661, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,396491 (regressionFit = 5,396490, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,335325 (regressionFit = 5,335324, penalties=1.03E-6) for clause:  faculty(A) :- has(A, project).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,374387 (regressionFit = 5,374386, penalties=1.03E-6) for clause:  faculty(A) :- has(A, begin).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,349900 (regressionFit = 5,349899, penalties=1.03E-6) for clause:  faculty(A) :- has(A, net).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,411383 (regressionFit = 5,411382, penalties=1.03E-6) for clause:  faculty(A) :- has(A, object).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,390253 (regressionFit = 5,390252, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,409751 (regressionFit = 5,409750, penalties=1.03E-6) for clause:  faculty(A) :- has(A, world).  [covers 27,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,394662 (regressionFit = 5,394661, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,045529 (regressionFit = 5,045528, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,045529): faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,404429 (regressionFit = 5,404427, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,382548 (regressionFit = 5,382547, penalties=1.03E-6) for clause:  faculty(A) :- has(A, homework).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,404643 (regressionFit = 5,404642, penalties=1.03E-6) for clause:  faculty(A) :- has(A, class).  [covers 31,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,407599 (regressionFit = 5,407598, penalties=1.03E-6) for clause:  faculty(A) :- has(A, present).  [covers 26,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,355361 (regressionFit = 5,355360, penalties=1.03E-6) for clause:  faculty(A) :- has(A, home).  [covers 66,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,329250 (regressionFit = 5,329249, penalties=1.03E-6) for clause:  faculty(A) :- has(A, semest).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,394523 (regressionFit = 5,394522, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,385198 (regressionFit = 5,385197, penalties=1.03E-6) for clause:  faculty(A) :- has(A, origin).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,384657 (regressionFit = 5,384656, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,565498 (regressionFit = 5,565497, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,394502 (regressionFit = 5,394501, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.384657287504452
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -5,376255 (regressionFit = 5,376253, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,395480 (regressionFit = 5,395478, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,373019 (regressionFit = 5,373017, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.373018930800639
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -5,190489 (regressionFit = 5,190486, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,274897 (regressionFit = 5,274894, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,366681 (regressionFit = 5,366678, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,359423 (regressionFit = 5,359420, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,363049 (regressionFit = 5,363046, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,373857 (regressionFit = 5,373854, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,372585 (regressionFit = 5,372582, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,380436 (regressionFit = 5,380433, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,363578 (regressionFit = 5,363575, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,349597 (regressionFit = 5,349594, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.349596770143766
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 6 variant children.  Sending 29 items to OPEN for evaluation and possible insertion.
% Have created 29 valid-on-seeds descendants.
%     Score = -5,305716 (regressionFit = 5,305712, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), r_faculty(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,436419 (regressionFit = 5,436416, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), r_faculty(C).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), course(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), course(C).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), department(B).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,558490 (regressionFit = 5,558487, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), department(C).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,436317 (regressionFit = 5,436313, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), person(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,474057 (regressionFit = 5,474053, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), person(C).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), researchproject(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), researchproject(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), staff(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), student(B).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), student(C).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,346076 (regressionFit = 5,346072, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,342360 (regressionFit = 5,342356, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), has(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,339563 (regressionFit = 5,339559, penalties=3.94E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), has(C, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,352606 (regressionFit = 5,352603, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(A, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,348135 (regressionFit = 5,348132, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(A, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,351272 (regressionFit = 5,351268, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(A, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,360571 (regressionFit = 5,360567, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(B, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,343825 (regressionFit = 5,343821, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(B, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,354136 (regressionFit = 5,354132, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(B, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,354773 (regressionFit = 5,354769, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(C, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,354423 (regressionFit = 5,354419, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(C, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,356823 (regressionFit = 5,356820, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(C, _).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,345673 (regressionFit = 5,345669, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,345174 (regressionFit = 5,345171, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,337904 (regressionFit = 5,337900, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(_, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(_, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.3379042006501765

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(B, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.343824934715453

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(_, B).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.345174453377196

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(_, B), linkto(_, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.345673090869623

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(B, A), linkto(C, B), linkto(A, C).  [covers 10,0/161,0 pos, 0,0/0,0 neg]' score=-5.3481353605974435

***** Warning: #55 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
Setting -0.03964741210169478 for 
 // Learned this clause on outer loop cycle #1.  It scores=-5,05 and has recall=0,53, precision=1,00, and F1=0,69 (using m-estimates).
 // It covers 52,8% of the positive examples, 85 of 161,
(faculty(D) :- has(D, comput))

% On cycle #1, the best clause found is:
%      faculty(A) :- has(A, comput).  [covers 85,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 85 positive examples, of which 85 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,8% of the positive examples and NaN% of the negatives.}
% Have selected pos example #151 as the next seed: faculty(httpwwwcsutexaseduusersdastuartmiscfoodhtml)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 161,0/161,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 33 items to OPEN for evaluation and possible insertion.
% Have created 33 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,764253 (regressionFit = 5,764252, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,764253): faculty(A) :- has(A, page).  [covers 88,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,769267 (regressionFit = 5,769266, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 156,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,769911 (regressionFit = 5,769910, penalties=1.03E-6) for clause:  faculty(A) :- has(A, orient).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,758898 (regressionFit = 5,758897, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,758898): faculty(A) :- has(A, mime).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,756537 (regressionFit = 5,756536, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,756537): faculty(A) :- has(A, modifi).  [covers 153,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,758898 (regressionFit = 5,758897, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 148,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,771945 (regressionFit = 5,771944, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 101,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,735867 (regressionFit = 5,735866, penalties=1.03E-6) for clause:  faculty(A) :- has(A, aug).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,735867): faculty(A) :- has(A, aug).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,594353 (regressionFit = 5,594352, penalties=1.03E-6) for clause:  faculty(A) :- has(A, phone).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,594353): faculty(A) :- has(A, phone).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,767310 (regressionFit = 5,767309, penalties=1.03E-6) for clause:  faculty(A) :- has(A, store).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,778320 (regressionFit = 5,778319, penalties=1.03E-6) for clause:  faculty(A) :- has(A, complet).  [covers 17,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,737599 (regressionFit = 5,737598, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 121,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,755870 (regressionFit = 5,755869, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 147,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 159,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,602411 (regressionFit = 5,602410, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 73,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, doubl).  [covers 1,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,749772 (regressionFit = 5,749771, penalties=1.03E-6) for clause:  faculty(A) :- has(A, guid).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,762220 (regressionFit = 5,762219, penalties=1.03E-6) for clause:  faculty(A) :- has(A, updat).  [covers 29,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,749584 (regressionFit = 5,749583, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sourc).  [covers 13,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,768898 (regressionFit = 5,768897, penalties=1.03E-6) for clause:  faculty(A) :- has(A, citi).  [covers 6,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,770079 (regressionFit = 5,770078, penalties=1.03E-6) for clause:  faculty(A) :- has(A, limit).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 161,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,750774 (regressionFit = 5,750773, penalties=1.03E-6) for clause:  faculty(A) :- has(A, street).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,748417 (regressionFit = 5,748416, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,845641 (regressionFit = 5,845640, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 55,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,692882 (regressionFit = 5,692881, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'faculty(A) :- linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-5.69288246762053
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 3 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -5,937602 (regressionFit = 5,937600, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,562354 (regressionFit = 5,562352, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,562354): faculty(A) :- linkto(B, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,809259 (regressionFit = 5,809257, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,970704 (regressionFit = 5,970702, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,033988 (regressionFit = 6,033986, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,054559 (regressionFit = 6,054557, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(B, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,693895 (regressionFit = 5,693892, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,651504 (regressionFit = 5,651502, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,023510 (regressionFit = 6,023508, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,768880 (regressionFit = 5,768878, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,805032 (regressionFit = 5,805029, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,996646 (regressionFit = 5,996644, penalties=1.9200000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,673470 (regressionFit = 5,673468, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,696351 (regressionFit = 5,696349, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,710705 (regressionFit = 5,710703, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- linkto(B, A), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-5.673469976952104
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 7 variant children.  Sending 30 items to OPEN for evaluation and possible insertion.
% Have created 30 valid-on-seeds descendants.
%     Score = -5,967049 (regressionFit = 5,967045, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -4,565520 (regressionFit = 4,565517, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), r_faculty(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,565520): faculty(A) :- linkto(B, A), linkto(B, C), r_faculty(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,805233 (regressionFit = 5,805230, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,175611 (regressionFit = 6,175608, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), course(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,080042 (regressionFit = 6,080039, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,173769 (regressionFit = 6,173766, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), department(C).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,006130 (regressionFit = 6,006127, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,571081 (regressionFit = 5,571078, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), person(C).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,128726 (regressionFit = 6,128723, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), researchproject(C).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), staff(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,166398 (regressionFit = 6,166395, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,114253 (regressionFit = 6,114250, penalties=2.9300000000000007E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), student(C).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,678732 (regressionFit = 5,678729, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,633760 (regressionFit = 5,633756, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,684755 (regressionFit = 5,684752, penalties=3.04E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), has(C, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,131903 (regressionFit = 6,131900, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,006011 (regressionFit = 6,006008, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,124826 (regressionFit = 6,124823, penalties=2.8300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(A, C).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,042070 (regressionFit = 6,042067, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,019117 (regressionFit = 6,019114, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,671463 (regressionFit = 5,671459, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,987102 (regressionFit = 5,987099, penalties=2.8300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(C, A).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,704570 (regressionFit = 5,704567, penalties=2.8300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(C, B).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,020595 (regressionFit = 6,020592, penalties=2.8300000000000004E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(C, C).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,744731 (regressionFit = 5,744728, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(C, _).  [covers 40,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,689484 (regressionFit = 5,689481, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,696265 (regressionFit = 5,696262, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,690604 (regressionFit = 5,690601, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, C).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-5.671462538525966
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 13 variant children.  Sending 46 items to OPEN for evaluation and possible insertion.
% Have created 46 valid-on-seeds descendants.
%     Score = -6,113999 (regressionFit = 6,113995, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,664345 (regressionFit = 5,664341, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), r_faculty(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,664345 (regressionFit = 5,664341, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), r_faculty(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,061590 (regressionFit = 6,061586, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,311028 (regressionFit = 6,311024, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), course(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,311028 (regressionFit = 6,311024, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), course(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,331288 (regressionFit = 6,331284, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,331842 (regressionFit = 6,331838, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), department(C).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,331842 (regressionFit = 6,331838, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), department(C).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,151946 (regressionFit = 6,151941, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,013977 (regressionFit = 6,013973, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), person(C).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,013977 (regressionFit = 6,013973, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), person(C).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,312956 (regressionFit = 6,312952, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), researchproject(C).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), researchproject(C).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), staff(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), staff(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,313600 (regressionFit = 6,313596, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,281630 (regressionFit = 6,281626, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), student(C).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,281630 (regressionFit = 6,281626, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), student(C).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,676364 (regressionFit = 5,676360, penalties=4.15E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,642313 (regressionFit = 5,642309, penalties=4.15E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,683678 (regressionFit = 5,683674, penalties=4.05E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), has(C, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,683678 (regressionFit = 5,683674, penalties=4.05E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), has(C, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,301634 (regressionFit = 6,301630, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,300172 (regressionFit = 6,300168, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,299358 (regressionFit = 6,299354, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), linkto(A, C).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,299358 (regressionFit = 6,299354, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), linkto(A, C).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,314156 (regressionFit = 6,314152, penalties=4.05E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,150445 (regressionFit = 6,150441, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,682935 (regressionFit = 5,682931, penalties=4.05E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,105136 (regressionFit = 6,105132, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), linkto(C, A).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,760090 (regressionFit = 5,760086, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), linkto(C, B).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,124892 (regressionFit = 6,124888, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), linkto(C, C).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,110499 (regressionFit = 6,110495, penalties=3.740000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, D), linkto(C, D).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,734157 (regressionFit = 5,734153, penalties=3.95E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), linkto(C, _).  [covers 40,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,105136 (regressionFit = 6,105132, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), linkto(C, A).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,760090 (regressionFit = 5,760086, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), linkto(C, B).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,110499 (regressionFit = 6,110495, penalties=3.740000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, D), linkto(D, C).  [covers 21,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,124892 (regressionFit = 6,124888, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), linkto(C, C).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,734157 (regressionFit = 5,734153, penalties=3.95E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), linkto(C, _).  [covers 40,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,681521 (regressionFit = 5,681517, penalties=4.05E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,770040 (regressionFit = 5,770036, penalties=4.05E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,683486 (regressionFit = 5,683482, penalties=3.95E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), linkto(_, C).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,683486 (regressionFit = 5,683482, penalties=3.95E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), linkto(_, C).  [covers 49,0/161,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-5.681520823670909

% Consider expanding [#6 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, _), linkto(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-5.682935338928503

% Consider expanding [#7 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- linkto(B, A), linkto(B, C), linkto(B, _), linkto(_, C).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-5.6834858198531055

% Consider expanding [#8 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- linkto(B, A), linkto(B, _), linkto(B, C), linkto(_, C).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-5.6834858198531055

% Consider expanding [#9 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]' score=-5.68948435379779
%  At # nodes expanded = 9, |OPEN| = 5.  Pruned 13 variant children.  Sending 46 items to OPEN for evaluation and possible insertion.
% Have created 46 valid-on-seeds descendants.
%     Score = -6,316196 (regressionFit = 6,316192, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), r_faculty(B).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,324342 (regressionFit = 5,324338, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), r_faculty(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,316685 (regressionFit = 6,316681, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), r_faculty(C).  [covers 9,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,824639 (regressionFit = 5,824635, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), course(B).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,382659 (regressionFit = 6,382655, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), course(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,824639 (regressionFit = 5,824635, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), course(C).  [covers 4,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,221729 (regressionFit = 6,221725, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), department(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,372960 (regressionFit = 6,372956, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), department(C).  [covers 5,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,246919 (regressionFit = 6,246915, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), department(C).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,333188 (regressionFit = 6,333184, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), person(B).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,974416 (regressionFit = 5,974412, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), person(C).  [covers 22,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,333574 (regressionFit = 6,333570, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), person(C).  [covers 16,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,342318 (regressionFit = 6,342314, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), researchproject(B).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), researchproject(C).  [covers 2,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,344523 (regressionFit = 6,344519, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), researchproject(C).  [covers 3,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), staff(B).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), staff(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), staff(C).  [covers 0,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,371734 (regressionFit = 6,371730, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), student(B).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,333885 (regressionFit = 6,333881, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), student(C).  [covers 15,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,371014 (regressionFit = 6,371010, penalties=3.94E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), student(C).  [covers 7,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,686465 (regressionFit = 5,686461, penalties=4.15E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), has(A, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,671202 (regressionFit = 5,671197, penalties=4.15E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), has(B, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,691216 (regressionFit = 5,691212, penalties=4.05E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), has(C, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,674377 (regressionFit = 5,674373, penalties=4.05E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), has(C, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,376590 (regressionFit = 6,376586, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), linkto(A, A).  [covers 10,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,342490 (regressionFit = 6,342486, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), linkto(A, B).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,380554 (regressionFit = 6,380550, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), linkto(A, C).  [covers 12,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,340136 (regressionFit = 6,340132, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), linkto(A, C).  [covers 25,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,353618 (regressionFit = 6,353614, penalties=4.05E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), linkto(A, _).  [covers 32,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,341736 (regressionFit = 6,341732, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), linkto(B, B).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,325246 (regressionFit = 6,325242, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), linkto(C, A).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,934984 (regressionFit = 5,934980, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), linkto(C, B).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,342380 (regressionFit = 6,342376, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), linkto(C, C).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,939045 (regressionFit = 5,939042, penalties=3.740000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(D, A), linkto(C, D).  [covers 34,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,968835 (regressionFit = 5,968831, penalties=3.95E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), linkto(C, _).  [covers 40,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,320321 (regressionFit = 6,320318, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), linkto(C, B).  [covers 19,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,692020 (regressionFit = 5,692016, penalties=3.740000000000001E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(D, A), linkto(D, C).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -6,338666 (regressionFit = 6,338662, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), linkto(C, C).  [covers 18,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,681653 (regressionFit = 5,681649, penalties=3.95E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), linkto(C, _).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,694494 (regressionFit = 5,694490, penalties=4.05E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), linkto(_, A).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,723158 (regressionFit = 5,723154, penalties=4.05E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(_, A), linkto(_, B).  [covers 37,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,695246 (regressionFit = 5,695242, penalties=3.95E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, C), linkto(_, A), linkto(_, C).  [covers 49,0/161,0 pos, 0,0/0,0 neg]
%     Score = -5,721043 (regressionFit = 5,721040, penalties=3.95E-6) for clause:  faculty(A) :- linkto(B, A), linkto(B, _), linkto(C, A), linkto(_, C).  [covers 37,0/161,0 pos, 0,0/0,0 neg]

***** Warning: #56 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(B, A), linkto(B, C), r_faculty(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(B, A), linkto(B, C), r_faculty(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
Setting 0.24147534977050156 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,57 and has recall=0,05, precision=0,99, and F1=0,09 (using m-estimates).
 // It covers 5,0% of the positive examples, 8 of 161 (of which 1 are newly covered),
 // So far 86 (53,4%) of the positive examples have been covered.
(faculty(D) :- linkto(Anon49797, D), linkto(Anon49797, Anon49961), r_faculty(Anon49961))

% On cycle #2, the best clause found is:
%      faculty(A) :- linkto(B, A), linkto(B, C), r_faculty(C).  [covers 8,0/161,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 1 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 53,4% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added -0.03964741210169478 to wgt = -0,0396 (faculty(A) :- has(A, comput))
Added 0.24147534977050156 to wgt = 0,2415 (faculty(A) :- linkto(B, A), linkto(B, C), r_faculty(C))
% Saving model in: datasets\MyWebKB\train/models/bRDNs/faculty.model.ckpt
% Saving model in: datasets\MyWebKB\train/models/bRDNs/faculty.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for faculty.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).

logPrior(-1.8).
faculty(D, Total) :- // A general accessor. 
   faculty(D, 1000000, Total), !.
faculty(D, Total) :- waitHere("This should not fail", faculty(D, Total)).

faculty(D, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_faculty_tree1(D, TreesToUse, Total1),
   getScore_faculty_tree2(D, TreesToUse, Total2),
   getScore_faculty_tree3(D, TreesToUse, Total3),
   getScore_faculty_tree4(D, TreesToUse, Total4),
   getScore_faculty_tree5(D, TreesToUse, Total5),
   getScore_faculty_tree6(D, TreesToUse, Total6),
   getScore_faculty_tree7(D, TreesToUse, Total7),
   getScore_faculty_tree8(D, TreesToUse, Total8),
   getScore_faculty_tree9(D, TreesToUse, Total9),
   getScore_faculty_tree10(D, TreesToUse, Total10),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10,
   !.
faculty(D, TreesToUse, Total) :- waitHere("This should not fail", faculty(D, TreesToUse, Total)).

getScore_faculty_tree1(D, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_faculty_tree1(D, TreesToUse, Total1) :- faculty_tree1(D, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_faculty_tree2(D, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_faculty_tree2(D, TreesToUse, Total2) :- faculty_tree2(D, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_faculty_tree3(D, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_faculty_tree3(D, TreesToUse, Total3) :- faculty_tree3(D, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_faculty_tree4(D, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_faculty_tree4(D, TreesToUse, Total4) :- faculty_tree4(D, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_faculty_tree5(D, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_faculty_tree5(D, TreesToUse, Total5) :- faculty_tree5(D, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_faculty_tree6(D, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_faculty_tree6(D, TreesToUse, Total6) :- faculty_tree6(D, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_faculty_tree7(D, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_faculty_tree7(D, TreesToUse, Total7) :- faculty_tree7(D, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_faculty_tree8(D, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_faculty_tree8(D, TreesToUse, Total8) :- faculty_tree8(D, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_faculty_tree9(D, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_faculty_tree9(D, TreesToUse, Total9) :- faculty_tree9(D, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_faculty_tree10(D, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_faculty_tree10(D, TreesToUse, Total10) :- faculty_tree10(D, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(0, []).
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #375 as the next seed: faculty(httpwwwcsutexaseduusersoops)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 104 items to OPEN for evaluation and possible insertion.
% Have created 104 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -648,908377 (regressionFit = 648,908376, penalties=1.03E-6) for clause:  faculty(A) :- has(A, behavior).  [covers 70,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -648,908377): faculty(A) :- has(A, behavior).  [covers 70,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -649,007048 (regressionFit = 649,007047, penalties=1.03E-6) for clause:  faculty(A) :- has(A, space).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -650,639158 (regressionFit = 650,639156, penalties=1.03E-6) for clause:  faculty(A) :- has(A, virtual).  [covers 110,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.224,779854 (regressionFit = 1.224,779853, penalties=1.03E-6) for clause:  faculty(A) :- has(A, hard).  [covers 90,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -3.352,915394 (regressionFit = 3.352,915393, penalties=1.03E-6) for clause:  faculty(A) :- has(A, group).  [covers 350,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -2.216,676002 (regressionFit = 2.216,676001, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gener).  [covers 350,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -646,800230 (regressionFit = 646,800229, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interpret).  [covers 40,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -646,800230): faculty(A) :- has(A, interpret).  [covers 40,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -644,013132 (regressionFit = 644,013131, penalties=1.03E-6) for clause:  faculty(A) :- has(A, info).  [covers 80,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -644,013132): faculty(A) :- has(A, info).  [covers 80,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -662,045679 (regressionFit = 662,045678, penalties=1.03E-6) for clause:  faculty(A) :- has(A, book).  [covers 200,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -2.513,988446 (regressionFit = 2.513,988445, penalties=1.03E-6) for clause:  faculty(A) :- has(A, address).  [covers 250,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -652,425313 (regressionFit = 652,425312, penalties=1.03E-6) for clause:  faculty(A) :- has(A, peopl).  [covers 120,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.312,607264 (regressionFit = 1.312,607263, penalties=1.03E-6) for clause:  faculty(A) :- has(A, effici).  [covers 110,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.086,494662 (regressionFit = 1.086,494660, penalties=1.03E-6) for clause:  faculty(A) :- has(A, write).  [covers 160,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.377,438473 (regressionFit = 1.377,438472, penalties=1.03E-6) for clause:  faculty(A) :- has(A, object).  [covers 160,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -3.867,085745 (regressionFit = 3.867,085743, penalties=1.03E-6) for clause:  faculty(A) :- has(A, work).  [covers 450,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 1.590,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -3.135,188766 (regressionFit = 3.135,188765, penalties=1.03E-6) for clause:  faculty(A) :- has(A, process).  [covers 210,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -650,528991 (regressionFit = 650,528990, penalties=1.03E-6) for clause:  faculty(A) :- has(A, extend).  [covers 60,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.570,823070 (regressionFit = 1.570,823069, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fault).  [covers 80,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.769,624512 (regressionFit = 1.769,624511, penalties=1.03E-6) for clause:  faculty(A) :- has(A, perform).  [covers 170,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -665,875133 (regressionFit = 665,875132, penalties=1.03E-6) for clause:  faculty(A) :- has(A, code).  [covers 200,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -660,196811 (regressionFit = 660,196810, penalties=1.03E-6) for clause:  faculty(A) :- has(A, log).  [covers 130,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -664,452936 (regressionFit = 664,452935, penalties=1.03E-6) for clause:  faculty(A) :- has(A, make).  [covers 250,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -2.289,638266 (regressionFit = 2.289,638265, penalties=1.03E-6) for clause:  faculty(A) :- has(A, list).  [covers 340,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.333,808596 (regressionFit = 1.333,808595, penalties=1.03E-6) for clause:  faculty(A) :- has(A, orient).  [covers 130,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.315,544546 (regressionFit = 5.315,544545, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 560,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -646,289317 (regressionFit = 646,289316, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cach).  [covers 40,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.847,432458 (regressionFit = 1.847,432457, penalties=1.03E-6) for clause:  faculty(A) :- has(A, compil).  [covers 140,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -2.037,922879 (regressionFit = 2.037,922878, penalties=1.03E-6) for clause:  faculty(A) :- has(A, time).  [covers 460,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -651,606864 (regressionFit = 651,606863, penalties=1.03E-6) for clause:  faculty(A) :- has(A, open).  [covers 160,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -4.359,577874 (regressionFit = 4.359,577873, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 880,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.724,141796 (regressionFit = 5.724,141795, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 1.210,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -656,095443 (regressionFit = 656,095442, penalties=1.03E-6) for clause:  faculty(A) :- has(A, form).  [covers 120,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.378,873946 (regressionFit = 1.378,873945, penalties=1.03E-6) for clause:  faculty(A) :- has(A, note).  [covers 190,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -4.873,811388 (regressionFit = 4.873,811387, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interest).  [covers 410,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -4.115,843955 (regressionFit = 4.115,843954, penalties=1.03E-6) for clause:  faculty(A) :- has(A, program).  [covers 520,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -646,233815 (regressionFit = 646,233814, penalties=1.03E-6) for clause:  faculty(A) :- has(A, manag).  [covers 90,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.822,639152 (regressionFit = 1.822,639151, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paper).  [covers 320,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.096,238542 (regressionFit = 1.096,238541, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ftp).  [covers 140,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -6.412,813334 (regressionFit = 6.412,813333, penalties=1.03E-6) for clause:  faculty(A) :- has(A, cern).  [covers 1.470,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -650,755583 (regressionFit = 650,755582, penalties=1.03E-6) for clause:  faculty(A) :- has(A, pointer).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -6.417,784328 (regressionFit = 6.417,784327, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 1.480,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.229,568920 (regressionFit = 1.229,568919, penalties=1.03E-6) for clause:  faculty(A) :- has(A, basic).  [covers 110,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.384,708332 (regressionFit = 1.384,708331, penalties=1.03E-6) for clause:  faculty(A) :- has(A, structur).  [covers 170,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.243,384721 (regressionFit = 1.243,384720, penalties=1.03E-6) for clause:  faculty(A) :- has(A, high).  [covers 140,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -645,372045 (regressionFit = 645,372044, penalties=1.03E-6) for clause:  faculty(A) :- has(A, onlin).  [covers 130,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -653,145987 (regressionFit = 653,145986, penalties=1.03E-6) for clause:  faculty(A) :- has(A, paul).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -641,835118 (regressionFit = 641,835117, penalties=1.03E-6) for clause:  faculty(A) :- has(A, format).  [covers 40,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -641,835118): faculty(A) :- has(A, format).  [covers 40,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -652,169542 (regressionFit = 652,169541, penalties=1.03E-6) for clause:  faculty(A) :- has(A, integr).  [covers 160,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -2.324,909953 (regressionFit = 2.324,909952, penalties=1.03E-6) for clause:  faculty(A) :- has(A, automat).  [covers 150,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.275,095751 (regressionFit = 1.275,095750, penalties=1.03E-6) for clause:  faculty(A) :- has(A, real).  [covers 210,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -645,106426 (regressionFit = 645,106425, penalties=1.03E-6) for clause:  faculty(A) :- has(A, travel).  [covers 60,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -2.642,064052 (regressionFit = 2.642,064051, penalties=1.03E-6) for clause:  faculty(A) :- has(A, recent).  [covers 130,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -2.296,271722 (regressionFit = 2.296,271721, penalties=1.03E-6) for clause:  faculty(A) :- has(A, wednesdai).  [covers 380,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -4.538,954428 (regressionFit = 4.538,954427, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 1.010,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -650,419177 (regressionFit = 650,419176, penalties=1.03E-6) for clause:  faculty(A) :- has(A, extens).  [covers 120,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -645,003349 (regressionFit = 645,003348, penalties=1.03E-6) for clause:  faculty(A) :- has(A, releas).  [covers 50,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -649,693009 (regressionFit = 649,693008, penalties=1.03E-6) for clause:  faculty(A) :- has(A, master).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.620,552497 (regressionFit = 1.620,552496, penalties=1.03E-6) for clause:  faculty(A) :- has(A, support).  [covers 150,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -643,575316 (regressionFit = 643,575315, penalties=1.03E-6) for clause:  faculty(A) :- has(A, materi).  [covers 110,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -4.769,259658 (regressionFit = 4.769,259657, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 680,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -2.798,036702 (regressionFit = 2.798,036701, penalties=1.03E-6) for clause:  faculty(A) :- has(A, includ).  [covers 240,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.090,566683 (regressionFit = 1.090,566682, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graduat).  [covers 170,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -2.835,496973 (regressionFit = 2.835,496972, penalties=1.03E-6) for clause:  faculty(A) :- has(A, nov).  [covers 290,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -643,467418 (regressionFit = 643,467417, penalties=1.03E-6) for clause:  faculty(A) :- has(A, alloc).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -6.417,784328 (regressionFit = 6.417,784327, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 1.480,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -648,468577 (regressionFit = 648,468576, penalties=1.03E-6) for clause:  faculty(A) :- has(A, site).  [covers 170,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.269,194813 (regressionFit = 1.269,194812, penalties=1.03E-6) for clause:  faculty(A) :- has(A, distribut).  [covers 140,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.821,841564 (regressionFit = 1.821,841563, penalties=1.03E-6) for clause:  faculty(A) :- has(A, workshop).  [covers 110,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.704,956165 (regressionFit = 1.704,956164, penalties=1.03E-6) for clause:  faculty(A) :- has(A, improv).  [covers 70,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.602,273278 (regressionFit = 1.602,273277, penalties=1.03E-6) for clause:  faculty(A) :- has(A, memori).  [covers 160,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -646,288235 (regressionFit = 646,288234, penalties=1.03E-6) for clause:  faculty(A) :- has(A, compress).  [covers 40,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -660,933533 (regressionFit = 660,933532, penalties=1.03E-6) for clause:  faculty(A) :- has(A, local).  [covers 130,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.112,402048 (regressionFit = 1.112,402047, penalties=1.03E-6) for clause:  faculty(A) :- has(A, web).  [covers 390,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -647,670884 (regressionFit = 647,670883, penalties=1.03E-6) for clause:  faculty(A) :- has(A, written).  [covers 110,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -656,691435 (regressionFit = 656,691434, penalties=1.03E-6) for clause:  faculty(A) :- has(A, call).  [covers 190,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -6.412,062856 (regressionFit = 6.412,062855, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 1.530,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -645,589990 (regressionFit = 645,589989, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mark).  [covers 80,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -648,928360 (regressionFit = 648,928359, penalties=1.03E-6) for clause:  faculty(A) :- has(A, collect).  [covers 120,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.664,199467 (regressionFit = 1.664,199466, penalties=1.03E-6) for clause:  faculty(A) :- has(A, interfac).  [covers 130,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -652,641034 (regressionFit = 652,641033, penalties=1.03E-6) for clause:  faculty(A) :- has(A, sourc).  [covers 130,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -2.544,728017 (regressionFit = 2.544,728016, penalties=1.03E-6) for clause:  faculty(A) :- has(A, languag).  [covers 260,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -6.430,737295 (regressionFit = 6.430,737294, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 1.560,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -663,905805 (regressionFit = 663,905804, penalties=1.03E-6) for clause:  faculty(A) :- has(A, read).  [covers 210,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -645,884038 (regressionFit = 645,884037, penalties=1.03E-6) for clause:  faculty(A) :- has(A, background).  [covers 50,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.254,137384 (regressionFit = 1.254,137383, penalties=1.03E-6) for clause:  faculty(A) :- has(A, introduct).  [covers 180,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -653,346657 (regressionFit = 653,346656, penalties=1.03E-6) for clause:  faculty(A) :- has(A, hardwar).  [covers 90,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -657,900921 (regressionFit = 657,900920, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oper).  [covers 170,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -648,965226 (regressionFit = 648,965225, penalties=1.03E-6) for clause:  faculty(A) :- has(A, thread).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.244,781356 (regressionFit = 1.244,781355, penalties=1.03E-6) for clause:  faculty(A) :- has(A, studi).  [covers 210,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.295,535604 (regressionFit = 1.295,535603, penalties=1.03E-6) for clause:  faculty(A) :- has(A, student).  [covers 480,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -643,467418 (regressionFit = 643,467417, penalties=1.03E-6) for clause:  faculty(A) :- has(A, michael).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -3.679,354780 (regressionFit = 3.679,354779, penalties=1.03E-6) for clause:  faculty(A) :- has(A, area).  [covers 250,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -648,820345 (regressionFit = 648,820344, penalties=1.03E-6) for clause:  faculty(A) :- has(A, standard).  [covers 120,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.219,750586 (regressionFit = 1.219,750585, penalties=1.03E-6) for clause:  faculty(A) :- has(A, adapt).  [covers 90,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.383,455419 (regressionFit = 1.383,455418, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -3.169,327996 (regressionFit = 3.169,327995, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 550,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -3.045,182147 (regressionFit = 3.045,182146, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 490,0/1.610,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'faculty(A) :- linkto(A, A).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]' score=-1383.4554187229717
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -1.382,761026 (regressionFit = 1.382,761024, penalties=2.1200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), has(A, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.367,122102 (regressionFit = 1.367,122100, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.382,185351 (regressionFit = 1.382,185349, penalties=2.0200000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(_, A).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1:2] 'faculty(A) :- linkto(A, A), linkto(A, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]' score=-1367.12210178953
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 2 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -557,894117 (regressionFit = 557,894114, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), r_faculty(B).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -557,894117): faculty(A) :- linkto(A, A), linkto(A, B), r_faculty(B).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), course(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -675,777586 (regressionFit = 675,777584, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), department(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -879,261430 (regressionFit = 879,261427, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), person(B).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), researchproject(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), staff(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -675,551032 (regressionFit = 675,551029, penalties=2.920000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), student(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.382,292619 (regressionFit = 1.382,292615, penalties=3.130000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), has(A, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.341,333460 (regressionFit = 1.341,333457, penalties=3.0300000000000002E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), has(B, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.316,527558 (regressionFit = 1.316,527555, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.377,301196 (regressionFit = 1.377,301193, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, A).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.380,515131 (regressionFit = 1.380,515128, penalties=2.8200000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, B).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.383,536165 (regressionFit = 1.383,536162, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(B, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.382,866954 (regressionFit = 1.382,866951, penalties=3.0300000000000006E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(_, A).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.352,808314 (regressionFit = 1.352,808311, penalties=2.9300000000000003E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]' score=-1316.5275576750553
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 6 variant children.  Sending 29 items to OPEN for evaluation and possible insertion.
% Have created 29 valid-on-seeds descendants.
%     Score = -770,513363 (regressionFit = 770,513359, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), r_faculty(B).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -770,513363 (regressionFit = 770,513359, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), r_faculty(B).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), course(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), course(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -740,352772 (regressionFit = 740,352768, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), department(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -740,352772 (regressionFit = 740,352768, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), department(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -846,698364 (regressionFit = 846,698360, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), person(B).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -846,698364 (regressionFit = 846,698360, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), person(B).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), researchproject(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), researchproject(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), staff(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), staff(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -739,625124 (regressionFit = 739,625120, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), student(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -739,625124 (regressionFit = 739,625120, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), student(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.360,609530 (regressionFit = 1.360,609526, penalties=4.14E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _), has(A, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.273,491356 (regressionFit = 1.273,491352, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), has(B, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.273,491356 (regressionFit = 1.273,491352, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), has(B, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.251,062115 (regressionFit = 1.251,062111, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _), linkto(A, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.383,927468 (regressionFit = 1.383,927464, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), linkto(B, A).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.382,693458 (regressionFit = 1.382,693455, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), linkto(B, B).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.383,536166 (regressionFit = 1.383,536162, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, C), linkto(B, C).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.357,960277 (regressionFit = 1.357,960274, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), linkto(B, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.383,927468 (regressionFit = 1.383,927464, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), linkto(B, A).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.383,536166 (regressionFit = 1.383,536162, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, C), linkto(C, B).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.382,693458 (regressionFit = 1.382,693455, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), linkto(B, B).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.357,960277 (regressionFit = 1.357,960274, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), linkto(B, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.381,791054 (regressionFit = 1.381,791049, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _), linkto(_, A).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.292,332445 (regressionFit = 1.292,332441, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), linkto(_, B).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.292,332445 (regressionFit = 1.292,332441, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), linkto(_, B).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, _), linkto(A, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]' score=-1251.062114897456

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(A, B), linkto(A, _), linkto(_, B).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]' score=-1292.3324449502222

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(A, _), linkto(A, B), linkto(_, B).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]' score=-1292.3324449502222

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]' score=-1352.8083136875143
%  At # nodes expanded = 8, |OPEN| = 6.  Pruned 6 variant children.  Sending 29 items to OPEN for evaluation and possible insertion.
% Have created 29 valid-on-seeds descendants.
%     Score = -648,816193 (regressionFit = 648,816189, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), r_faculty(B).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -895,968953 (regressionFit = 895,968950, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), r_faculty(C).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), course(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), course(C).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -714,542074 (regressionFit = 714,542070, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), department(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -737,933642 (regressionFit = 737,933638, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), department(C).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.011,569883 (regressionFit = 1.011,569879, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), person(B).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -937,600553 (regressionFit = 937,600549, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), person(C).  [covers 40,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), researchproject(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -624,857871 (regressionFit = 624,857867, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), researchproject(C).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), staff(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), staff(C).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -714,317861 (regressionFit = 714,317857, penalties=3.9300000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), student(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -714,317861 (regressionFit = 714,317857, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), student(C).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.372,586208 (regressionFit = 1.372,586204, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), has(A, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.316,942495 (regressionFit = 1.316,942491, penalties=4.040000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), has(B, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.360,538773 (regressionFit = 1.360,538769, penalties=3.94E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), has(C, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.366,139627 (regressionFit = 1.366,139624, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), linkto(B, A).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.369,770939 (regressionFit = 1.369,770935, penalties=3.830000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), linkto(B, B).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.359,294877 (regressionFit = 1.359,294874, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), linkto(B, C).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.370,542869 (regressionFit = 1.370,542865, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), linkto(B, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.383,747087 (regressionFit = 1.383,747084, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), linkto(C, A).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.382,693458 (regressionFit = 1.382,693455, penalties=3.7300000000000007E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), linkto(C, C).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.321,496725 (regressionFit = 1.321,496721, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), linkto(C, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.383,291185 (regressionFit = 1.383,291181, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), linkto(_, A).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.326,370067 (regressionFit = 1.326,370063, penalties=3.940000000000001E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(_, B), linkto(_, B).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -1.381,876435 (regressionFit = 1.381,876431, penalties=3.8400000000000005E-6) for clause:  faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), linkto(_, C).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'faculty(A) :- linkto(A, A), linkto(A, B), linkto(C, B), linkto(C, _).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]' score=-1321.4967246622082

***** Warning: #57 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- linkto(A, A), linkto(A, B), r_faculty(B).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- linkto(A, A), linkto(A, B), r_faculty(B).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]
Setting 5.819671645967405 for 
 // Learned this clause on outer loop cycle #1.  It scores=-557,89 and has recall=0,01, precision=1,00, and F1=0,02 (using m-estimates).
 // It covers 1,2% of the positive examples, 20 of 1610 (of which 2 are newly covered),
(faculty(D) :- linkto(D, D), linkto(D, Anon52653), r_faculty(Anon52653))

% On cycle #1, the best clause found is:
%      faculty(A) :- linkto(A, A), linkto(A, B), r_faculty(B).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]
% This clause covers 20 positive examples, of which 2 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 0,1% of the positive examples and NaN% of the negatives.}
% Have selected pos example #1.609 as the next seed: faculty(httpwwwcercutexasedu)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 44 items to OPEN for evaluation and possible insertion.
% Have created 44 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  faculty(A) :- has(A, _).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -6.385,985852 (regressionFit = 6.385,985851, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mail).  [covers 240,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.385,985852): faculty(A) :- has(A, mail).  [covers 240,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, jan).  [covers 1.590,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -57.153,677418 (regressionFit = 57.153,677417, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mondai).  [covers 1.210,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -57.062,246719 (regressionFit = 57.062,246718, penalties=1.03E-6) for clause:  faculty(A) :- has(A, scienc).  [covers 700,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.806,181564 (regressionFit = 5.806,181563, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comment).  [covers 280,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.806,181564): faculty(A) :- has(A, comment).  [covers 280,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -9.384,222994 (regressionFit = 9.384,222993, penalties=1.03E-6) for clause:  faculty(A) :- has(A, page).  [covers 880,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -6.990,327125 (regressionFit = 6.990,327124, penalties=1.03E-6) for clause:  faculty(A) :- has(A, faculti).  [covers 150,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -57.885,421043 (regressionFit = 57.885,421042, penalties=1.03E-6) for clause:  faculty(A) :- has(A, mime).  [covers 1.480,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, gmt).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -52.041,064221 (regressionFit = 52.041,064220, penalties=1.03E-6) for clause:  faculty(A) :- has(A, fax).  [covers 170,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, server).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -6.442,857348 (regressionFit = 6.442,857347, penalties=1.03E-6) for clause:  faculty(A) :- has(A, student).  [covers 480,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -56.170,207212 (regressionFit = 56.170,207210, penalties=1.03E-6) for clause:  faculty(A) :- has(A, texa).  [covers 680,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -6.227,494660 (regressionFit = 6.227,494659, penalties=1.03E-6) for clause:  faculty(A) :- has(A, graduat).  [covers 170,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, content).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, type).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.799,551838 (regressionFit = 5.799,551837, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tabl).  [covers 110,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.799,551838): faculty(A) :- has(A, tabl).  [covers 110,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -30.453,415955 (regressionFit = 30.453,415954, penalties=1.03E-6) for clause:  faculty(A) :- has(A, tuesdai).  [covers 510,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, text).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -55.301,668346 (regressionFit = 55.301,668345, penalties=1.03E-6) for clause:  faculty(A) :- has(A, austin).  [covers 730,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.815,326084 (regressionFit = 5.815,326083, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ut).  [covers 320,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -6.707,118351 (regressionFit = 6.707,118350, penalties=1.03E-6) for clause:  faculty(A) :- has(A, electr).  [covers 80,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -6.375,148348 (regressionFit = 6.375,148347, penalties=1.03E-6) for clause:  faculty(A) :- has(A, http).  [covers 140,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -57.045,402217 (regressionFit = 57.045,402216, penalties=1.03E-6) for clause:  faculty(A) :- has(A, univers).  [covers 720,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -57.898,894469 (regressionFit = 57.898,894468, penalties=1.03E-6) for clause:  faculty(A) :- has(A, length).  [covers 1.560,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -27.126,438934 (regressionFit = 27.126,438933, penalties=1.03E-6) for clause:  faculty(A) :- has(A, construct).  [covers 130,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -33.132,089398 (regressionFit = 33.132,089397, penalties=1.03E-6) for clause:  faculty(A) :- has(A, depart).  [covers 550,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, html).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  faculty(A) :- has(A, date).  [covers 1.610,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -34.014,223123 (regressionFit = 34.014,223122, penalties=1.03E-6) for clause:  faculty(A) :- has(A, public).  [covers 300,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -55.585,478440 (regressionFit = 55.585,478439, penalties=1.03E-6) for clause:  faculty(A) :- has(A, utexa).  [covers 1.010,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -57.885,421043 (regressionFit = 57.885,421042, penalties=1.03E-6) for clause:  faculty(A) :- has(A, version).  [covers 1.480,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -7.989,161436 (regressionFit = 7.989,161435, penalties=1.03E-6) for clause:  faculty(A) :- has(A, engin).  [covers 230,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.797,499846 (regressionFit = 5.797,499845, penalties=1.03E-6) for clause:  faculty(A) :- has(A, ncsa).  [covers 180,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.797,499846): faculty(A) :- has(A, ncsa).  [covers 180,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -57.893,459295 (regressionFit = 57.893,459294, penalties=1.03E-6) for clause:  faculty(A) :- has(A, modifi).  [covers 1.530,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -57.829,181366 (regressionFit = 57.829,181365, penalties=1.03E-6) for clause:  faculty(A) :- has(A, comput).  [covers 850,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -6.496,645739 (regressionFit = 6.496,645738, penalties=1.03E-6) for clause:  faculty(A) :- has(A, oct).  [covers 220,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -34.439,132679 (regressionFit = 34.439,132677, penalties=1.03E-6) for clause:  faculty(A) :- has(A, research).  [covers 560,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.801,672943 (regressionFit = 5.801,672942, penalties=1.03E-6) for clause:  faculty(A) :- has(A, send).  [covers 150,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -7.444,247374 (regressionFit = 7.444,247373, penalties=1.03E-6) for clause:  faculty(A) :- has(A, center).  [covers 220,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -42.190,994067 (regressionFit = 42.190,994066, penalties=1.0100000000000003E-6) for clause:  faculty(A) :- linkto(A, A).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -50.031,052456 (regressionFit = 50.031,052455, penalties=1.12E-6) for clause:  faculty(A) :- linkto(A, _).  [covers 550,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -54.597,903625 (regressionFit = 54.597,903624, penalties=1.12E-6) for clause:  faculty(A) :- linkto(_, A).  [covers 490,0/1.610,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- has(A, ncsa).  [covers 180,0/1.610,0 pos, 0,0/0,0 neg]' score=-5797.499845585954
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 1 variant children.  Sending 43 items to OPEN for evaluation and possible insertion.
% Have created 43 valid-on-seeds descendants.
%     Score = -5.856,170109 (regressionFit = 5.856,170107, penalties=2.0400000000000004E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, _).  [covers 180,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.792,807476 (regressionFit = 5.792,807474, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, mail).  [covers 50,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.792,807476): faculty(A) :- has(A, ncsa), has(A, mail).  [covers 50,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.796,919628 (regressionFit = 5.796,919626, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, jan).  [covers 160,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.791,859466 (regressionFit = 5.791,859464, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, mondai).  [covers 50,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.791,859466): faculty(A) :- has(A, ncsa), has(A, mondai).  [covers 50,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.792,178133 (regressionFit = 5.792,178131, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, scienc).  [covers 70,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.795,859641 (regressionFit = 5.795,859639, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, comment).  [covers 110,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.795,688131 (regressionFit = 5.795,688129, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, page).  [covers 110,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.792,792912 (regressionFit = 5.792,792910, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, faculti).  [covers 40,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.791,859466 (regressionFit = 5.791,859464, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, mime).  [covers 50,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.797,499847 (regressionFit = 5.797,499845, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, gmt).  [covers 180,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.790,801512 (regressionFit = 5.790,801510, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, fax).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.790,801512): faculty(A) :- has(A, ncsa), has(A, fax).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.797,499847 (regressionFit = 5.797,499845, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, server).  [covers 180,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.792,753325 (regressionFit = 5.792,753323, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, student).  [covers 90,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.793,604466 (regressionFit = 5.793,604465, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, texa).  [covers 90,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.793,054679 (regressionFit = 5.793,054677, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, graduat).  [covers 50,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.797,499847 (regressionFit = 5.797,499845, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, content).  [covers 180,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.797,499847 (regressionFit = 5.797,499845, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, type).  [covers 180,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.791,498486 (regressionFit = 5.791,498484, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, tabl).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.790,801512 (regressionFit = 5.790,801510, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, tuesdai).  [covers 20,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.797,499847 (regressionFit = 5.797,499845, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, text).  [covers 180,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.792,866826 (regressionFit = 5.792,866824, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, austin).  [covers 90,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.792,745261 (regressionFit = 5.792,745259, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, ut).  [covers 90,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.790,731019 (regressionFit = 5.790,731017, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, electr).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.790,731019): faculty(A) :- has(A, ncsa), has(A, electr).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.792,103098 (regressionFit = 5.792,103096, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, http).  [covers 70,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.793,180156 (regressionFit = 5.793,180154, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, univers).  [covers 100,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.794,766528 (regressionFit = 5.794,766526, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, length).  [covers 130,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.790,731019 (regressionFit = 5.790,731017, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, construct).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.793,065370 (regressionFit = 5.793,065369, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, depart).  [covers 70,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.797,499847 (regressionFit = 5.797,499845, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, html).  [covers 180,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.797,499847 (regressionFit = 5.797,499845, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, date).  [covers 180,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.790,828404 (regressionFit = 5.790,828402, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, public).  [covers 50,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.797,126447 (regressionFit = 5.797,126445, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, utexa).  [covers 140,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.791,859466 (regressionFit = 5.791,859464, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, version).  [covers 50,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.792,074105 (regressionFit = 5.792,074103, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, engin).  [covers 60,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.794,935866 (regressionFit = 5.794,935864, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, modifi).  [covers 140,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.792,551779 (regressionFit = 5.792,551777, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, comput).  [covers 80,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.793,179785 (regressionFit = 5.793,179783, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, oct).  [covers 40,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.792,078825 (regressionFit = 5.792,078823, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, research).  [covers 80,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.792,832287 (regressionFit = 5.792,832285, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, send).  [covers 40,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.792,929277 (regressionFit = 5.792,929275, penalties=1.95E-6) for clause:  faculty(A) :- has(A, ncsa), has(A, center).  [covers 80,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.793,154470 (regressionFit = 5.793,154468, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.820,214759 (regressionFit = 5.820,214757, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, _).  [covers 120,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.813,008531 (regressionFit = 5.813,008529, penalties=2.1400000000000007E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(_, A).  [covers 60,0/1.610,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1:2] 'faculty(A) :- has(A, ncsa), linkto(A, A).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]' score=-5793.154469592445
%  At # nodes expanded = 3, |OPEN| = 9.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -5.803,646914 (regressionFit = 5.803,646911, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), has(A, _).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.806,592132 (regressionFit = 5.806,592129, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, _).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.806,592132 (regressionFit = 5.806,592129, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(_, A).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, _).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]' score=-5806.592132166417
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 2 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), r_faculty(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), course(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.790,454093 (regressionFit = 5.790,454089, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), department(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.790,454093): faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), department(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), person(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), researchproject(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), staff(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), student(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.805,392022 (regressionFit = 5.805,392018, penalties=4.05E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, _), has(A, _).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.793,154471 (regressionFit = 5.793,154468, penalties=3.84E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), has(B, ncsa).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.805,102896 (regressionFit = 5.805,102892, penalties=3.95E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), has(B, _).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.822,644112 (regressionFit = 5.822,644108, penalties=4.05E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, _), linkto(A, _).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.793,154471 (regressionFit = 5.793,154468, penalties=3.84E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), linkto(B, A).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.793,154471 (regressionFit = 5.793,154468, penalties=3.84E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), linkto(B, B).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.806,592133 (regressionFit = 5.806,592129, penalties=3.95E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), linkto(B, _).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.822,644112 (regressionFit = 5.822,644108, penalties=4.05E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, _), linkto(_, A).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.816,569363 (regressionFit = 5.816,569360, penalties=3.95E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), linkto(_, B).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), linkto(B, A).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]' score=-5793.154471402445

% Consider expanding [#6 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), linkto(B, B).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]' score=-5793.154471402445

% Consider expanding [#7 of outerLoop #2, bodyLen=2:3] 'faculty(A) :- has(A, ncsa), linkto(A, A), linkto(_, A).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]' score=-5806.592132166417
%  At # nodes expanded = 7, |OPEN| = 7.  Pruned 2 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), r_faculty(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), course(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.790,454093 (regressionFit = 5.790,454089, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), department(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), person(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), researchproject(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), staff(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.94E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), student(B).  [covers 0,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.805,392022 (regressionFit = 5.805,392018, penalties=4.05E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(_, A), has(A, _).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.806,592133 (regressionFit = 5.806,592129, penalties=3.84E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), has(B, ncsa).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.806,112680 (regressionFit = 5.806,112676, penalties=3.95E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), has(B, _).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.793,154471 (regressionFit = 5.793,154468, penalties=3.84E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), linkto(B, B).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.816,569363 (regressionFit = 5.816,569360, penalties=3.95E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), linkto(B, _).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.822,644112 (regressionFit = 5.822,644108, penalties=4.05E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(_, A), linkto(_, A).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]
%     Score = -5.806,592133 (regressionFit = 5.806,592129, penalties=3.95E-6) for clause:  faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), linkto(_, B).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- has(A, ncsa), linkto(A, A), linkto(B, A), linkto(B, B).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]' score=-5793.154471402445

% Consider expanding [#9 of outerLoop #2, bodyLen=3:4] 'faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), linkto(B, _).  [covers 30,0/1.610,0 pos, 0,0/0,0 neg]' score=-5806.592133076418

***** Warning: #58 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), department(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), department(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
Setting -1.0052353230231525 for 
 // Learned this clause on outer loop cycle #2.  It scores=-5.790,45 and has recall=0,0062, precision=0,99, and F1=0,01 (using m-estimates).
 // It covers 0,6% of the positive examples, 10 of 1610 (of which 1 are newly covered),
 // So far 3 (0,2%) of the positive examples have been covered.
(faculty(D) :- has(D, ncsa), linkto(D, D), linkto(D, Anon54099), department(Anon54099))

% On cycle #2, the best clause found is:
%      faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), department(B).  [covers 10,0/1.610,0 pos, 0,0/0,0 neg]
% This clause covers 10 positive examples, of which 1 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 0,2% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 5.819671645967405 to wgt = 5,8197 (faculty(A) :- linkto(A, A), linkto(A, B), r_faculty(B))
Added -1.0052353230231525 to wgt = -1,0052 (faculty(A) :- has(A, ncsa), linkto(A, A), linkto(A, B), department(B))
% Time taken to learn model for 'faculty': 25,482 seconds.
% Saving model in: datasets\MyWebKB\train/models/bRDNs/faculty.model
cached groundings hit: 0
Misses: 0

% Switching to standard-logic notation for variables; previous setting = uppercase

% Switching to VarIndicator = lowercase.

% Switching to Prolog notation for variables; previous setting = lowercase

% Switching to VarIndicator = uppercase.

% Total learning time (10 trees): 28,954 seconds.
