% Running on host: DESKTOP-0S2LA4F

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[datasets\Father-Mother\train/train_pos.txt, datasets\Father-Mother\train/train_neg.txt, datasets\Father-Mother\train/train_bk.txt, datasets\Father-Mother\train/train_facts.txt]
%  for N=0: args[N]=datasets\Father-Mother\train/train_pos.txt

% getInputArgWithDefaultValue: args=[datasets\Father-Mother\train/train_pos.txt, datasets\Father-Mother\train/train_neg.txt, datasets\Father-Mother\train/train_bk.txt, datasets\Father-Mother\train/train_facts.txt]
%  for N=1: args[N]=datasets\Father-Mother\train/train_neg.txt

% getInputArgWithDefaultValue: args=[datasets\Father-Mother\train/train_pos.txt, datasets\Father-Mother\train/train_neg.txt, datasets\Father-Mother\train/train_bk.txt, datasets\Father-Mother\train/train_facts.txt]
%  for N=2: args[N]=datasets\Father-Mother\train/train_bk.txt

% getInputArgWithDefaultValue: args=[datasets\Father-Mother\train/train_pos.txt, datasets\Father-Mother\train/train_neg.txt, datasets\Father-Mother\train/train_bk.txt, datasets\Father-Mother\train/train_facts.txt]
%  for N=3: args[N]=datasets\Father-Mother\train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.
% Reading background theory from dir: null
% Load '../background.txt'.

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****


***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.
% LoadAllModes() called.  Currently loaded modes: []
% [ LazyGroundClauseIndex ]  Building full index for sameAs/2 with 2 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for exp/3.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for log/3.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 55 facts.
% Have read 10 examples from 'datasets\Father-Mother\train' [datasets\Father-Mother\train/train*].
% Have read 42 examples from 'datasets\Father-Mother\train' [datasets\Father-Mother\train/train*].

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.

% NEW target:                 father(D, E)
%  targetPred:                father/2
%  targetArgTypes:            signature = [const, const], types = [+name, +name]
%  targets:                   [father(D, E)]
%  targetPredicates:          [father/2, mother/2]
%  targetArgSpecs:            [[D[+name], E[+name]]]
%  variablesInTargets:        [[D, E]]

% NEW target:                 mother(F, G)
%  targetPred:                mother/2
%  targetArgTypes:            signature = [const, const], types = [+name, +name]
%  targets:                   [father(D, E), mother(F, G)]
%  targetPredicates:          [father/2, mother/2]
%  targetArgSpecs:            [[D[+name], E[+name]], [F[+name], G[+name]]]
%  variablesInTargets:        [[D, E], [F, G]]

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 6 milliseconds
% Time to collect examples: 0 seconds

% Read 10 pos examples and 42 neg examples.
% Time to init learnOneClause: 29 milliseconds
% Old dirnull
Setting model dir

% Have 10 'raw' positive examples and kept 10.
% Have 42 'raw' negative examples and kept 42.

% processing backup's for mother
%  POS EX = 5
%  NEG EX = 21

% processing backup's for father
%  POS EX = 5
%  NEG EX = 21

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 2
%  |backupNegExamples| = 2
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0
datasets\Father-Mother\train/models/
File: datasets\Father-Mother\train/advice.txt doesnt exist.Hence no advice loaded
% Learning 1 trees in this iteration for mother

% Learn model for: mother
% Kept 5 of the 5 positive examples.
% Kept 9 of the 21 negative examples.
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22959183673469388
Set score:0.0025
% Dataset size: 14
Computing probabilities
prob time:13 milliseconds
No hidden examples for : mother
Time to build dataset: 18 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2295918367346937
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 0 3 4 5 6 7 8 9 10 11
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (2):
%    father(+name, +name),
%    mother(+name, +name)
%  Modes (43):
%    male(+name),
%    female(+name),
%    childof(+name, +name),
%    siblingof(+name, -name),
%    recursive_father(+name, +name),
%    recursive_mother(+name, +name),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber),
%    father(+name, +name)

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for male/1 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for female/1 with 4 assertions.
% [ LazyGroundClauseIndex ]  Building full index for childof/2 with 16 assertions.
% [ LazyGroundClauseIndex ]  Building full index for siblingof/2 with 12 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for siblingof/2.
There is no fact nor clause nor built-in predicate matching: 'recursive_father/2'.
  Possibly a typo?  If not, add to the BK file:   okIfUnknown: recursive_father/2.

% Skipping over this 'waitHere': There is no fact nor clause nor built-in predicate matching: 'recursive_father/2'.
  Possibly a typo?  If not, add to the BK file:   okIfUnknown: recursive_father/2.
There is no fact nor clause nor built-in predicate matching: 'recursive_mother/2'.
  Possibly a typo?  If not, add to the BK file:   okIfUnknown: recursive_mother/2.

% Skipping over this 'waitHere': There is no fact nor clause nor built-in predicate matching: 'recursive_mother/2'.
  Possibly a typo?  If not, add to the BK file:   okIfUnknown: recursive_mother/2.
% [ LazyGroundClauseIndex ]  Building full index for father/2 with 10 assertions.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -3,022223 (regressionFit = 3,022222, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,022223): mother(A, _) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,833334 (regressionFit = 0,833333, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,833334): mother(_, A) :- male(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,000001 (regressionFit = 0,000000, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000001): mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,833334 (regressionFit = 0,833333, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727274 (regressionFit = 2,727273, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -3,208335 (regressionFit = 3,208333, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727274 (regressionFit = 2,727273, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727274 (regressionFit = 2,727273, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]' score=-1.12E-6
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,900002 (regressionFit = 0,900000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -1,636366 (regressionFit = 1,636364, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]' score=-0.8333343533333322
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,900002 (regressionFit = 0,900000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -1,636366 (regressionFit = 1,636364, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]' score=-0.8333344533333326
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -2,222224 (regressionFit = 2,222222, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,222224 (regressionFit = 2,222222, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]' score=-2.727273747272726
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]' score=-2.727273747272726
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]' score=-2.7272739572727263
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for siblingof/2.
%     Score = -2,727275 (regressionFit = 2,727273, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]' score=-3.0222233422222207
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -2,222224 (regressionFit = 2,222222, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,900002 (regressionFit = 0,900000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,900002 (regressionFit = 0,900000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -3,208336 (regressionFit = 3,208333, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,727275 (regressionFit = 2,727273, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 8,0/14,0 pos, 0,0/0,0 neg]' score=-3.208334563333333
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -3,190061 (regressionFit = 3,190059, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -1,377237 (regressionFit = 1,377235, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -3,172418 (regressionFit = 3,172416, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -1,635149 (regressionFit = 1,635147, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -1,635149 (regressionFit = 1,635147, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for childof/2.
%     Score = -1,635149 (regressionFit = 1,635147, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,541291 (regressionFit = 2,541289, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -3,208336 (regressionFit = 3,208333, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,541291 (regressionFit = 2,541289, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,541291 (regressionFit = 2,541289, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,541291 (regressionFit = 2,541289, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -3,208335 (regressionFit = 3,208333, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,541291 (regressionFit = 2,541289, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -3,208335 (regressionFit = 3,208333, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 8,0/14,0 pos, 0,0/0,0 neg]

***** Warning: #1 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=5.0
Comparing variance: -9.25185853854297E-18 to score=0.0025 #egs=9.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 834 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #1 @ 13:51:58 7/14/21.  [Using 4.026.272 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


% Clauses:

mother(A, B, 0.8581489350995122) :- 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.1418510649004878) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_mother(underscore, a, 0.8581489350995122) :-  /* #pos=5 */ 
   female(a),
   !. // Flattened version of clause #1.

flattened_mother(underscore, underscore, -0.1418510649004878) :-  /* #neg=9 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   female(a)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/mother.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2295918367346937
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 0 1 2 3 4 5 6 7 8 9
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -3,022223 (regressionFit = 3,022222, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,022223): mother(A, _) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,833334 (regressionFit = 0,833333, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,833334): mother(_, A) :- male(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,000001 (regressionFit = 0,000000, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000001): mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,833334 (regressionFit = 0,833333, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -3,208335 (regressionFit = 3,208333, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 8,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]' score=-1.12E-6
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,900002 (regressionFit = 0,900000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -1,636366 (regressionFit = 1,636364, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]' score=-0.8333343533333322
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,900002 (regressionFit = 0,900000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -1,636366 (regressionFit = 1,636364, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]' score=-0.8333344533333326
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -2,222224 (regressionFit = 2,222222, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -2,222224 (regressionFit = 2,222222, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 5,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]' score=-3.0222233422222207
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -2,222224 (regressionFit = 2,222222, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,900002 (regressionFit = 0,900000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,900002 (regressionFit = 0,900000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -3,208336 (regressionFit = 3,208333, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 6,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 8,0/14,0 pos, 0,0/0,0 neg]' score=-3.208334563333333
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 43 bad extensions.
%     Score = -3,190061 (regressionFit = 3,190059, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -1,377237 (regressionFit = 1,377235, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -3,172418 (regressionFit = 3,172416, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -1,635149 (regressionFit = 1,635147, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -1,635149 (regressionFit = 1,635147, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -1,635149 (regressionFit = 1,635147, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -3,208336 (regressionFit = 3,208333, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -3,208335 (regressionFit = 3,208333, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -3,208335 (regressionFit = 3,208333, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 8,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(A, _) :- female(A).  [covers 1,0/14,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=5.0
Comparing variance: -9.25185853854297E-18 to score=0.0025 #egs=9.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 236 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:51:58 7/14/21.  [Using 4.179.264 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


% Clauses:

mother(A, B, 0.8581489350995122) :- 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.1418510649004878) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_mother(underscore, a, 0.8581489350995122) :-  /* #pos=5 */ 
   female(a),
   !. // Flattened version of clause #1.

flattened_mother(underscore, underscore, -0.1418510649004878) :-  /* #neg=9 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   female(a)

% Learning 1 trees in this iteration for father

% Learn model for: father
% Kept 5 of the 5 positive examples.
% Kept 10 of the 21 negative examples.
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2222222222222222
Set score:0.0025
% Dataset size: 15
Computing probabilities
prob time:17 milliseconds
No hidden examples for : father
Time to build dataset: 36 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222222202
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 0 2 4 5 6 9 11 12 13
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for mother/2 with 10 assertions.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -3,295456 (regressionFit = 3,295455, penalties=1.12E-6) for clause:  father(A, _) :- male(A).  [covers 11,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,295456): father(A, _) :- male(A).  [covers 11,0/15,0 pos, 0,0/0,0 neg]
%     Score = -2,727274 (regressionFit = 2,727273, penalties=1.12E-6) for clause:  father(_, A) :- male(A).  [covers 11,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,727274): father(_, A) :- male(A).  [covers 11,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  father(A, _) :- female(A).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -2,916668 (regressionFit = 2,916667, penalties=1.12E-6) for clause:  father(_, A) :- female(A).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,833334 (regressionFit = 0,833333, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- childof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,833334): father(A, B) :- childof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -3,055557 (regressionFit = 3,055556, penalties=1.23E-6) for clause:  father(A, _) :- siblingof(A, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'father(A, B) :- childof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]' score=-0.8333343533333322
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -1,700002 (regressionFit = 1,700000, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): father(A, B) :- childof(B, A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -1,666669 (regressionFit = 1,666667, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- childof(B, A), siblingof(A, _).  [covers 3,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'father(_, A) :- male(A).  [covers 11,0/15,0 pos, 0,0/0,0 neg]' score=-2.7272738472727247
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -2,589288 (regressionFit = 2,589286, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(B), male(A).  [covers 7,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), female(A).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), childof(B, A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -2,800002 (regressionFit = 2,800000, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(B), siblingof(A, _).  [covers 5,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'father(_, A) :- female(A).  [covers 3,0/15,0 pos, 0,0/0,0 neg]' score=-2.9166677866666664
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -2,916669 (regressionFit = 2,916667, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- female(B), male(A).  [covers 3,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'father(A, _) :- siblingof(A, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]' score=-3.055556785555556
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 44 bad extensions.
%     Score = -3,064689 (regressionFit = 3,064687, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- siblingof(A, _), male(A).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -2,828889 (regressionFit = 2,828886, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -3,085739 (regressionFit = 3,085737, penalties=2.1300000000000004E-6) for clause:  father(A, _) :- siblingof(A, B), male(B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -1,665554 (regressionFit = 1,665552, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), childof(B, A).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -1,665554 (regressionFit = 1,665552, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, C), childof(B, C).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -3,055558 (regressionFit = 3,055556, penalties=2.24E-6) for clause:  father(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -3,055558 (regressionFit = 3,055556, penalties=2.0300000000000005E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -3,055558 (regressionFit = 3,055556, penalties=2.1400000000000003E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'father(A, _) :- male(A).  [covers 11,0/15,0 pos, 0,0/0,0 neg]' score=-3.2954556654545435
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -2,589288 (regressionFit = 2,589286, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(A), male(B).  [covers 7,0/15,0 pos, 0,0/0,0 neg]
%     Score = -2,916669 (regressionFit = 2,916667, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), female(B).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -1,700002 (regressionFit = 1,700000, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), childof(B, A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -3,181820 (regressionFit = 3,181818, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- male(A), siblingof(A, _).  [covers 4,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'father(A, _) :- female(A).  [covers 1,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: father(A, B) :- childof(B, A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=5.0
Comparing variance: -1.1102230246251566E-17 to score=0.0025 #egs=10.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 143 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      father(A, B) :- childof(B, A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #1 @ 13:51:59 7/14/21.  [Using 4.319.000 memory cells.]  %%%%%


% FOR father(A, B):
%   if ( childof(B, A), male(B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


% Clauses:

father(A, B, 0.8581489350995122) :- 
     childof(B, A), 
     male(B), 
     !. // Clause #1.

father(A, B, -0.1418510649004878) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_father(a, b, 0.8581489350995122) :-  /* #pos=5 */ 
   childof(b, a),
   male(b),
   !. // Flattened version of clause #1.

flattened_father(underscore, underscore, -0.1418510649004878) :-  /* #neg=10 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   childof(b, a)
%   male(b)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/father.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2295918367346937
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 0 1 2 3 5 6 7 8 9 11
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 0,0/14,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 0,0/14,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 0,0/14,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:51:59 7/14/21.  [Using 4.318.824 memory cells.]  %%%%%


% FOR father(A, B):
%   return 0;  // std dev = 0,479, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */


% Clauses:

father(A, B, 0) :- !. // Clause #1.


% The flattened versions of these clauses:

flattened_father(underscore, underscore, 0) :-  /* #neg=9 #pos=5 */ 
   !. // Flattened version of clause #1.


% The unique flattened literals:

% Learning 1 trees in this iteration for mother

% Learn model for: mother
% Kept 5 of the 5 positive examples.
% Kept 10 of the 21 negative examples.
% Time taken to learn 1 trees is 1,371 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2222222222222222
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 11 of the 21 negative examples.
% Dataset size: 16
Computing probabilities
prob time:3 milliseconds
No hidden examples for : mother
Time to build dataset: 4 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.1599016786450143
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 0 1 2 3 4 5 6 7 8 9
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -2,548514 (regressionFit = 2,548513, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,548514): mother(A, _) :- male(A).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,523372 (regressionFit = 1,523371, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1,523372): mother(_, A) :- male(A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,833334 (regressionFit = 0,833333, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,833334): mother(_, A) :- female(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,616552 (regressionFit = 0,616551, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,616552): mother(A, B) :- childof(B, A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -2,495928 (regressionFit = 2,495927, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]' score=-0.6165518169421492
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -1,265787 (regressionFit = 1,265785, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,021866 (regressionFit = 0,021864, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,021866): mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,270636 (regressionFit = 1,270633, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 3,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]' score=-0.8333344533333334
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -1,448990 (regressionFit = 1,448988, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,021866 (regressionFit = 0,021864, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,270636 (regressionFit = 1,270633, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 3,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]' score=-1.523371863328091
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -1,937395 (regressionFit = 1,937393, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -2,213410 (regressionFit = 2,213408, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 4,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]' score=-2.4959280883202273
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 43 bad extensions.
%     Score = -2,472072 (regressionFit = 2,472070, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,762268 (regressionFit = 1,762265, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -2,470680 (regressionFit = 2,470678, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,236934 (regressionFit = 1,236932, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,236934 (regressionFit = 1,236932, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,236934 (regressionFit = 1,236932, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -2,495929 (regressionFit = 2,495927, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -2,495929 (regressionFit = 2,495927, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -2,495929 (regressionFit = 2,495927, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 12,0/16,0 pos, 0,0/0,0 neg]' score=-2.5485139398430756
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -1,937395 (regressionFit = 1,937393, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,448990 (regressionFit = 1,448988, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,265787 (regressionFit = 1,265785, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -2,551277 (regressionFit = 2,551275, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 6,0/16,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=5.0
Comparing variance: 0.001987637271610261 to score=0.0025 #egs=11.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 222 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #2 @ 13:51:59 7/14/21.  [Using 4.054.816 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( childof(B, A), female(B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1395429975520872;  // std dev = 0,148, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


% Clauses:

mother(A, B, 0.7194734122109545) :- 
     childof(B, A), 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.1395429975520872) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_mother(a, b, 0.7194734122109545) :-  /* #pos=5 */ 
   childof(b, a),
   female(b),
   !. // Flattened version of clause #1.

flattened_mother(underscore, underscore, -0.1395429975520872) :-  /* #neg=11 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   female(b)
%   childof(b, a)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/mother.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.7963374191941668
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 0 3 6 10 17 23
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 25,0/25,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 25,0/25,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 25,0/25,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -16,769471 (regressionFit = 16,769469, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 17,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -16,769471): mother(A, _) :- male(A).  [covers 17,0/25,0 pos, 0,0/0,0 neg]
%     Score = -2,872751 (regressionFit = 2,872750, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 13,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,872751): mother(_, A) :- male(A).  [covers 13,0/25,0 pos, 0,0/0,0 neg]
%     Score = -0,031474 (regressionFit = 0,031473, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 10,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,031474): mother(_, A) :- female(A).  [covers 10,0/25,0 pos, 0,0/0,0 neg]
%     Score = -2,711414 (regressionFit = 2,711413, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 11,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686028 (regressionFit = 8,686027, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -16,333640 (regressionFit = 16,333639, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 15,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686028 (regressionFit = 8,686027, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686028 (regressionFit = 8,686027, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 10,0/25,0 pos, 0,0/0,0 neg]' score=-0.03147383467104096
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -2,957538 (regressionFit = 2,957536, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -0,031475 (regressionFit = 0,031473, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 10,0/25,0 pos, 0,0/0,0 neg]
%     Score = -5,351589 (regressionFit = 5,351587, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 11,0/25,0 pos, 0,0/0,0 neg]' score=-2.711413569912721
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -2,957538 (regressionFit = 2,957536, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -0,031475 (regressionFit = 0,031473, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 10,0/25,0 pos, 0,0/0,0 neg]
%     Score = -5,351589 (regressionFit = 5,351587, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 13,0/25,0 pos, 0,0/0,0 neg]' score=-2.8727513023941653
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -7,087996 (regressionFit = 7,087995, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 9,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -7,087997 (regressionFit = 7,087995, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 9,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 6,0/25,0 pos, 0,0/0,0 neg]' score=-8.686028170425764
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]' score=-8.686028170425764
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]' score=-8.686028380425766
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 15,0/25,0 pos, 0,0/0,0 neg]' score=-16.33364036903932
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -14,594317 (regressionFit = 14,594315, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 11,0/25,0 pos, 0,0/0,0 neg]
%     Score = -4,355998 (regressionFit = 4,355996, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 9,0/25,0 pos, 0,0/0,0 neg]
%     Score = -16,166784 (regressionFit = 16,166782, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 15,0/25,0 pos, 0,0/0,0 neg]
%     Score = -5,433893 (regressionFit = 5,433890, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -5,433893 (regressionFit = 5,433890, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -5,433892 (regressionFit = 5,433890, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,124301 (regressionFit = 8,124299, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -16,333641 (regressionFit = 16,333639, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 15,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,124301 (regressionFit = 8,124299, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,124301 (regressionFit = 8,124299, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,124301 (regressionFit = 8,124299, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -16,333641 (regressionFit = 16,333639, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 15,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,124301 (regressionFit = 8,124299, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -16,333641 (regressionFit = 16,333639, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 15,0/25,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 17,0/25,0 pos, 0,0/0,0 neg]' score=-16.769470581889333
%  At # nodes expanded = 9, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -7,087996 (regressionFit = 7,087995, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 9,0/25,0 pos, 0,0/0,0 neg]
%     Score = -2,957538 (regressionFit = 2,957536, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -2,957538 (regressionFit = 2,957536, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -14,568445 (regressionFit = 14,568442, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 11,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -8,686029 (regressionFit = 8,686027, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 6,0/25,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 10,0/25,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 10,0/25,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(_, A) :- female(A).  [covers 10,0/25,0 pos, 0,0/0,0 neg]
Comparing variance: 3.552713678800501E-16 to score=0.0025 #egs=10.0
Comparing variance: 0.0034969682967819337 to score=0.0025 #egs=9.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 15,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,003497)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,003497) into the LAST position (#1) in the search queue.

% Time for loop #1: 457 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(_, A) :- female(A).  [covers 10,0/25,0 pos, 0,0/0,0 neg]
% This clause covers 10 positive examples, of which 10 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 0 1 3 4 5 7 9 11 13 14
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'mother(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,029725 (regressionFit = 0,029724, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,029725): mother(A, _) :- male(A).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 13,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023606 (regressionFit = 0,023605, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,023606): mother(A, B) :- siblingof(A, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,029725 (regressionFit = 0,029724, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023606 (regressionFit = 0,023605, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023606 (regressionFit = 0,023605, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]' score=-0.02360555600327811
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023606 (regressionFit = 0,023605, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]' score=-0.02360555600327811
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023606 (regressionFit = 0,023605, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]' score=-0.02360576600327822
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023606 (regressionFit = 0,023605, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023606 (regressionFit = 0,023605, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'mother(A, _) :- male(A).  [covers 9,0/15,0 pos, 0,0/0,0 neg]' score=-0.029725350522646805
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,029726 (regressionFit = 0,029724, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,032374 (regressionFit = 0,032372, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 7,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 9,0/15,0 pos, 0,0/0,0 neg]' score=-0.029725460522646806
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,066153 (regressionFit = 0,066151, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 7,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,029726 (regressionFit = 0,029724, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,043104 (regressionFit = 0,043102, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,084480 (regressionFit = 0,084478, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,029726 (regressionFit = 0,029724, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,084480 (regressionFit = 0,084478, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,084480 (regressionFit = 0,084478, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,084480 (regressionFit = 0,084478, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,029726 (regressionFit = 0,029724, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,084480 (regressionFit = 0,084478, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,029726 (regressionFit = 0,029724, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 9,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'mother(_, A) :- male(A).  [covers 13,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,029726 (regressionFit = 0,029724, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,029726 (regressionFit = 0,029724, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,023607 (regressionFit = 0,023605, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'mother(A, _) :- female(A).  [covers 1,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,003.
% Will extend: mother(A, B) :- siblingof(A, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
Comparing variance: -9.25185853854297E-18 to score=0.0025 #egs=6.0
Comparing variance: 0.003934089333879685 to score=0.0025 #egs=6.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 6,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 9,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0,003934)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -0,003934) into the LAST position (#1) in the search queue.

% Time for loop #2: 321 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      mother(A, B) :- siblingof(A, B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

***** Warning: % Have only 9 positive examples, so cannot choose 10 of them. *****


% Have these 9 positive seeds: 0 1 2 3 4 5 6 7 8
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 9,0/9,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 9,0/9,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'mother(_, _).  [covers 9,0/9,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,026228 (regressionFit = 0,026227, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,026228): mother(A, _) :- male(A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 7,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,026228 (regressionFit = 0,026227, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 3,0/9,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=1] 'mother(A, _) :- male(A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]' score=-0.026228382225864662
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,026229 (regressionFit = 0,026227, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 1,0/9,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 3,0/9,0 pos, 0,0/0,0 neg]' score=-0.026228492225864663
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 46 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,026229 (regressionFit = 0,026227, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,016819 (regressionFit = 0,016817, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,016819): mother(A, _) :- siblingof(A, B), male(B).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,026230 (regressionFit = 0,026227, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,026229 (regressionFit = 0,026227, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,026229 (regressionFit = 0,026227, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 3,0/9,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1] 'mother(_, A) :- male(A).  [covers 7,0/9,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,026229 (regressionFit = 0,026227, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,026229 (regressionFit = 0,026227, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 3,0/9,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1] 'mother(A, _) :- female(A).  [covers 1,0/9,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 1,0/9,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 3,0/9,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 3,0/9,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -0,004.
% Will extend: mother(A, _) :- siblingof(A, B), male(B).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
Comparing variance: 3.6028277909821993E-4 to score=0.0025 #egs=3.0
Comparing variance: 0.0039340893338796964 to score=0.0025 #egs=4.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 3,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 6,0 < 2.1 * minPosCov = 6,3

% Time for loop #3: 47 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      mother(A, _) :- siblingof(A, B), male(B).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:01 7/14/21.  [Using 4.679.320 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B) )
%   then return 1.5776223473104667;  // std dev = 5,96e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( siblingof(A, B) )
%   | then return -0.26729570342887915;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( siblingof(A, C), male(C) )
%   | | then return -0.08579437956246593;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.20457338416468346;  // std dev = 0,125, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


% Clauses:

mother(A, B, 1.5776223473104667) :- 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.26729570342887915) :- 
     siblingof(A, B), 
     !. // Clause #2.

mother(A, B, -0.08579437956246593) :- 
     siblingof(A, C), 
     male(C), 
     !. // Clause #3.

mother(A, B, -0.20457338416468346) :- !. // Clause #4.


% The flattened versions of these clauses:

flattened_mother(underscore, a, 1.5776223473104667) :-  /* #pos=10 */ 
   female(a),
   !. // Flattened version of clause #1.

flattened_mother(a, b, -0.26729570342887915) :-  /* #neg=6 */ 
   siblingof(a, b),
   !. // Flattened version of clause #2.

flattened_mother(a, underscore, -0.08579437956246593) :-  /* #neg=3 */ 
   siblingof(a, uniqueVar1),
   male(uniqueVar1),
   !. // Flattened version of clause #3.

flattened_mother(underscore, underscore, -0.20457338416468346) :-  /* #neg=6 */ 
   !. // Flattened version of clause #4.


% The unique flattened literals:
%   siblingof(a, b)
%   siblingof(a, uniqueVar1)
%   male(uniqueVar1)
%   female(a)

% Learning 1 trees in this iteration for father

% Learn model for: father
% Kept 5 of the 5 positive examples.
% Kept 12 of the 21 negative examples.
% Time taken to learn 1 trees is 686 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.20761245674740486
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 12 of the 21 negative examples.
% Dataset size: 17
Computing probabilities
prob time:3 milliseconds
No hidden examples for : father
Time to build dataset: 3 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.14821173269173213
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 0 2 3 5 6 7 10 11 13
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 17,0/17,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 17,0/17,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 17,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -2,325231 (regressionFit = 2,325230, penalties=1.12E-6) for clause:  father(A, _) :- male(A).  [covers 10,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,325231): father(A, _) :- male(A).  [covers 10,0/17,0 pos, 0,0/0,0 neg]
%     Score = -1,784717 (regressionFit = 1,784716, penalties=1.12E-6) for clause:  father(_, A) :- male(A).  [covers 10,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1,784717): father(_, A) :- male(A).  [covers 10,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  father(A, _) :- female(A).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -2,082170 (regressionFit = 2,082169, penalties=1.12E-6) for clause:  father(_, A) :- female(A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -1,338538 (regressionFit = 1,338537, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- childof(B, A).  [covers 8,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1,338538): father(A, B) :- childof(B, A).  [covers 8,0/17,0 pos, 0,0/0,0 neg]
%     Score = -2,366025 (regressionFit = 2,366024, penalties=1.23E-6) for clause:  father(A, _) :- siblingof(A, _).  [covers 7,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'father(A, B) :- childof(B, A).  [covers 8,0/17,0 pos, 0,0/0,0 neg]' score=-1.3385382308722054
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -1,225507 (regressionFit = 1,225505, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1,225507): father(A, B) :- childof(B, A), male(A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): father(A, B) :- childof(B, A), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -1,743533 (regressionFit = 1,743531, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- childof(B, A), siblingof(A, _).  [covers 4,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'father(_, A) :- male(A).  [covers 10,0/17,0 pos, 0,0/0,0 neg]' score=-1.7847174011629408
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -1,866305 (regressionFit = 1,866303, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(B), male(A).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), female(A).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), childof(B, A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -2,046477 (regressionFit = 2,046475, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(B), siblingof(A, _).  [covers 5,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'father(_, A) :- female(A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]' score=-2.0821701146900957
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- female(B), male(A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'father(A, _) :- male(A).  [covers 10,0/17,0 pos, 0,0/0,0 neg]' score=-2.3252314748865737
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -1,866305 (regressionFit = 1,866303, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(A), male(B).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), female(B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -1,225507 (regressionFit = 1,225505, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), childof(B, A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -2,361319 (regressionFit = 2,361317, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- male(A), siblingof(A, _).  [covers 4,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'father(A, _) :- siblingof(A, _).  [covers 7,0/17,0 pos, 0,0/0,0 neg]' score=-2.3660250998845833
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 44 bad extensions.
%     Score = -2,332562 (regressionFit = 2,332560, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- siblingof(A, _), male(A).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -2,045718 (regressionFit = 2,045716, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -2,425475 (regressionFit = 2,425473, penalties=2.1300000000000004E-6) for clause:  father(A, _) :- siblingof(A, B), male(B).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -1,730798 (regressionFit = 1,730796, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), childof(B, A).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -1,730798 (regressionFit = 1,730796, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, C), childof(B, C).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -2,366026 (regressionFit = 2,366024, penalties=2.24E-6) for clause:  father(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -2,366026 (regressionFit = 2,366024, penalties=2.0300000000000005E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -2,366026 (regressionFit = 2,366024, penalties=2.1400000000000003E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 7,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'father(A, _) :- female(A).  [covers 1,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: father(A, B) :- childof(B, A), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=5.0
Comparing variance: 0.0 to score=0.0025 #egs=12.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 51 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      father(A, B) :- childof(B, A), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #2 @ 13:52:01 7/14/21.  [Using 4.684.000 memory cells.]  %%%%%


% FOR father(A, B):
%   if ( childof(B, A), male(B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


% Clauses:

father(A, B, 0.7194734122109545) :- 
     childof(B, A), 
     male(B), 
     !. // Clause #1.

father(A, B, -0.12544463852839138) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_father(a, b, 0.7194734122109545) :-  /* #pos=5 */ 
   childof(b, a),
   male(b),
   !. // Flattened version of clause #1.

flattened_father(underscore, underscore, -0.12544463852839138) :-  /* #neg=12 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   childof(b, a)
%   male(b)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/father.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.7963374191941668
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 0 5 10 11 12 14 17 18
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 0,0/25,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 0,0/25,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 0,0/25,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:01 7/14/21.  [Using 4.679.472 memory cells.]  %%%%%


% FOR father(A, B):
%   return 0;  // std dev = 0,892, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */


% Clauses:

father(A, B, 0) :- !. // Clause #1.


% The flattened versions of these clauses:

flattened_father(underscore, underscore, 0) :-  /* #neg=15 #pos=10 */ 
   !. // Flattened version of clause #1.


% The unique flattened literals:

% Learning 1 trees in this iteration for mother

% Learn model for: mother
% Kept 5 of the 5 positive examples.
% Kept 5 of the 21 negative examples.
% Time taken to learn 2 trees is 3,479 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.25
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 11 of the 21 negative examples.
% Dataset size: 16
Computing probabilities
prob time:3 milliseconds
No hidden examples for : mother
Time to build dataset: 3 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.10500073463662753
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 0 2 3 4 5 6 7 8 9
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -1,676979 (regressionFit = 1,676977, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1,676979): mother(A, _) :- male(A).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,099835 (regressionFit = 1,099834, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1,099835): mother(_, A) :- male(A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,934070 (regressionFit = 0,934069, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 7,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,934070): mother(_, A) :- female(A).  [covers 7,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,665704 (regressionFit = 0,665703, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 7,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,665704): mother(A, B) :- childof(B, A).  [covers 7,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,623496 (regressionFit = 1,623495, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 7,0/16,0 pos, 0,0/0,0 neg]' score=-0.6657040659453424
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,826357 (regressionFit = 0,826355, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,033148 (regressionFit = 0,033146, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,033148): mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,169825 (regressionFit = 1,169823, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 4,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 7,0/16,0 pos, 0,0/0,0 neg]' score=-0.9340698047989761
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -1,271341 (regressionFit = 1,271339, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,033148 (regressionFit = 0,033146, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,033148): mother(A, B) :- female(B), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,843913 (regressionFit = 0,843911, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 3,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]' score=-1.099834931329435
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -1,331907 (regressionFit = 1,331905, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,416297 (regressionFit = 1,416295, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 5,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]' score=-1.623495932540965
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 43 bad extensions.
%     Score = -1,621151 (regressionFit = 1,621149, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,959237 (regressionFit = 0,959235, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,608515 (regressionFit = 1,608513, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,813221 (regressionFit = 0,813219, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,145369 (regressionFit = 1,145367, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,145369 (regressionFit = 1,145367, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,623497 (regressionFit = 1,623495, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,623497 (regressionFit = 1,623495, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,623497 (regressionFit = 1,623495, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 12,0/16,0 pos, 0,0/0,0 neg]' score=-1.676978564320845
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -1,331907 (regressionFit = 1,331905, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,271341 (regressionFit = 1,271339, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,826357 (regressionFit = 0,826355, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1,670384 (regressionFit = 1,670382, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 6,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(A, _) :- female(A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, B) :- female(B), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- female(B), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(A, B) :- female(B), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
Comparing variance: -4.4408920985006264E-17 to score=0.0025 #egs=5.0
Comparing variance: 0.0030133020874701074 to score=0.0025 #egs=11.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 11,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,003013)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,003013) into the LAST position (#1) in the search queue.

% Time for loop #1: 86 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(A, B) :- female(B), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 9 positive seeds: 0 2 3 4 5 6 7 8 9
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 11,0/11,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 11,0/11,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'mother(_, _).  [covers 11,0/11,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 16 bad extensions.
%     Score = -0,030385 (regressionFit = 0,030384, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 8,0/11,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,030385): mother(A, _) :- male(A).  [covers 8,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,013505 (regressionFit = 0,013504, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 8,0/11,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,013505): mother(_, A) :- male(A).  [covers 8,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030385 (regressionFit = 0,030384, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,027009 (regressionFit = 0,027008, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030385 (regressionFit = 0,030384, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030385 (regressionFit = 0,030384, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- father(A, B).  [covers 2,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'mother(_, A) :- male(A).  [covers 8,0/11,0 pos, 0,0/0,0 neg]' score=-0.01350517750310682
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -0,024309 (regressionFit = 0,024307, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,027010 (regressionFit = 0,027008, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), father(A, B).  [covers 2,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 5,0/11,0 pos, 0,0/0,0 neg]' score=-0.02700934500621362
%  At # nodes expanded = 3, |OPEN| = 8.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,080056 (regressionFit = 0,080053, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,027010 (regressionFit = 0,027008, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,028979 (regressionFit = 0,028977, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,093317 (regressionFit = 0,093315, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,027010 (regressionFit = 0,027008, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,093317 (regressionFit = 0,093315, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,093317 (regressionFit = 0,093315, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,093317 (regressionFit = 0,093315, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,027010 (regressionFit = 0,027008, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,093317 (regressionFit = 0,093315, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,027010 (regressionFit = 0,027008, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 5,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 3,0/11,0 pos, 0,0/0,0 neg]' score=-0.03038514938199031
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]' score=-0.03038514938199031
%  At # nodes expanded = 5, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'mother(A, _) :- male(A).  [covers 8,0/11,0 pos, 0,0/0,0 neg]' score=-0.030385249381990283
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -0,024309 (regressionFit = 0,024307, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,028939 (regressionFit = 0,028937, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), father(A, B).  [covers 1,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]' score=-0.03038535938199031
%  At # nodes expanded = 7, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,030386 (regressionFit = 0,030384, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'mother(A, _) :- female(A).  [covers 1,0/11,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1] 'mother(_, A) :- female(A).  [covers 2,0/11,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #2 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: mother(_, A) :- male(A).  [covers 8,0/11,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- male(A).  [covers 8,0/11,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,003.
% Will extend: mother(_, A) :- male(A).  [covers 8,0/11,0 pos, 0,0/0,0 neg]
Comparing variance: -1.734723475976807E-18 to score=0.0025 #egs=8.0
Comparing variance: 0.004501352501035606 to score=0.0025 #egs=3.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 3,0 < 2.1 * minPosCov = 6,3

% Time for loop #2: 201 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      mother(_, A) :- male(A).  [covers 8,0/11,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #3 @ 13:52:02 7/14/21.  [Using 4.966.432 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B), childof(B, A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( male(B) )
%   | then return -0.1109184159306057;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.20580100127729198;  // std dev = 0,116, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


% Clauses:

mother(A, B, 0.5553664367462845) :- 
     female(B), 
     childof(B, A), 
     !. // Clause #1.

mother(A, B, -0.1109184159306057) :- 
     male(B), 
     !. // Clause #2.

mother(A, B, -0.20580100127729198) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_mother(a, b, 0.5553664367462845) :-  /* #pos=5 */ 
   female(b),
   childof(b, a),
   !. // Flattened version of clause #1.

flattened_mother(underscore, a, -0.1109184159306057) :-  /* #neg=8 */ 
   male(a),
   !. // Flattened version of clause #2.

flattened_mother(underscore, underscore, -0.20580100127729198) :-  /* #neg=3 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   female(b)
%   childof(b, a)
%   male(a)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/mother.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:1.4676334594451812
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 4 8 10 11 16 19 23 32 33
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 36,0/36,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 36,0/36,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 36,0/36,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -42,867108 (regressionFit = 42,867107, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 25,0/36,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -42,867108): mother(A, _) :- male(A).  [covers 25,0/36,0 pos, 0,0/0,0 neg]
%     Score = -5,345549 (regressionFit = 5,345547, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 18,0/36,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5,345549): mother(_, A) :- male(A).  [covers 18,0/36,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/36,0 pos, 0,0/0,0 neg]
%     Score = -0,056080 (regressionFit = 0,056079, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 15,0/36,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,056080): mother(_, A) :- female(A).  [covers 15,0/36,0 pos, 0,0/0,0 neg]
%     Score = -4,879611 (regressionFit = 4,879610, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 16,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646013 (regressionFit = 15,646012, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -40,275289 (regressionFit = 40,275288, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 22,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646013 (regressionFit = 15,646012, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646013 (regressionFit = 15,646012, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 15,0/36,0 pos, 0,0/0,0 neg]' score=-0.05607962465617592
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -5,381060 (regressionFit = 5,381058, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 12,0/36,0 pos, 0,0/0,0 neg]
%     Score = -0,056081 (regressionFit = 0,056079, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 15,0/36,0 pos, 0,0/0,0 neg]
%     Score = -9,737861 (regressionFit = 9,737859, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 16,0/36,0 pos, 0,0/0,0 neg]' score=-4.879611095153131
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -5,381060 (regressionFit = 5,381058, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 12,0/36,0 pos, 0,0/0,0 neg]
%     Score = -0,056081 (regressionFit = 0,056079, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 15,0/36,0 pos, 0,0/0,0 neg]
%     Score = -9,737861 (regressionFit = 9,737859, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 18,0/36,0 pos, 0,0/0,0 neg]' score=-5.3455485669400495
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -12,792599 (regressionFit = 12,792597, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 13,0/36,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -12,792599 (regressionFit = 12,792597, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 13,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 9,0/36,0 pos, 0,0/0,0 neg]' score=-15.646012978499552
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]' score=-15.646012978499552
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]' score=-15.646013188499554
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 22,0/36,0 pos, 0,0/0,0 neg]' score=-40.27528943061183
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -34,841080 (regressionFit = 34,841078, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 17,0/36,0 pos, 0,0/0,0 neg]
%     Score = -7,849860 (regressionFit = 7,849857, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 13,0/36,0 pos, 0,0/0,0 neg]
%     Score = -39,097146 (regressionFit = 39,097144, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 22,0/36,0 pos, 0,0/0,0 neg]
%     Score = -9,903022 (regressionFit = 9,903019, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -9,903022 (regressionFit = 9,903019, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -9,903021 (regressionFit = 9,903019, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -14,647819 (regressionFit = 14,647816, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -40,275290 (regressionFit = 40,275288, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 22,0/36,0 pos, 0,0/0,0 neg]
%     Score = -14,647819 (regressionFit = 14,647816, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -14,647818 (regressionFit = 14,647816, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -14,647819 (regressionFit = 14,647816, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -40,275290 (regressionFit = 40,275288, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 22,0/36,0 pos, 0,0/0,0 neg]
%     Score = -14,647818 (regressionFit = 14,647816, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -40,275290 (regressionFit = 40,275288, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 22,0/36,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 25,0/36,0 pos, 0,0/0,0 neg]' score=-42.86710813145239
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -12,792599 (regressionFit = 12,792597, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 13,0/36,0 pos, 0,0/0,0 neg]
%     Score = -5,381060 (regressionFit = 5,381058, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 12,0/36,0 pos, 0,0/0,0 neg]
%     Score = -5,381060 (regressionFit = 5,381058, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 12,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -34,844108 (regressionFit = 34,844106, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 17,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -15,646014 (regressionFit = 15,646012, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 9,0/36,0 pos, 0,0/0,0 neg]

***** Warning: #3 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: mother(_, A) :- female(A).  [covers 15,0/36,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 15,0/36,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(_, A) :- female(A).  [covers 15,0/36,0 pos, 0,0/0,0 neg]
Comparing variance: 1.8947806286936005E-15 to score=0.0025 #egs=15.0
Comparing variance: 0.006230944961794166 to score=0.0025 #egs=9.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 21,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,006231)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,006231) into the LAST position (#1) in the search queue.

% Time for loop #1: 236 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(_, A) :- female(A).  [covers 15,0/36,0 pos, 0,0/0,0 neg]
% This clause covers 15 positive examples, of which 15 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 9 positive seeds: 0 6 8 9 10 13 14 16 18
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 21,0/21,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 21,0/21,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'mother(_, _).  [covers 21,0/21,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,066929 (regressionFit = 0,066928, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 13,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,066929): mother(A, _) :- male(A).  [covers 13,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 18,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028146 (regressionFit = 0,028145, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,028146): mother(A, B) :- siblingof(A, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,066929 (regressionFit = 0,066928, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 13,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028146 (regressionFit = 0,028145, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028146 (regressionFit = 0,028145, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 9,0/21,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]' score=-0.02814577789955373
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 9,0/21,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]' score=-0.02814577789955373
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 9,0/21,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 9,0/21,0 pos, 0,0/0,0 neg]' score=-0.02814598789955373
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 9,0/21,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'mother(A, _) :- male(A).  [covers 13,0/21,0 pos, 0,0/0,0 neg]' score=-0.06692887898016367
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,066930 (regressionFit = 0,066928, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 13,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,053834 (regressionFit = 0,053832, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 11,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 9,0/21,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 13,0/21,0 pos, 0,0/0,0 neg]' score=-0.06692898898016285
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,134704 (regressionFit = 0,134702, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 11,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,066930 (regressionFit = 0,066928, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 13,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,154079 (regressionFit = 0,154077, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 13,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,126499 (regressionFit = 0,126497, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,066930 (regressionFit = 0,066928, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 13,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,126499 (regressionFit = 0,126497, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,126499 (regressionFit = 0,126497, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,126499 (regressionFit = 0,126497, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,066930 (regressionFit = 0,066928, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 13,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,126499 (regressionFit = 0,126497, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,066930 (regressionFit = 0,066928, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 13,0/21,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'mother(_, A) :- male(A).  [covers 18,0/21,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,066930 (regressionFit = 0,066928, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 13,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,066930 (regressionFit = 0,066928, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 13,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -0,028147 (regressionFit = 0,028145, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 9,0/21,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 1,0/21,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,006.
% Will extend: mother(A, B) :- siblingof(A, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=9.0
Comparing variance: 0.004690792983258955 to score=0.0025 #egs=6.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 12,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0,004691)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -0,004691) into the LAST position (#1) in the search queue.

% Time for loop #2: 301 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      mother(A, B) :- siblingof(A, B).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
% This clause covers 9 positive examples, of which 9 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 9 positive seeds: 0 1 2 3 4 5 6 7 9
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 12,0/12,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 12,0/12,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'mother(_, _).  [covers 12,0/12,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,028251 (regressionFit = 0,028250, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,028251): mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 9,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 1,0/12,0 pos, 0,0/0,0 neg]
%     Score = -0,028251 (regressionFit = 0,028250, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 4,0/12,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=1] 'mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]' score=-0.028251383471034043
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,028252 (regressionFit = 0,028250, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 2,0/12,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 4,0/12,0 pos, 0,0/0,0 neg]' score=-0.028251493471034044
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 46 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -0,028252 (regressionFit = 0,028250, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
%     Score = -0,035741 (regressionFit = 0,035739, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
%     Score = -0,028253 (regressionFit = 0,028250, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
%     Score = -0,028252 (regressionFit = 0,028250, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
%     Score = -0,028252 (regressionFit = 0,028250, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 4,0/12,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1] 'mother(_, A) :- male(A).  [covers 9,0/12,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,028252 (regressionFit = 0,028250, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 1,0/12,0 pos, 0,0/0,0 neg]
%     Score = -0,028252 (regressionFit = 0,028250, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 4,0/12,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/12,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 1,0/12,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -0,005.
% Will extend: mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
Comparing variance: 5.2752785740114994E-5 to score=0.0025 #egs=4.0
Comparing variance: 0.007009813082018396 to score=0.0025 #egs=4.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 4,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 8,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0,007010)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -0,007010) into the LAST position (#1) in the search queue.

% Time for loop #3: 36 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

***** Warning: % Have only 8 positive examples, so cannot choose 9 of them. *****


% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 8,0/8,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'mother(_, _).  [covers 8,0/8,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 5,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 2,0/8,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=1] 'mother(_, A) :- male(A).  [covers 5,0/8,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 2,0/8,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/8,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#4 of outerLoop #4, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 1,0/8,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #4, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 2,0/8,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (mother(F, G) :- male(F))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:03 7/14/21.  [Using 5.614.648 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B) )
%   then return 2.1329887840567503;  // std dev = 1,69e-07, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( siblingof(A, B) )
%   | then return -0.37821411935948485;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( male(A) )
%   | | then return -0.2600325921299863;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.2600325921299863;  // std dev = 0,078, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


% Clauses:

mother(A, B, 2.1329887840567503) :- 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.37821411935948485) :- 
     siblingof(A, B), 
     !. // Clause #2.

mother(A, B, -0.2600325921299863) :- 
     male(A), 
     !. // Clause #3.

mother(A, B, -0.2600325921299863) :- !. // Clause #4.


% The flattened versions of these clauses:

flattened_mother(underscore, a, 2.1329887840567503) :-  /* #pos=15 */ 
   female(a),
   !. // Flattened version of clause #1.

flattened_mother(a, b, -0.37821411935948485) :-  /* #neg=9 */ 
   siblingof(a, b),
   !. // Flattened version of clause #2.

flattened_mother(a, underscore, -0.2600325921299863) :-  /* #neg=4 */ 
   male(a),
   !. // Flattened version of clause #3.

flattened_mother(underscore, underscore, -0.2600325921299863) :-  /* #neg=8 */ 
   !. // Flattened version of clause #4.


% The unique flattened literals:
%   siblingof(a, b)
%   female(a)
%   male(a)

% Learning 1 trees in this iteration for father

% Learn model for: father
% Kept 5 of the 5 positive examples.
% Kept 11 of the 21 negative examples.
% Time taken to learn 2 trees is 1,241 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.21484375
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 6 of the 21 negative examples.
% Dataset size: 11
Computing probabilities
prob time:5 milliseconds
No hidden examples for : father
Time to build dataset: 5 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.11052901025604712
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 0 1 2 3 4 5 6 8
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 11,0/11,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 11,0/11,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 11,0/11,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -1,098581 (regressionFit = 1,098579, penalties=1.12E-6) for clause:  father(A, _) :- male(A).  [covers 7,0/11,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1,098581): father(A, _) :- male(A).  [covers 7,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,636859 (regressionFit = 0,636858, penalties=1.12E-6) for clause:  father(_, A) :- male(A).  [covers 7,0/11,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,636859): father(_, A) :- male(A).  [covers 7,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,636859 (regressionFit = 0,636858, penalties=1.12E-6) for clause:  father(_, A) :- female(A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,636859 (regressionFit = 0,636858, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- childof(B, A).  [covers 7,0/11,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,636859): father(A, B) :- childof(B, A).  [covers 7,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(A, B).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -1,203662 (regressionFit = 1,203661, penalties=1.23E-6) for clause:  father(A, _) :- siblingof(A, _).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(B, A).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  father(_, A) :- siblingof(A, _).  [covers 1,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'father(A, B) :- childof(B, A).  [covers 7,0/11,0 pos, 0,0/0,0 neg]' score=-0.6368586505229381
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,382117 (regressionFit = 0,382115, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,382117): father(A, B) :- childof(B, A), male(A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 1,38778e-17, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(B).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): father(A, B) :- childof(B, A), male(B).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,971210 (regressionFit = 0,971208, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- childof(B, A), siblingof(A, _).  [covers 4,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'father(_, A) :- male(A).  [covers 7,0/11,0 pos, 0,0/0,0 neg]' score=-0.636858750522938
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,951043 (regressionFit = 0,951041, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(B), male(A).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 1,38778e-17, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), childof(B, A).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(A, B).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -1,129363 (regressionFit = 1,129361, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(B), siblingof(A, _).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(B, A).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  father(_, A) :- male(A), siblingof(A, _).  [covers 1,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'father(_, A) :- female(A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]' score=-0.636858750522938
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 23 bad extensions.

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'father(A, _) :- male(A).  [covers 7,0/11,0 pos, 0,0/0,0 neg]' score=-1.0985805326520681
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,951043 (regressionFit = 0,951041, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(A), male(B).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,382117 (regressionFit = 0,382115, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), childof(B, A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(A, B).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -1,210032 (regressionFit = 1,210029, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- male(A), siblingof(A, _).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(B, A).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(A), siblingof(B, _).  [covers 1,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'father(A, _) :- siblingof(A, _).  [covers 6,0/11,0 pos, 0,0/0,0 neg]' score=-1.203662151688353
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 40 bad extensions.
%     Score = -1,229283 (regressionFit = 1,229281, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- siblingof(A, _), male(A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -1,188656 (regressionFit = 1,188654, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), male(B).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -1,215210 (regressionFit = 1,215208, penalties=2.1300000000000004E-6) for clause:  father(A, _) :- siblingof(A, B), male(B).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -1,013857 (regressionFit = 1,013855, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), childof(B, A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -1,013857 (regressionFit = 1,013855, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, C), childof(B, C).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -1,203663 (regressionFit = 1,203661, penalties=2.24E-6) for clause:  father(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -1,203663 (regressionFit = 1,203661, penalties=2.0300000000000005E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 1,0/11,0 pos, 0,0/0,0 neg]
%     Score = -1,203663 (regressionFit = 1,203661, penalties=2.1400000000000003E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 6,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(A, B).  [covers 1,0/11,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(B, A).  [covers 1,0/11,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'father(_, A) :- siblingof(A, _).  [covers 1,0/11,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/11,0 pos, 0,0/0,0 neg]

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/11,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: father(A, B) :- childof(B, A), male(B).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
Comparing variance: -4.4408920985006264E-17 to score=0.0025 #egs=5.0
Comparing variance: 2.3129646346357427E-18 to score=0.0025 #egs=6.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 6,0 < 2.1 * minPosCov = 6,3

% Time for loop #1: 87 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      father(A, B) :- childof(B, A), male(B).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #3 @ 13:52:03 7/14/21.  [Using 5.656.736 memory cells.]  %%%%%


% FOR father(A, B):
%   if ( childof(B, A), male(B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360639;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


% Clauses:

father(A, B, 0.5553664367462845) :- 
     childof(B, A), 
     male(B), 
     !. // Clause #1.

father(A, B, -0.11231637819360639) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_father(a, b, 0.5553664367462845) :-  /* #pos=5 */ 
   childof(b, a),
   male(b),
   !. // Flattened version of clause #1.

flattened_father(underscore, underscore, -0.11231637819360639) :-  /* #neg=6 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   childof(b, a)
%   male(b)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/father.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:1.4676334594451812
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 1 4 6 7 13 14 16 19
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 0,0/36,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 0,0/36,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 0,0/36,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:04 7/14/21.  [Using 5.651.968 memory cells.]  %%%%%


% FOR father(A, B):
%   return 0;  // std dev = 1,211, 36,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */


% Clauses:

father(A, B, 0) :- !. // Clause #1.


% The flattened versions of these clauses:

flattened_father(underscore, underscore, 0) :-  /* #neg=21 #pos=15 */ 
   !. // Flattened version of clause #1.


% The unique flattened literals:

% Learning 1 trees in this iteration for mother

% Learn model for: mother
% Kept 5 of the 5 positive examples.
% Kept 8 of the 21 negative examples.
% Time taken to learn 3 trees is 5,248 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2366863905325444
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 12 of the 21 negative examples.
% Dataset size: 17
Computing probabilities
prob time:20 milliseconds
No hidden examples for : mother
Time to build dataset: 20 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.05838094568068656
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 1 4 5 10 11 12 14 16
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 17,0/17,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 17,0/17,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 17,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,962000 (regressionFit = 0,961999, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 12,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,962000): mother(A, _) :- male(A).  [covers 12,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,474740 (regressionFit = 0,474739, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 10,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,474740): mother(_, A) :- male(A).  [covers 10,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,334859 (regressionFit = 0,334858, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 6,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,334859): mother(_, A) :- female(A).  [covers 6,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,395596 (regressionFit = 0,395595, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,921644 (regressionFit = 0,921643, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 2,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 6,0/17,0 pos, 0,0/0,0 neg]' score=-0.3348589666514294
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,268827 (regressionFit = 0,268825, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,268827): mother(A, B) :- female(B), male(A).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,012534 (regressionFit = 0,012532, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,012534): mother(A, B) :- female(B), childof(B, A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,488507 (regressionFit = 0,488505, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 3,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 7,0/17,0 pos, 0,0/0,0 neg]' score=-0.39559572056069
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,482371 (regressionFit = 0,482369, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,012534 (regressionFit = 0,012532, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,488507 (regressionFit = 0,488505, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 3,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 10,0/17,0 pos, 0,0/0,0 neg]' score=-0.47473964994008117
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,738787 (regressionFit = 0,738785, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,914818 (regressionFit = 0,914815, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 2,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 7,0/17,0 pos, 0,0/0,0 neg]' score=-0.9216441331538799
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -0,942198 (regressionFit = 0,942196, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,746698 (regressionFit = 0,746696, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,918070 (regressionFit = 0,918068, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,470037 (regressionFit = 0,470035, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,470037 (regressionFit = 0,470035, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,470037 (regressionFit = 0,470035, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,921645 (regressionFit = 0,921643, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,921645 (regressionFit = 0,921643, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,921645 (regressionFit = 0,921643, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 7,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 12,0/17,0 pos, 0,0/0,0 neg]' score=-0.9620000711494484
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,738787 (regressionFit = 0,738785, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,268827 (regressionFit = 0,268825, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,482371 (regressionFit = 0,482369, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,964521 (regressionFit = 0,964519, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 2,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 2,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, B) :- female(B), childof(B, A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- female(B), childof(B, A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(A, B) :- female(B), childof(B, A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
Comparing variance: 4.4408920985006264E-17 to score=0.0025 #egs=5.0
Comparing variance: 0.0010443407533257075 to score=0.0025 #egs=12.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 49 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(A, B) :- female(B), childof(B, A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #4 @ 13:52:04 7/14/21.  [Using 5.457.800 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B), childof(B, A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10941221371775976;  // std dev = 0,112, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


% Clauses:

mother(A, B, 0.4175135841583099) :- 
     female(B), 
     childof(B, A), 
     !. // Clause #1.

mother(A, B, -0.10941221371775976) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_mother(a, b, 0.4175135841583099) :-  /* #pos=5 */ 
   female(b),
   childof(b, a),
   !. // Flattened version of clause #1.

flattened_mother(underscore, underscore, -0.10941221371775976) :-  /* #neg=12 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   female(b)
%   childof(b, a)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/mother.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:2.1099798140263557
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 5 9 11 16 17 25 26 30
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 46,0/46,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 46,0/46,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 46,0/46,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -76,812583 (regressionFit = 76,812581, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 32,0/46,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -76,812583): mother(A, _) :- male(A).  [covers 32,0/46,0 pos, 0,0/0,0 neg]
%     Score = -7,329034 (regressionFit = 7,329032, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 23,0/46,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,329034): mother(_, A) :- male(A).  [covers 23,0/46,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/46,0 pos, 0,0/0,0 neg]
%     Score = -0,065590 (regressionFit = 0,065589, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 20,0/46,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,065590): mother(_, A) :- female(A).  [covers 20,0/46,0 pos, 0,0/0,0 neg]
%     Score = -14,232535 (regressionFit = 14,232534, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 22,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364270 (regressionFit = 22,364269, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -71,155335 (regressionFit = 71,155334, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 28,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364270 (regressionFit = 22,364269, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364270 (regressionFit = 22,364269, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 11,0/46,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 20,0/46,0 pos, 0,0/0,0 neg]' score=-0.0655899305384057
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -7,664533 (regressionFit = 7,664531, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 16,0/46,0 pos, 0,0/0,0 neg]
%     Score = -0,065591 (regressionFit = 0,065589, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 20,0/46,0 pos, 0,0/0,0 neg]
%     Score = -13,881850 (regressionFit = 13,881848, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 12,0/46,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 23,0/46,0 pos, 0,0/0,0 neg]' score=-7.329033554945071
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -18,297886 (regressionFit = 18,297884, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 16,0/46,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -18,297886 (regressionFit = 18,297884, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 16,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 11,0/46,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 22,0/46,0 pos, 0,0/0,0 neg]' score=-14.23253543852465
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -7,664533 (regressionFit = 7,664531, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 16,0/46,0 pos, 0,0/0,0 neg]
%     Score = -0,065591 (regressionFit = 0,065589, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 20,0/46,0 pos, 0,0/0,0 neg]
%     Score = -13,881850 (regressionFit = 13,881848, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 12,0/46,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 11,0/46,0 pos, 0,0/0,0 neg]' score=-22.36426998678501
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 11,0/46,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]' score=-22.36426998678501
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 11,0/46,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 11,0/46,0 pos, 0,0/0,0 neg]' score=-22.36427019678501
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 11,0/46,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 28,0/46,0 pos, 0,0/0,0 neg]' score=-71.15533526334308
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -59,346740 (regressionFit = 59,346738, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 21,0/46,0 pos, 0,0/0,0 neg]
%     Score = -11,233300 (regressionFit = 11,233298, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 16,0/46,0 pos, 0,0/0,0 neg]
%     Score = -69,553411 (regressionFit = 69,553409, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 28,0/46,0 pos, 0,0/0,0 neg]
%     Score = -14,132329 (regressionFit = 14,132327, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 12,0/46,0 pos, 0,0/0,0 neg]
%     Score = -14,132329 (regressionFit = 14,132327, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 12,0/46,0 pos, 0,0/0,0 neg]
%     Score = -14,132329 (regressionFit = 14,132327, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 12,0/46,0 pos, 0,0/0,0 neg]
%     Score = -20,938474 (regressionFit = 20,938472, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -71,155336 (regressionFit = 71,155334, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 28,0/46,0 pos, 0,0/0,0 neg]
%     Score = -20,938474 (regressionFit = 20,938472, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -20,938474 (regressionFit = 20,938472, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -20,938474 (regressionFit = 20,938472, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -71,155336 (regressionFit = 71,155334, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 28,0/46,0 pos, 0,0/0,0 neg]
%     Score = -20,938474 (regressionFit = 20,938472, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -71,155336 (regressionFit = 71,155334, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 28,0/46,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 32,0/46,0 pos, 0,0/0,0 neg]' score=-76.81258260739855
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -18,297886 (regressionFit = 18,297884, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 16,0/46,0 pos, 0,0/0,0 neg]
%     Score = -7,664533 (regressionFit = 7,664531, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 16,0/46,0 pos, 0,0/0,0 neg]
%     Score = -7,664533 (regressionFit = 7,664531, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 16,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -59,296229 (regressionFit = 59,296227, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 21,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 11,0/46,0 pos, 0,0/0,0 neg]
%     Score = -22,364271 (regressionFit = 22,364269, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 11,0/46,0 pos, 0,0/0,0 neg]

***** Warning: #4 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: mother(_, A) :- female(A).  [covers 20,0/46,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 20,0/46,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(_, A) :- female(A).  [covers 20,0/46,0 pos, 0,0/0,0 neg]
Comparing variance: -2.842170943040401E-15 to score=0.0025 #egs=20.0
Comparing variance: 0.007287645615378412 to score=0.0025 #egs=9.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 26,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,007288)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,007288) into the LAST position (#1) in the search queue.

% Time for loop #1: 324 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(_, A) :- female(A).  [covers 20,0/46,0 pos, 0,0/0,0 neg]
% This clause covers 20 positive examples, of which 20 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 0 1 2 4 6 12 13 14
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 26,0/26,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 26,0/26,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'mother(_, _).  [covers 26,0/26,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,111380 (regressionFit = 0,111378, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,111380): mother(A, _) :- male(A).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 23,0/26,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044468 (regressionFit = 0,044467, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,044468): mother(A, B) :- siblingof(A, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,111380 (regressionFit = 0,111378, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044468 (regressionFit = 0,044467, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044468 (regressionFit = 0,044467, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 11,0/26,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]' score=-0.04446796966845954
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 11,0/26,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]' score=-0.04446796966845954
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 11,0/26,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 11,0/26,0 pos, 0,0/0,0 neg]' score=-0.04446817966845954
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 11,0/26,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'mother(A, _) :- male(A).  [covers 16,0/26,0 pos, 0,0/0,0 neg]' score=-0.11137952055857078
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,111380 (regressionFit = 0,111378, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,107181 (regressionFit = 0,107178, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 13,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 11,0/26,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 16,0/26,0 pos, 0,0/0,0 neg]' score=-0.1113796305585699
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,202074 (regressionFit = 0,202072, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 13,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,111381 (regressionFit = 0,111378, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,241488 (regressionFit = 0,241486, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,184480 (regressionFit = 0,184478, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,111381 (regressionFit = 0,111378, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,184480 (regressionFit = 0,184478, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,184480 (regressionFit = 0,184478, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,184480 (regressionFit = 0,184478, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,111380 (regressionFit = 0,111378, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,184480 (regressionFit = 0,184478, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,111381 (regressionFit = 0,111378, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 16,0/26,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'mother(_, A) :- male(A).  [covers 23,0/26,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,111380 (regressionFit = 0,111378, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,111381 (regressionFit = 0,111378, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
%     Score = -0,044469 (regressionFit = 0,044467, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 11,0/26,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/26,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,007.
% Will extend: mother(A, B) :- siblingof(A, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0020010818942578805 to score=0.0025 #egs=11.0
Comparing variance: 0.0037425081386038097 to score=0.0025 #egs=6.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 15,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0,003743)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -0,003743) into the LAST position (#1) in the search queue.

% Time for loop #2: 90 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      mother(A, B) :- siblingof(A, B).  [covers 11,0/26,0 pos, 0,0/0,0 neg]
% This clause covers 11 positive examples, of which 11 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 1 4 5 8 9 10 11 12
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'mother(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,031709 (regressionFit = 0,031708, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,031709): mother(A, _) :- male(A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 12,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,031709 (regressionFit = 0,031708, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 5,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=1] 'mother(A, _) :- male(A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]' score=-0.031708707630248335
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,031710 (regressionFit = 0,031708, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 2,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 5,0/15,0 pos, 0,0/0,0 neg]' score=-0.03170881763024811
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 46 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,031710 (regressionFit = 0,031708, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,015938 (regressionFit = 0,015935, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,015938): mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,031710 (regressionFit = 0,031708, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,031710 (regressionFit = 0,031708, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,031710 (regressionFit = 0,031708, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 5,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1] 'mother(_, A) :- male(A).  [covers 12,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,031710 (regressionFit = 0,031708, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,031710 (regressionFit = 0,031708, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 5,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -0,004.
% Will extend: mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
Comparing variance: 1.787177112646532E-5 to score=0.0025 #egs=5.0
Comparing variance: 0.003961523136722669 to score=0.0025 #egs=4.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 10,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0,003962)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -0,003962) into the LAST position (#1) in the search queue.

% Time for loop #3: 21 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 10,0/10,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 10,0/10,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'mother(_, _).  [covers 10,0/10,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,011441 (regressionFit = 0,011440, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 3,0/10,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,011441): mother(A, _) :- male(A).  [covers 3,0/10,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 7,0/10,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/10,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 2,0/10,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=1] 'mother(A, _) :- male(A).  [covers 3,0/10,0 pos, 0,0/0,0 neg]' score=-0.011441241690402483
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,011442 (regressionFit = 0,011440, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 3,0/10,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1] 'mother(_, A) :- male(A).  [covers 7,0/10,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,011442 (regressionFit = 0,011440, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 3,0/10,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/10,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 2,0/10,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/10,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#5 of outerLoop #4, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 2,0/10,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, _) :- male(A).  [covers 3,0/10,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- male(A).  [covers 3,0/10,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -0,004.
% Will extend: mother(A, _) :- male(A).  [covers 3,0/10,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 6 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      mother(A, _) :- male(A).  [covers 3,0/10,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:05 7/14/21.  [Using 6.116.544 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B) )
%   then return 2.5505023682150614;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( siblingof(A, B) )
%   | then return -0.4512635436192804;  // std dev = 0,148, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( siblingof(A, C), male(C) )
%   | | then return -0.12344931083997875;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( male(A) )
%   | | | then return -0.36773866178609804;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.29109254114942834;  // std dev = 0,107, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


% Clauses:

mother(A, B, 2.5505023682150614) :- 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.4512635436192804) :- 
     siblingof(A, B), 
     !. // Clause #2.

mother(A, B, -0.12344931083997875) :- 
     siblingof(A, C), 
     male(C), 
     !. // Clause #3.

mother(A, B, -0.36773866178609804) :- 
     male(A), 
     !. // Clause #4.

mother(A, B, -0.29109254114942834) :- !. // Clause #5.


% The flattened versions of these clauses:

flattened_mother(underscore, a, 2.5505023682150614) :-  /* #pos=20 */ 
   female(a),
   !. // Flattened version of clause #1.

flattened_mother(a, b, -0.4512635436192804) :-  /* #neg=11 */ 
   siblingof(a, b),
   !. // Flattened version of clause #2.

flattened_mother(a, underscore, -0.12344931083997875) :-  /* #neg=5 */ 
   siblingof(a, uniqueVar2),
   male(uniqueVar2),
   !. // Flattened version of clause #3.

flattened_mother(a, underscore, -0.36773866178609804) :-  /* #neg=3 */ 
   male(a),
   !. // Flattened version of clause #4.

flattened_mother(underscore, underscore, -0.29109254114942834) :-  /* #neg=7 */ 
   !. // Flattened version of clause #5.


% The unique flattened literals:
%   siblingof(a, b)
%   siblingof(a, uniqueVar2)
%   male(uniqueVar2)
%   female(a)
%   male(a)

% Learning 1 trees in this iteration for father

% Learn model for: father
% Kept 5 of the 5 positive examples.
% Kept 12 of the 21 negative examples.
% Time taken to learn 3 trees is 1,864 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.20761245674740486
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 12 of the 21 negative examples.
% Dataset size: 17
Computing probabilities
prob time:115 milliseconds
No hidden examples for : father
Time to build dataset: 117 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.05594638805101236
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 1 2 7 11 13 14 15
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 17,0/17,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 17,0/17,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 17,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,934181 (regressionFit = 0,934180, penalties=1.12E-6) for clause:  father(A, _) :- male(A).  [covers 12,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,934181): father(A, _) :- male(A).  [covers 12,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,866171 (regressionFit = 0,866170, penalties=1.12E-6) for clause:  father(_, A) :- male(A).  [covers 14,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,866171): father(_, A) :- male(A).  [covers 14,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  father(_, A) :- female(A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,384965 (regressionFit = 0,384964, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- childof(B, A).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,384965): father(A, B) :- childof(B, A).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(A, B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,943164 (regressionFit = 0,943163, penalties=1.23E-6) for clause:  father(A, _) :- siblingof(A, _).  [covers 9,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(B, A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  father(_, A) :- siblingof(A, _).  [covers 2,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'father(A, B) :- childof(B, A).  [covers 7,0/17,0 pos, 0,0/0,0 neg]' score=-0.3849654520652994
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,248748 (regressionFit = 0,248746, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(A).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,248748): father(A, B) :- childof(B, A), male(A).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 2,35922e-16, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): father(A, B) :- childof(B, A), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), female(B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,658143 (regressionFit = 0,658141, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- childof(B, A), siblingof(A, _).  [covers 4,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'father(_, A) :- male(A).  [covers 14,0/17,0 pos, 0,0/0,0 neg]' score=-0.8661710921469234
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,910501 (regressionFit = 0,910499, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(B), male(A).  [covers 11,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 2,35922e-16, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), childof(B, A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(A, B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,893120 (regressionFit = 0,893117, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(B), siblingof(A, _).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(B, A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  father(_, A) :- male(A), siblingof(A, _).  [covers 2,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'father(A, _) :- male(A).  [covers 12,0/17,0 pos, 0,0/0,0 neg]' score=-0.9341814751451261
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,910501 (regressionFit = 0,910499, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(A), male(B).  [covers 11,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,248748 (regressionFit = 0,248746, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), childof(B, A).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(A, B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,947248 (regressionFit = 0,947246, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- male(A), siblingof(A, _).  [covers 6,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(B, A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(A), siblingof(B, _).  [covers 2,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'father(A, _) :- siblingof(A, _).  [covers 9,0/17,0 pos, 0,0/0,0 neg]' score=-0.9431640885599829
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 40 bad extensions.
%     Score = -0,943283 (regressionFit = 0,943281, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- siblingof(A, _), male(A).  [covers 6,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,887494 (regressionFit = 0,887492, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), male(B).  [covers 7,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,944966 (regressionFit = 0,944964, penalties=2.1300000000000004E-6) for clause:  father(A, _) :- siblingof(A, B), male(B).  [covers 9,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,632471 (regressionFit = 0,632468, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), childof(B, A).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,632470 (regressionFit = 0,632468, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, C), childof(B, C).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,943165 (regressionFit = 0,943163, penalties=2.24E-6) for clause:  father(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 9,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,943165 (regressionFit = 0,943163, penalties=2.0300000000000005E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 9,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,943165 (regressionFit = 0,943163, penalties=2.1400000000000003E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 9,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'father(_, A) :- female(A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(A, B).  [covers 2,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(B, A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'father(_, A) :- siblingof(A, _).  [covers 2,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: father(A, B) :- childof(B, A), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
Comparing variance: 4.4408920985006264E-17 to score=0.0025 #egs=5.0
Comparing variance: 1.1564823173178713E-18 to score=0.0025 #egs=12.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 451 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      father(A, B) :- childof(B, A), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #4 @ 13:52:06 7/14/21.  [Using 6.134.912 memory cells.]  %%%%%


% FOR father(A, B):
%   if ( childof(B, A), male(B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


% Clauses:

father(A, B, 0.4175135841583099) :- 
     childof(B, A), 
     male(B), 
     !. // Clause #1.

father(A, B, -0.10159632948783627) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_father(a, b, 0.4175135841583099) :-  /* #pos=5 */ 
   childof(b, a),
   male(b),
   !. // Flattened version of clause #1.

flattened_father(underscore, underscore, -0.10159632948783627) :-  /* #neg=12 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   childof(b, a)
%   male(b)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/father.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:2.1099798140263557
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 4 12 16 18 20 25 27 28
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 0,0/46,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 0,0/46,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 0,0/46,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:06 7/14/21.  [Using 6.130.216 memory cells.]  %%%%%


% FOR father(A, B):
%   return 0;  // std dev = 1,453, 46,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */


% Clauses:

father(A, B, 0) :- !. // Clause #1.


% The flattened versions of these clauses:

flattened_father(underscore, underscore, 0) :-  /* #neg=26 #pos=20 */ 
   !. // Flattened version of clause #1.


% The unique flattened literals:

% Learning 1 trees in this iteration for mother

% Learn model for: mother
% Kept 5 of the 5 positive examples.
% Kept 10 of the 21 negative examples.
% Time taken to learn 4 trees is 6,247 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2222222222222222
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 9 of the 21 negative examples.
% Dataset size: 14
Computing probabilities
prob time:10 milliseconds
No hidden examples for : mother
Time to build dataset: 11 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.04749093388885037
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 0 1 2 3 4 5 7 8
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,651710 (regressionFit = 0,651709, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 10,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,651710): mother(A, _) :- male(A).  [covers 10,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,544194 (regressionFit = 0,544193, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,544194): mother(_, A) :- male(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,505231 (regressionFit = 0,505230, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,505231): mother(_, A) :- female(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,262638 (regressionFit = 0,262637, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,262638): mother(A, B) :- childof(B, A).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,593338 (regressionFit = 0,593337, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 6,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 7,0/14,0 pos, 0,0/0,0 neg]' score=-0.2626382731350779
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,203194 (regressionFit = 0,203192, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,203194): mother(A, B) :- childof(B, A), male(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,023652 (regressionFit = 0,023650, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,023652): mother(A, B) :- childof(B, A), female(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,474857 (regressionFit = 0,474855, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 4,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]' score=-0.5052306597869453
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,528162 (regressionFit = 0,528160, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,023652 (regressionFit = 0,023650, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,023652): mother(A, B) :- female(B), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,350093 (regressionFit = 0,350091, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]' score=-0.5441943268898771
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,605632 (regressionFit = 0,605630, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 6,0/14,0 pos, 0,0/0,0 neg]' score=-0.5933377306882701
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 44 bad extensions.
%     Score = -0,617909 (regressionFit = 0,617906, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,596752 (regressionFit = 0,596750, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,342210 (regressionFit = 0,342207, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,469313 (regressionFit = 0,469310, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,469312 (regressionFit = 0,469310, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,593339 (regressionFit = 0,593337, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,593339 (regressionFit = 0,593337, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,593339 (regressionFit = 0,593337, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 6,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 10,0/14,0 pos, 0,0/0,0 neg]' score=-0.6517103632739187
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,605632 (regressionFit = 0,605630, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,528162 (regressionFit = 0,528160, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,203194 (regressionFit = 0,203192, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,626139 (regressionFit = 0,626137, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 4,0/14,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- female(B), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- female(B), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(A, B) :- female(B), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
Comparing variance: -2.2204460492503132E-17 to score=0.0025 #egs=5.0
Comparing variance: 0.0026277435049121803 to score=0.0025 #egs=9.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 9,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,002628)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,002628) into the LAST position (#1) in the search queue.

% Time for loop #1: 85 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(A, B) :- female(B), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 9,0/9,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 9,0/9,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'mother(_, _).  [covers 9,0/9,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,023648 (regressionFit = 0,023647, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 6,0/9,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,023648): mother(A, _) :- male(A).  [covers 6,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,009907 (regressionFit = 0,009906, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 5,0/9,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,009907): mother(_, A) :- male(A).  [covers 5,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,000049 (regressionFit = 0,000047, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000049): mother(_, A) :- female(A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,017333 (regressionFit = 0,017332, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 1,0/9,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'mother(_, A) :- female(A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]' score=-4.86025657001618E-5
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 2,0/9,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'mother(_, A) :- male(A).  [covers 5,0/9,0 pos, 0,0/0,0 neg]' score=-0.009906637213642926
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,018154 (regressionFit = 0,018152, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 1,0/9,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 3,0/9,0 pos, 0,0/0,0 neg]' score=-0.017333242017471544
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,018071 (regressionFit = 0,018069, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,017334 (regressionFit = 0,017332, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,017334 (regressionFit = 0,017332, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -0,017334 (regressionFit = 0,017332, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 3,0/9,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'mother(A, _) :- male(A).  [covers 6,0/9,0 pos, 0,0/0,0 neg]' score=-0.023647646039829606
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,018154 (regressionFit = 0,018152, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 1,0/9,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 2,0/9,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 1,0/9,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 1,0/9,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 1,0/9,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(_, A) :- female(A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,003.
% Will extend: mother(_, A) :- female(A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
Comparing variance: -4.625929269271485E-18 to score=0.0025 #egs=3.0
Comparing variance: 7.913760950026966E-6 to score=0.0025 #egs=6.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 3,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 6,0 < 2.1 * minPosCov = 6,3

% Time for loop #2: 52 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      mother(_, A) :- female(A).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #5 @ 13:52:06 7/14/21.  [Using 6.204.016 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B), childof(B, A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( female(B) )
%   | then return -0.19835503727575554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08972214865884202;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


% Clauses:

mother(A, B, 0.32071184716014967) :- 
     female(B), 
     childof(B, A), 
     !. // Clause #1.

mother(A, B, -0.19835503727575554) :- 
     female(B), 
     !. // Clause #2.

mother(A, B, -0.08972214865884202) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_mother(a, b, 0.32071184716014967) :-  /* #pos=5 */ 
   female(b),
   childof(b, a),
   !. // Flattened version of clause #1.

flattened_mother(underscore, a, -0.19835503727575554) :-  /* #neg=3 */ 
   female(a),
   !. // Flattened version of clause #2.

flattened_mother(underscore, underscore, -0.08972214865884202) :-  /* #neg=6 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   female(b)
%   childof(b, a)
%   female(a)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/mother.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:2.6746220057368437
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 3 12 17 22 27 34 44 46
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 54,0/54,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 54,0/54,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 54,0/54,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -112,621262 (regressionFit = 112,621261, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 38,0/54,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -112,621262): mother(A, _) :- male(A).  [covers 38,0/54,0 pos, 0,0/0,0 neg]
%     Score = -8,982112 (regressionFit = 8,982111, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 26,0/54,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8,982112): mother(_, A) :- male(A).  [covers 26,0/54,0 pos, 0,0/0,0 neg]
%     Score = -0,068054 (regressionFit = 0,068053, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 25,0/54,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,068054): mother(_, A) :- female(A).  [covers 25,0/54,0 pos, 0,0/0,0 neg]
%     Score = -27,570550 (regressionFit = 27,570549, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 28,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165354 (regressionFit = 28,165353, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -100,864481 (regressionFit = 100,864480, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 32,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165354 (regressionFit = 28,165353, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165354 (regressionFit = 28,165353, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 12,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 25,0/54,0 pos, 0,0/0,0 neg]' score=-0.0680541833219547
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -9,613945 (regressionFit = 9,613943, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 20,0/54,0 pos, 0,0/0,0 neg]
%     Score = -0,068055 (regressionFit = 0,068053, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 25,0/54,0 pos, 0,0/0,0 neg]
%     Score = -17,424219 (regressionFit = 17,424217, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 15,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 26,0/54,0 pos, 0,0/0,0 neg]' score=-8.982111938959775
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -22,911196 (regressionFit = 22,911194, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 18,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -23,262333 (regressionFit = 23,262331, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 17,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 12,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 28,0/54,0 pos, 0,0/0,0 neg]' score=-27.570549623976135
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -9,613945 (regressionFit = 9,613943, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 20,0/54,0 pos, 0,0/0,0 neg]
%     Score = -0,068055 (regressionFit = 0,068053, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 25,0/54,0 pos, 0,0/0,0 neg]
%     Score = -17,424219 (regressionFit = 17,424217, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 15,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 12,0/54,0 pos, 0,0/0,0 neg]' score=-28.16535426916159
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 12,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]' score=-28.16535426916159
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 12,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 12,0/54,0 pos, 0,0/0,0 neg]' score=-28.16535447916159
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 12,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 32,0/54,0 pos, 0,0/0,0 neg]' score=-100.86448146326309
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -83,749348 (regressionFit = 83,749346, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 24,0/54,0 pos, 0,0/0,0 neg]
%     Score = -14,282219 (regressionFit = 14,282217, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 17,0/54,0 pos, 0,0/0,0 neg]
%     Score = -98,048448 (regressionFit = 98,048446, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 32,0/54,0 pos, 0,0/0,0 neg]
%     Score = -17,828607 (regressionFit = 17,828605, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 15,0/54,0 pos, 0,0/0,0 neg]
%     Score = -17,828607 (regressionFit = 17,828605, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 15,0/54,0 pos, 0,0/0,0 neg]
%     Score = -17,828607 (regressionFit = 17,828605, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 15,0/54,0 pos, 0,0/0,0 neg]
%     Score = -26,244698 (regressionFit = 26,244696, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -100,864482 (regressionFit = 100,864480, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 32,0/54,0 pos, 0,0/0,0 neg]
%     Score = -26,244698 (regressionFit = 26,244696, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -26,244698 (regressionFit = 26,244696, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -26,244698 (regressionFit = 26,244696, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -100,864482 (regressionFit = 100,864480, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 32,0/54,0 pos, 0,0/0,0 neg]
%     Score = -26,244698 (regressionFit = 26,244696, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -100,864482 (regressionFit = 100,864480, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 32,0/54,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 38,0/54,0 pos, 0,0/0,0 neg]' score=-112.62126210441761
%  At # nodes expanded = 9, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -22,911196 (regressionFit = 22,911194, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 18,0/54,0 pos, 0,0/0,0 neg]
%     Score = -9,613945 (regressionFit = 9,613943, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 20,0/54,0 pos, 0,0/0,0 neg]
%     Score = -9,613945 (regressionFit = 9,613943, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 20,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -83,761391 (regressionFit = 83,761388, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 24,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 12,0/54,0 pos, 0,0/0,0 neg]
%     Score = -28,165355 (regressionFit = 28,165353, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 12,0/54,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 25,0/54,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 25,0/54,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(_, A) :- female(A).  [covers 25,0/54,0 pos, 0,0/0,0 neg]
Comparing variance: -1.1368683772161603E-15 to score=0.0025 #egs=25.0
Comparing variance: 0.00756145148021719 to score=0.0025 #egs=9.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 29,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,007561)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,007561) into the LAST position (#1) in the search queue.

% Time for loop #1: 121 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(_, A) :- female(A).  [covers 25,0/54,0 pos, 0,0/0,0 neg]
% This clause covers 25 positive examples, of which 25 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 0 1 2 5 8 10 12 14
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 29,0/29,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 29,0/29,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'mother(_, _).  [covers 29,0/29,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,095677 (regressionFit = 0,095676, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 18,0/29,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,095677): mother(A, _) :- male(A).  [covers 18,0/29,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 26,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,064979 (regressionFit = 0,064978, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 3,0/29,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,064979): mother(A, B) :- childof(B, A).  [covers 3,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031825 (regressionFit = 0,031824, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,031825): mother(A, B) :- siblingof(A, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,121753 (regressionFit = 0,121752, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 17,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031825 (regressionFit = 0,031824, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031825 (regressionFit = 0,031824, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 12,0/29,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]' score=-0.031825266907906304
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 12,0/29,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]' score=-0.031825266907906304
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 12,0/29,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 12,0/29,0 pos, 0,0/0,0 neg]' score=-0.03182547690790675
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 12,0/29,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 3,0/29,0 pos, 0,0/0,0 neg]' score=-0.064979167777083
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,064980 (regressionFit = 0,064978, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 3,0/29,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'mother(A, _) :- male(A).  [covers 18,0/29,0 pos, 0,0/0,0 neg]' score=-0.09567724965804955
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,095678 (regressionFit = 0,095676, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 18,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,107619 (regressionFit = 0,107617, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 14,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 12,0/29,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 17,0/29,0 pos, 0,0/0,0 neg]' score=-0.12175286789738009
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,258056 (regressionFit = 0,258053, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 14,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,121754 (regressionFit = 0,121752, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 17,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,286995 (regressionFit = 0,286993, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 17,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,237437 (regressionFit = 0,237435, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,121754 (regressionFit = 0,121752, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 17,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,237437 (regressionFit = 0,237435, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,237437 (regressionFit = 0,237435, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,237437 (regressionFit = 0,237435, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,121754 (regressionFit = 0,121752, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 17,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,237437 (regressionFit = 0,237435, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,121754 (regressionFit = 0,121752, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 17,0/29,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'mother(_, A) :- male(A).  [covers 26,0/29,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,095678 (regressionFit = 0,095676, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 18,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,064980 (regressionFit = 0,064978, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 3,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,121754 (regressionFit = 0,121752, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 17,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
%     Score = -0,031826 (regressionFit = 0,031824, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 12,0/29,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,008.
% Will extend: mother(A, B) :- siblingof(A, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
Comparing variance: 1.9898522633436205E-5 to score=0.0025 #egs=12.0
Comparing variance: 0.005264244106050846 to score=0.0025 #egs=6.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 17,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0,005264)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -0,005264) into the LAST position (#1) in the search queue.

% Time for loop #2: 207 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      mother(A, B) :- siblingof(A, B).  [covers 12,0/29,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 12 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 0 6 9 10 11 13 15 16
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 17,0/17,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 17,0/17,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'mother(_, _).  [covers 17,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,066243 (regressionFit = 0,066242, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 6,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,066243): mother(A, _) :- male(A).  [covers 6,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 14,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,031522 (regressionFit = 0,031521, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,031522): mother(A, B) :- childof(B, A).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,038080 (regressionFit = 0,038079, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 5,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 3,0/17,0 pos, 0,0/0,0 neg]' score=-0.03152242155266447
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,031523 (regressionFit = 0,031521, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 3,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 5,0/17,0 pos, 0,0/0,0 neg]' score=-0.03808009974835517
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 46 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,038081 (regressionFit = 0,038079, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,022309 (regressionFit = 0,022307, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,022309): mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,038081 (regressionFit = 0,038079, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,038081 (regressionFit = 0,038079, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,038081 (regressionFit = 0,038079, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 5,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1] 'mother(A, _) :- male(A).  [covers 6,0/17,0 pos, 0,0/0,0 neg]' score=-0.06624276552831929
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,066244 (regressionFit = 0,066242, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 6,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 2,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1] 'mother(_, A) :- male(A).  [covers 14,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,066244 (regressionFit = 0,066242, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 6,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,031523 (regressionFit = 0,031521, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -0,038081 (regressionFit = 0,038079, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 5,0/17,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/17,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -0,005.
% Will extend: mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
Comparing variance: 1.787177112646532E-5 to score=0.0025 #egs=5.0
Comparing variance: 0.005554343666249434 to score=0.0025 #egs=4.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 12,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0,005554)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -0,005554) into the LAST position (#1) in the search queue.

% Time for loop #3: 259 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      mother(A, _) :- siblingof(A, B), male(B).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 12,0/12,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 12,0/12,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'mother(_, _).  [covers 12,0/12,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,008080 (regressionFit = 0,008079, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,008080): mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 9,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -0,021545 (regressionFit = 0,021544, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 3,0/12,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=1] 'mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]' score=-0.00808010893953457
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,008081 (regressionFit = 0,008079, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 4,0/12,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 3,0/12,0 pos, 0,0/0,0 neg]' score=-0.021545197280462596
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,021546 (regressionFit = 0,021544, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 3,0/12,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1] 'mother(_, A) :- male(A).  [covers 9,0/12,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,008081 (regressionFit = 0,008079, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -0,021546 (regressionFit = 0,021544, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 3,0/12,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/12,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -0,006.
% Will extend: mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 20 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      mother(A, _) :- male(A).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:07 7/14/21.  [Using 6.869.608 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B) )
%   then return 2.8712142153752103;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( siblingof(A, B) )
%   | then return -0.47550283274893673;  // std dev = 0,015, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( siblingof(A, C), male(C) )
%   | | then return -0.12344931083997875;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( male(A) )
%   | | | then return -0.458718885240016;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.3214192823007343;  // std dev = 0,090, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


% Clauses:

mother(A, B, 2.8712142153752103) :- 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.47550283274893673) :- 
     siblingof(A, B), 
     !. // Clause #2.

mother(A, B, -0.12344931083997875) :- 
     siblingof(A, C), 
     male(C), 
     !. // Clause #3.

mother(A, B, -0.458718885240016) :- 
     male(A), 
     !. // Clause #4.

mother(A, B, -0.3214192823007343) :- !. // Clause #5.


% The flattened versions of these clauses:

flattened_mother(underscore, a, 2.8712142153752103) :-  /* #pos=25 */ 
   female(a),
   !. // Flattened version of clause #1.

flattened_mother(a, b, -0.47550283274893673) :-  /* #neg=12 */ 
   siblingof(a, b),
   !. // Flattened version of clause #2.

flattened_mother(a, underscore, -0.12344931083997875) :-  /* #neg=5 */ 
   siblingof(a, uniqueVar3),
   male(uniqueVar3),
   !. // Flattened version of clause #3.

flattened_mother(a, underscore, -0.458718885240016) :-  /* #neg=4 */ 
   male(a),
   !. // Flattened version of clause #4.

flattened_mother(underscore, underscore, -0.3214192823007343) :-  /* #neg=8 */ 
   !. // Flattened version of clause #5.


% The unique flattened literals:
%   siblingof(a, b)
%   male(uniqueVar3)
%   siblingof(a, uniqueVar3)
%   female(a)
%   male(a)

% Learning 1 trees in this iteration for father

% Learn model for: father
% Kept 5 of the 5 positive examples.
% Kept 10 of the 21 negative examples.
% Time taken to learn 4 trees is 2,691 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2222222222222222
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 10 of the 21 negative examples.
% Dataset size: 15
Computing probabilities
prob time:15 milliseconds
No hidden examples for : father
Time to build dataset: 18 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.03797825386556624
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 0 2 3 4 6 8 10 11
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,563201 (regressionFit = 0,563200, penalties=1.12E-6) for clause:  father(A, _) :- male(A).  [covers 11,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,563201): father(A, _) :- male(A).  [covers 11,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,379784 (regressionFit = 0,379783, penalties=1.12E-6) for clause:  father(_, A) :- male(A).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,379784): father(_, A) :- male(A).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,498466 (regressionFit = 0,498465, penalties=1.12E-6) for clause:  father(_, A) :- female(A).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,142419 (regressionFit = 0,142418, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- childof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,142419): father(A, B) :- childof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(A, B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,564589 (regressionFit = 0,564587, penalties=1.23E-6) for clause:  father(A, _) :- siblingof(A, _).  [covers 8,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  father(_, A) :- siblingof(A, _).  [covers 2,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'father(A, B) :- childof(B, A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]' score=-0.14241947199587326
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,155368 (regressionFit = 0,155366, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(A).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): father(A, B) :- childof(B, A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,407837 (regressionFit = 0,407835, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- childof(B, A), siblingof(A, _).  [covers 4,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'father(_, A) :- male(A).  [covers 9,0/15,0 pos, 0,0/0,0 neg]' score=-0.3797836586556622
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,488294 (regressionFit = 0,488292, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(B), male(A).  [covers 8,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), childof(B, A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(A, B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,478528 (regressionFit = 0,478526, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(B), siblingof(A, _).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  father(_, A) :- male(A), siblingof(A, _).  [covers 2,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'father(_, A) :- female(A).  [covers 3,0/15,0 pos, 0,0/0,0 neg]' score=-0.4984657019855567
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 23 bad extensions.

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'father(A, _) :- male(A).  [covers 11,0/15,0 pos, 0,0/0,0 neg]' score=-0.5632013619836808
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,488294 (regressionFit = 0,488292, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(A), male(B).  [covers 8,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,155368 (regressionFit = 0,155366, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), childof(B, A).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(A, B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,569676 (regressionFit = 0,569674, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- male(A), siblingof(A, _).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(A), siblingof(B, _).  [covers 2,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'father(A, _) :- siblingof(A, _).  [covers 8,0/15,0 pos, 0,0/0,0 neg]' score=-0.5645886646979263
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 40 bad extensions.
%     Score = -0,558266 (regressionFit = 0,558264, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- siblingof(A, _), male(A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,466864 (regressionFit = 0,466861, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,559923 (regressionFit = 0,559921, penalties=2.1300000000000004E-6) for clause:  father(A, _) :- siblingof(A, B), male(B).  [covers 8,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,390914 (regressionFit = 0,390912, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), childof(B, A).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,390914 (regressionFit = 0,390912, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, C), childof(B, C).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,564590 (regressionFit = 0,564587, penalties=2.24E-6) for clause:  father(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 8,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,564589 (regressionFit = 0,564587, penalties=2.0300000000000005E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 8,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,564590 (regressionFit = 0,564587, penalties=2.1400000000000003E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 8,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(A, B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'father(_, A) :- siblingof(A, _).  [covers 2,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: father(A, B) :- childof(B, A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
Comparing variance: -2.2204460492503132E-17 to score=0.0025 #egs=5.0
Comparing variance: 0.0 to score=0.0025 #egs=10.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 157 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      father(A, B) :- childof(B, A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #5 @ 13:52:07 7/14/21.  [Using 6.866.744 memory cells.]  %%%%%


% FOR father(A, B):
%   if ( childof(B, A), male(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


% Clauses:

father(A, B, 0.32071184716014967) :- 
     childof(B, A), 
     male(B), 
     !. // Clause #1.

father(A, B, -0.09269127618926097) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_father(a, b, 0.32071184716014967) :-  /* #pos=5 */ 
   childof(b, a),
   male(b),
   !. // Flattened version of clause #1.

flattened_father(underscore, underscore, -0.09269127618926097) :-  /* #neg=10 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   childof(b, a)
%   male(b)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/father.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:2.6746220057368437
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 10 14 21 26 29 34 35 39
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 0,0/54,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 0,0/54,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 0,0/54,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:07 7/14/21.  [Using 6.862.080 memory cells.]  %%%%%


% FOR father(A, B):
%   return 0;  // std dev = 1,635, 54,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */


% Clauses:

father(A, B, 0) :- !. // Clause #1.


% The flattened versions of these clauses:

flattened_father(underscore, underscore, 0) :-  /* #neg=29 #pos=25 */ 
   !. // Flattened version of clause #1.


% The unique flattened literals:

% Learning 1 trees in this iteration for mother

% Learn model for: mother
% Kept 5 of the 5 positive examples.
% Kept 8 of the 21 negative examples.
% Time taken to learn 5 trees is 7,600 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2366863905325444
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 10 of the 21 negative examples.
% Dataset size: 15
Computing probabilities
prob time:3 milliseconds
No hidden examples for : mother
Time to build dataset: 3 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.02892715656411079
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 1 2 4 8 9 12 13 14
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -0,432344 (regressionFit = 0,432343, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 11,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,432344): mother(A, _) :- male(A).  [covers 11,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,256653 (regressionFit = 0,256652, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 8,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,256653): mother(_, A) :- male(A).  [covers 8,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,256653 (regressionFit = 0,256652, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 7,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,174975 (regressionFit = 0,174974, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 7,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,174975): mother(A, B) :- childof(B, A).  [covers 7,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,408958 (regressionFit = 0,408957, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 7,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- father(A, B).  [covers 1,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 7,0/15,0 pos, 0,0/0,0 neg]' score=-0.17497511864877643
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,218396 (regressionFit = 0,218394, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,011524 (regressionFit = 0,011522, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,011524): mother(A, B) :- childof(B, A), female(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,222717 (regressionFit = 0,222715, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), father(A, B).  [covers 1,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 8,0/15,0 pos, 0,0/0,0 neg]' score=-0.2566533413383885
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,356360 (regressionFit = 0,356358, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,377510 (regressionFit = 0,377508, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), father(A, B).  [covers 1,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 7,0/15,0 pos, 0,0/0,0 neg]' score=-0.2566533413383885
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,341696 (regressionFit = 0,341694, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,011524 (regressionFit = 0,011522, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,222717 (regressionFit = 0,222715, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 3,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 7,0/15,0 pos, 0,0/0,0 neg]' score=-0.40895815426543286
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -0,420534 (regressionFit = 0,420532, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,280446 (regressionFit = 0,280444, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,407385 (regressionFit = 0,407383, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 7,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,212335 (regressionFit = 0,212333, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,212335 (regressionFit = 0,212333, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,212335 (regressionFit = 0,212333, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,408959 (regressionFit = 0,408957, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 7,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,408959 (regressionFit = 0,408957, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 7,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,408959 (regressionFit = 0,408957, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 7,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 11,0/15,0 pos, 0,0/0,0 neg]' score=-0.4323440735262337
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -0,356360 (regressionFit = 0,356358, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,341696 (regressionFit = 0,341694, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,218396 (regressionFit = 0,218394, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -0,425283 (regressionFit = 0,425281, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), father(A, B).  [covers 1,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 2,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 2,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 2,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #5 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: mother(A, B) :- childof(B, A), female(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A), female(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(A, B) :- childof(B, A), female(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=5.0
Comparing variance: 0.0011521851360586574 to score=0.0025 #egs=10.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 21 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(A, B) :- childof(B, A), female(B).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #6 @ 13:52:08 7/14/21.  [Using 6.818.896 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( childof(B, A), female(B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1007991736008578;  // std dev = 0,107, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


% Clauses:

mother(A, B, 0.25517224256948945) :- 
     childof(B, A), 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.1007991736008578) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_mother(a, b, 0.25517224256948945) :-  /* #pos=5 */ 
   childof(b, a),
   female(b),
   !. // Flattened version of clause #1.

flattened_mother(underscore, underscore, -0.1007991736008578) :-  /* #neg=10 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   female(b)
%   childof(b, a)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/mother.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:3.1977122272292404
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 17 18 23 42 44 60
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 64,0/64,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 64,0/64,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 64,0/64,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -156,652111 (regressionFit = 156,652110, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 45,0/64,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -156,652111): mother(A, _) :- male(A).  [covers 45,0/64,0 pos, 0,0/0,0 neg]
%     Score = -10,479641 (regressionFit = 10,479640, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 31,0/64,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,479641): mother(_, A) :- male(A).  [covers 31,0/64,0 pos, 0,0/0,0 neg]
%     Score = -0,080874 (regressionFit = 0,080873, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 30,0/64,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,080874): mother(_, A) :- female(A).  [covers 30,0/64,0 pos, 0,0/0,0 neg]
%     Score = -44,396997 (regressionFit = 44,396996, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 34,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634449 (regressionFit = 33,634448, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -143,367458 (regressionFit = 143,367457, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 39,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634449 (regressionFit = 33,634448, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 14,0/64,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 30,0/64,0 pos, 0,0/0,0 neg]' score=-0.0808736888398395
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -11,477581 (regressionFit = 11,477579, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 24,0/64,0 pos, 0,0/0,0 neg]
%     Score = -0,080875 (regressionFit = 0,080873, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 30,0/64,0 pos, 0,0/0,0 neg]
%     Score = -20,802160 (regressionFit = 20,802157, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 18,0/64,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 31,0/64,0 pos, 0,0/0,0 neg]' score=-10.479640979575976
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -27,393655 (regressionFit = 27,393653, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 21,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -27,424734 (regressionFit = 27,424732, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 21,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634451 (regressionFit = 33,634448, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 14,0/64,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 14,0/64,0 pos, 0,0/0,0 neg]' score=-33.63444931226506
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 14,0/64,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]' score=-33.63444931226506
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 14,0/64,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 14,0/64,0 pos, 0,0/0,0 neg]' score=-33.634449522265065
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634451 (regressionFit = 33,634448, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634451 (regressionFit = 33,634448, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 14,0/64,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 34,0/64,0 pos, 0,0/0,0 neg]' score=-44.39699682427563
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -11,477581 (regressionFit = 11,477579, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 24,0/64,0 pos, 0,0/0,0 neg]
%     Score = -0,080875 (regressionFit = 0,080873, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 30,0/64,0 pos, 0,0/0,0 neg]
%     Score = -20,802160 (regressionFit = 20,802157, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 18,0/64,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 39,0/64,0 pos, 0,0/0,0 neg]' score=-143.36745778693154
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -115,988368 (regressionFit = 115,988366, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 29,0/64,0 pos, 0,0/0,0 neg]
%     Score = -16,826234 (regressionFit = 16,826232, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 21,0/64,0 pos, 0,0/0,0 neg]
%     Score = -139,989452 (regressionFit = 139,989450, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 39,0/64,0 pos, 0,0/0,0 neg]
%     Score = -21,197015 (regressionFit = 21,197013, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 18,0/64,0 pos, 0,0/0,0 neg]
%     Score = -21,197015 (regressionFit = 21,197013, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 18,0/64,0 pos, 0,0/0,0 neg]
%     Score = -21,197015 (regressionFit = 21,197013, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 18,0/64,0 pos, 0,0/0,0 neg]
%     Score = -31,541994 (regressionFit = 31,541992, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -143,367459 (regressionFit = 143,367457, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 39,0/64,0 pos, 0,0/0,0 neg]
%     Score = -31,541994 (regressionFit = 31,541992, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -31,541994 (regressionFit = 31,541992, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -31,541994 (regressionFit = 31,541992, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -143,367459 (regressionFit = 143,367457, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 39,0/64,0 pos, 0,0/0,0 neg]
%     Score = -31,541994 (regressionFit = 31,541992, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -143,367459 (regressionFit = 143,367457, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 39,0/64,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 45,0/64,0 pos, 0,0/0,0 neg]' score=-156.6521108491334
%  At # nodes expanded = 9, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -27,393655 (regressionFit = 27,393653, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 21,0/64,0 pos, 0,0/0,0 neg]
%     Score = -11,477581 (regressionFit = 11,477579, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 24,0/64,0 pos, 0,0/0,0 neg]
%     Score = -11,477581 (regressionFit = 11,477579, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 24,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -115,900016 (regressionFit = 115,900014, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 29,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 14,0/64,0 pos, 0,0/0,0 neg]
%     Score = -33,634450 (regressionFit = 33,634448, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 14,0/64,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 30,0/64,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 30,0/64,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(_, A) :- female(A).  [covers 30,0/64,0 pos, 0,0/0,0 neg]
Comparing variance: -3.789561257387201E-15 to score=0.0025 #egs=30.0
Comparing variance: 0.00898584098220439 to score=0.0025 #egs=9.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 34,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,008986)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,008986) into the LAST position (#1) in the search queue.

% Time for loop #1: 326 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(_, A) :- female(A).  [covers 30,0/64,0 pos, 0,0/0,0 neg]
% This clause covers 30 positive examples, of which 30 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 1 7 10 15 20 28 33
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 34,0/34,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 34,0/34,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'mother(_, _).  [covers 34,0/34,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,151219 (regressionFit = 0,151218, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 21,0/34,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,151219): mother(A, _) :- male(A).  [covers 21,0/34,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 31,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,080620 (regressionFit = 0,080619, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 4,0/34,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,080620): mother(A, B) :- childof(B, A).  [covers 4,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055599 (regressionFit = 0,055598, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,055599): mother(A, B) :- siblingof(A, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,154463 (regressionFit = 0,154462, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 21,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055599 (regressionFit = 0,055598, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055599 (regressionFit = 0,055598, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 14,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]' score=-0.05559896183628819
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 14,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]' score=-0.05559896183628819
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 14,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 14,0/34,0 pos, 0,0/0,0 neg]' score=-0.05559917183628641
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 14,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 4,0/34,0 pos, 0,0/0,0 neg]' score=-0.08061965257737101
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,080621 (regressionFit = 0,080619, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 4,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'mother(A, _) :- male(A).  [covers 21,0/34,0 pos, 0,0/0,0 neg]' score=-0.15121872894539515
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,151220 (regressionFit = 0,151218, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 21,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,151140 (regressionFit = 0,151137, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 17,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 14,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 21,0/34,0 pos, 0,0/0,0 neg]' score=-0.15446288820355683
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,288321 (regressionFit = 0,288319, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 17,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,154464 (regressionFit = 0,154462, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 21,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,381164 (regressionFit = 0,381162, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 21,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,252189 (regressionFit = 0,252187, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,154464 (regressionFit = 0,154462, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 21,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,252189 (regressionFit = 0,252187, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,252189 (regressionFit = 0,252187, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,252189 (regressionFit = 0,252187, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,154464 (regressionFit = 0,154462, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 21,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,252189 (regressionFit = 0,252187, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,154464 (regressionFit = 0,154462, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 21,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'mother(_, A) :- male(A).  [covers 31,0/34,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,151220 (regressionFit = 0,151218, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 21,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,080621 (regressionFit = 0,080619, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 4,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,154464 (regressionFit = 0,154462, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 21,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,055600 (regressionFit = 0,055598, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 14,0/34,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,009.
% Will extend: mother(A, B) :- siblingof(A, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0017761266878379342 to score=0.0025 #egs=14.0
Comparing variance: 0.005122028034426185 to score=0.0025 #egs=6.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 20,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0,005122)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -0,005122) into the LAST position (#1) in the search queue.

% Time for loop #2: 104 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      mother(A, B) :- siblingof(A, B).  [covers 14,0/34,0 pos, 0,0/0,0 neg]
% This clause covers 14 positive examples, of which 14 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 1 2 5 6 11 13 15
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'mother(_, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,048153 (regressionFit = 0,048152, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 7,0/20,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,048153): mother(A, _) :- male(A).  [covers 7,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 17,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,029296 (regressionFit = 0,029295, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 4,0/20,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,029296): mother(A, B) :- childof(B, A).  [covers 4,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,046381 (regressionFit = 0,046380, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 7,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 4,0/20,0 pos, 0,0/0,0 neg]' score=-0.029296010060643845
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,029297 (regressionFit = 0,029295, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 4,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 7,0/20,0 pos, 0,0/0,0 neg]' score=-0.04638095307591298
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 47 bad extensions.
%     Score = -0,046382 (regressionFit = 0,046380, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 7,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,026567 (regressionFit = 0,026564, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 7,0/20,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,026567): mother(A, _) :- siblingof(A, B), male(B).  [covers 7,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,046382 (regressionFit = 0,046380, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 7,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,046382 (regressionFit = 0,046380, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 7,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,046382 (regressionFit = 0,046380, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 7,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1] 'mother(A, _) :- male(A).  [covers 7,0/20,0 pos, 0,0/0,0 neg]' score=-0.04815314489706372
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,048154 (regressionFit = 0,048152, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 7,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1] 'mother(_, A) :- male(A).  [covers 17,0/20,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,048154 (regressionFit = 0,048152, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 7,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,029297 (regressionFit = 0,029295, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 4,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,046382 (regressionFit = 0,046380, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 7,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/20,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 7,0/20,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 7,0/20,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -0,005.
% Will extend: mother(A, _) :- siblingof(A, B), male(B).  [covers 7,0/20,0 pos, 0,0/0,0 neg]
Comparing variance: 4.062859669486306E-4 to score=0.0025 #egs=7.0
Comparing variance: 0.005930111096350527 to score=0.0025 #egs=4.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 13,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0,005930)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -0,005930) into the LAST position (#1) in the search queue.

% Time for loop #3: 150 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      mother(A, _) :- siblingof(A, B), male(B).  [covers 7,0/20,0 pos, 0,0/0,0 neg]
% This clause covers 7 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 0 1 5 8 9 10 11 12
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 13,0/13,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 13,0/13,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'mother(_, _).  [covers 13,0/13,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,014752 (regressionFit = 0,014751, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 4,0/13,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,014752): mother(A, _) :- male(A).  [covers 4,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 10,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,021545 (regressionFit = 0,021544, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 4,0/13,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=1] 'mother(A, _) :- male(A).  [covers 4,0/13,0 pos, 0,0/0,0 neg]' score=-0.014752318593009663
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,014753 (regressionFit = 0,014751, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 4,0/13,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 4,0/13,0 pos, 0,0/0,0 neg]' score=-0.021545197280462596
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,021546 (regressionFit = 0,021544, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 4,0/13,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1] 'mother(_, A) :- male(A).  [covers 10,0/13,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,014753 (regressionFit = 0,014751, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 4,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,021546 (regressionFit = 0,021544, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 4,0/13,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- male(A).  [covers 4,0/13,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- male(A).  [covers 4,0/13,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -0,006.
% Will extend: mother(A, _) :- male(A).  [covers 4,0/13,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 92 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      mother(A, _) :- male(A).  [covers 4,0/13,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:09 7/14/21.  [Using 7.477.264 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B) )
%   then return 3.1263864579447005;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   else if ( siblingof(A, B) )
%   | then return -0.5358300443524067;  // std dev = 0,158, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( siblingof(A, C), male(C) )
%   | | then return -0.15496606826965037;  // std dev = 0,053, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( male(A) )
%   | | | then return -0.458718885240016;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.3493616980511691;  // std dev = 0,121, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


% Clauses:

mother(A, B, 3.1263864579447005) :- 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.5358300443524067) :- 
     siblingof(A, B), 
     !. // Clause #2.

mother(A, B, -0.15496606826965037) :- 
     siblingof(A, C), 
     male(C), 
     !. // Clause #3.

mother(A, B, -0.458718885240016) :- 
     male(A), 
     !. // Clause #4.

mother(A, B, -0.3493616980511691) :- !. // Clause #5.


% The flattened versions of these clauses:

flattened_mother(underscore, a, 3.1263864579447005) :-  /* #pos=30 */ 
   female(a),
   !. // Flattened version of clause #1.

flattened_mother(a, b, -0.5358300443524067) :-  /* #neg=14 */ 
   siblingof(a, b),
   !. // Flattened version of clause #2.

flattened_mother(a, underscore, -0.15496606826965037) :-  /* #neg=7 */ 
   siblingof(a, uniqueVar4),
   male(uniqueVar4),
   !. // Flattened version of clause #3.

flattened_mother(a, underscore, -0.458718885240016) :-  /* #neg=4 */ 
   male(a),
   !. // Flattened version of clause #4.

flattened_mother(underscore, underscore, -0.3493616980511691) :-  /* #neg=9 */ 
   !. // Flattened version of clause #5.


% The unique flattened literals:
%   siblingof(a, b)
%   male(uniqueVar4)
%   siblingof(a, uniqueVar4)
%   female(a)
%   male(a)

% Learning 1 trees in this iteration for father

% Learn model for: father
% Kept 5 of the 5 positive examples.
% Kept 12 of the 21 negative examples.
% Time taken to learn 5 trees is 3,038 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.20761245674740486
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 8 of the 21 negative examples.
% Dataset size: 13
Computing probabilities
prob time:25 milliseconds
No hidden examples for : father
Time to build dataset: 26 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.027418433925691973
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 3 5 6 7 9 10
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 13,0/13,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 13,0/13,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 13,0/13,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  father(A, _) :- male(A).  [covers 11,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,257430 (regressionFit = 0,257429, penalties=1.12E-6) for clause:  father(_, A) :- male(A).  [covers 9,0/13,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,257430): father(_, A) :- male(A).  [covers 9,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  father(A, _) :- female(A).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  father(_, A) :- female(A).  [covers 2,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,096537 (regressionFit = 0,096536, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- childof(B, A).  [covers 6,0/13,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,096537): father(A, B) :- childof(B, A).  [covers 6,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(A, B).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,339255 (regressionFit = 0,339254, penalties=1.23E-6) for clause:  father(A, _) :- siblingof(A, _).  [covers 6,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(B, A).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  father(_, A) :- siblingof(A, _).  [covers 1,0/13,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'father(A, B) :- childof(B, A).  [covers 6,0/13,0 pos, 0,0/0,0 neg]' score=-0.09653675611337383
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,194039 (regressionFit = 0,194037, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(A).  [covers 5,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 1,38778e-17, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(B).  [covers 5,0/13,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): father(A, B) :- childof(B, A), male(B).  [covers 5,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,185351 (regressionFit = 0,185349, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- childof(B, A), siblingof(A, _).  [covers 3,0/13,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'father(_, A) :- male(A).  [covers 9,0/13,0 pos, 0,0/0,0 neg]' score=-0.25742974963566356
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,295125 (regressionFit = 0,295124, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(B), male(A).  [covers 7,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), female(A).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), childof(B, A).  [covers 5,0/13,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): father(A, B) :- male(B), childof(B, A).  [covers 5,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(A, B).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,267084 (regressionFit = 0,267082, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(B), siblingof(A, _).  [covers 4,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(B, A).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  father(_, A) :- male(A), siblingof(A, _).  [covers 1,0/13,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'father(A, _) :- siblingof(A, _).  [covers 6,0/13,0 pos, 0,0/0,0 neg]' score=-0.33925538834128544
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 40 bad extensions.
%     Score = -0,325485 (regressionFit = 0,325483, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- siblingof(A, _), male(A).  [covers 5,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,260623 (regressionFit = 0,260621, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), male(B).  [covers 4,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,326535 (regressionFit = 0,326533, penalties=2.1300000000000004E-6) for clause:  father(A, _) :- siblingof(A, B), male(B).  [covers 6,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,174590 (regressionFit = 0,174587, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), childof(B, A).  [covers 3,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,174589 (regressionFit = 0,174587, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, C), childof(B, C).  [covers 3,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,339256 (regressionFit = 0,339254, penalties=2.24E-6) for clause:  father(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 6,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,339256 (regressionFit = 0,339254, penalties=2.0300000000000005E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 6,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,339256 (regressionFit = 0,339254, penalties=2.1400000000000003E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 6,0/13,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'father(A, _) :- male(A).  [covers 11,0/13,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,295125 (regressionFit = 0,295124, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(A), male(B).  [covers 7,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), female(B).  [covers 2,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,194039 (regressionFit = 0,194037, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), childof(B, A).  [covers 5,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(A, B).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -0,356219 (regressionFit = 0,356217, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- male(A), siblingof(A, _).  [covers 5,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(B, A).  [covers 1,0/13,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(A), siblingof(B, _).  [covers 1,0/13,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'father(A, _) :- female(A).  [covers 1,0/13,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'father(_, A) :- female(A).  [covers 2,0/13,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(A, B).  [covers 1,0/13,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(B, A).  [covers 1,0/13,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #6 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: father(A, B) :- male(B), childof(B, A).  [covers 5,0/13,0 pos, 0,0/0,0 neg]

% The best node found: father(A, B) :- male(B), childof(B, A).  [covers 5,0/13,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: father(A, B) :- male(B), childof(B, A).  [covers 5,0/13,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=5.0
Comparing variance: 0.0 to score=0.0025 #egs=8.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 46 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      father(A, B) :- male(B), childof(B, A).  [covers 5,0/13,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #6 @ 13:52:09 7/14/21.  [Using 7.473.328 memory cells.]  %%%%%


% FOR father(A, B):
%   if ( male(B), childof(B, A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


% Clauses:

father(A, B, 0.25517224256948945) :- 
     male(B), 
     childof(B, A), 
     !. // Clause #1.

father(A, B, -0.08518475138839687) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_father(a, b, 0.25517224256948945) :-  /* #pos=5 */ 
   male(b),
   childof(b, a),
   !. // Flattened version of clause #1.

flattened_father(underscore, underscore, -0.08518475138839687) :-  /* #neg=8 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   male(b)
%   childof(b, a)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/father.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:3.1977122272292404
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 1 3 22 23 25 38 42 43
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 0,0/64,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 0,0/64,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 0,0/64,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:09 7/14/21.  [Using 7.471.904 memory cells.]  %%%%%


% FOR father(A, B):
%   return 0;  // std dev = 1,788, 64,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=30 */


% Clauses:

father(A, B, 0) :- !. // Clause #1.


% The flattened versions of these clauses:

flattened_father(underscore, underscore, 0) :-  /* #neg=34 #pos=30 */ 
   !. // Flattened version of clause #1.


% The unique flattened literals:

% Learning 1 trees in this iteration for mother

% Learn model for: mother
% Kept 5 of the 5 positive examples.
% Kept 8 of the 21 negative examples.
% Time taken to learn 6 trees is 9,016 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2366863905325444
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 11 of the 21 negative examples.
% Dataset size: 16
Computing probabilities
prob time:154 milliseconds
No hidden examples for : mother
Time to build dataset: 169 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.018702733016551773
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 5 positive seeds: 4 7 10 11 15
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,285288 (regressionFit = 0,285287, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 11,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,285288): mother(A, _) :- male(A).  [covers 11,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,182784 (regressionFit = 0,182783, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,182784): mother(_, A) :- male(A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,110953 (regressionFit = 0,110952, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,110953): mother(_, A) :- female(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,074072 (regressionFit = 0,074071, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,074072): mother(A, B) :- childof(B, A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,290332 (regressionFit = 0,290330, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]' score=-0.07407215241965169
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,084105 (regressionFit = 0,084103, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,005872 (regressionFit = 0,005870, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,005872): mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,150302 (regressionFit = 0,150300, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 3,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]' score=-0.11095275479847799
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,084105 (regressionFit = 0,084103, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,005872 (regressionFit = 0,005870, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,150302 (regressionFit = 0,150300, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 3,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]' score=-0.18278397947907019
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,272370 (regressionFit = 0,272368, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 3,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 11,0/16,0 pos, 0,0/0,0 neg]' score=-0.2852881775946056
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,084105 (regressionFit = 0,084103, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,084105 (regressionFit = 0,084103, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,297814 (regressionFit = 0,297811, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 6,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]' score=-0.29033163207264306
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 43 bad extensions.
%     Score = -0,294768 (regressionFit = 0,294766, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,248594 (regressionFit = 0,248591, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,288619 (regressionFit = 0,288617, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,140209 (regressionFit = 0,140207, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,140209 (regressionFit = 0,140207, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,140209 (regressionFit = 0,140207, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,290333 (regressionFit = 0,290330, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,290332 (regressionFit = 0,290330, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,290333 (regressionFit = 0,290330, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
Comparing variance: -5.551115123125783E-18 to score=0.0025 #egs=5.0
Comparing variance: 5.336552933031421E-4 to score=0.0025 #egs=11.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 106 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(A, B) :- childof(B, A), female(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #7 @ 13:52:10 7/14/21.  [Using 7.402.296 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( childof(B, A), female(B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08238099116818641;  // std dev = 0,077, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


% Clauses:

mother(A, B, 0.20975771563253556) :- 
     childof(B, A), 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.08238099116818641) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_mother(a, b, 0.20975771563253556) :-  /* #pos=5 */ 
   childof(b, a),
   female(b),
   !. // Flattened version of clause #1.

flattened_mother(underscore, underscore, -0.08238099116818641) :-  /* #neg=11 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   female(b)
%   childof(b, a)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/mother.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:3.6777205827970194
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 2 9 18 27 31 34 39 42
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 74,0/74,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 74,0/74,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 74,0/74,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -205,141890 (regressionFit = 205,141888, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 52,0/74,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -205,141890): mother(A, _) :- male(A).  [covers 52,0/74,0 pos, 0,0/0,0 neg]
%     Score = -11,792961 (regressionFit = 11,792960, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 36,0/74,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11,792961): mother(_, A) :- male(A).  [covers 36,0/74,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/74,0 pos, 0,0/0,0 neg]
%     Score = -0,103907 (regressionFit = 0,103906, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 35,0/74,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,103907): mother(_, A) :- female(A).  [covers 35,0/74,0 pos, 0,0/0,0 neg]
%     Score = -64,268186 (regressionFit = 64,268185, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 40,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882047 (regressionFit = 38,882046, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -186,702254 (regressionFit = 186,702253, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 45,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882047 (regressionFit = 38,882046, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 15,0/74,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 35,0/74,0 pos, 0,0/0,0 neg]' score=-0.10390670439066799
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -13,173309 (regressionFit = 13,173307, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 28,0/74,0 pos, 0,0/0,0 neg]
%     Score = -0,103908 (regressionFit = 0,103906, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 35,0/74,0 pos, 0,0/0,0 neg]
%     Score = -23,866456 (regressionFit = 23,866454, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 21,0/74,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 36,0/74,0 pos, 0,0/0,0 neg]' score=-11.792961484995827
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -31,429617 (regressionFit = 31,429615, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 24,0/74,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -31,461328 (regressionFit = 31,461326, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 24,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882049 (regressionFit = 38,882046, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 15,0/74,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 15,0/74,0 pos, 0,0/0,0 neg]' score=-38.88204730647142
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 15,0/74,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]' score=-38.88204730647142
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 15,0/74,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 15,0/74,0 pos, 0,0/0,0 neg]' score=-38.882047516471424
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882049 (regressionFit = 38,882046, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882049 (regressionFit = 38,882046, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 15,0/74,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 40,0/74,0 pos, 0,0/0,0 neg]' score=-64.2681859128409
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -13,173309 (regressionFit = 13,173307, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 28,0/74,0 pos, 0,0/0,0 neg]
%     Score = -0,103908 (regressionFit = 0,103906, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 35,0/74,0 pos, 0,0/0,0 neg]
%     Score = -23,866456 (regressionFit = 23,866454, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 21,0/74,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 45,0/74,0 pos, 0,0/0,0 neg]' score=-186.70225428319327
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -147,852870 (regressionFit = 147,852868, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 33,0/74,0 pos, 0,0/0,0 neg]
%     Score = -19,329935 (regressionFit = 19,329933, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 24,0/74,0 pos, 0,0/0,0 neg]
%     Score = -183,357926 (regressionFit = 183,357924, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 45,0/74,0 pos, 0,0/0,0 neg]
%     Score = -24,234447 (regressionFit = 24,234445, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 21,0/74,0 pos, 0,0/0,0 neg]
%     Score = -24,234447 (regressionFit = 24,234445, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 21,0/74,0 pos, 0,0/0,0 neg]
%     Score = -24,234447 (regressionFit = 24,234445, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 21,0/74,0 pos, 0,0/0,0 neg]
%     Score = -36,555582 (regressionFit = 36,555580, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -186,702255 (regressionFit = 186,702253, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 45,0/74,0 pos, 0,0/0,0 neg]
%     Score = -36,555582 (regressionFit = 36,555580, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -36,555582 (regressionFit = 36,555580, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -36,555582 (regressionFit = 36,555580, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -186,702255 (regressionFit = 186,702253, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 45,0/74,0 pos, 0,0/0,0 neg]
%     Score = -36,555582 (regressionFit = 36,555580, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -186,702255 (regressionFit = 186,702253, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 45,0/74,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 52,0/74,0 pos, 0,0/0,0 neg]' score=-205.14188950273112
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -31,429617 (regressionFit = 31,429615, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 24,0/74,0 pos, 0,0/0,0 neg]
%     Score = -13,173309 (regressionFit = 13,173307, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 28,0/74,0 pos, 0,0/0,0 neg]
%     Score = -13,173309 (regressionFit = 13,173307, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 28,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -147,730420 (regressionFit = 147,730418, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 33,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 15,0/74,0 pos, 0,0/0,0 neg]
%     Score = -38,882048 (regressionFit = 38,882046, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 15,0/74,0 pos, 0,0/0,0 neg]

***** Warning: #7 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: mother(_, A) :- female(A).  [covers 35,0/74,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 35,0/74,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(_, A) :- female(A).  [covers 35,0/74,0 pos, 0,0/0,0 neg]
Comparing variance: -2.4361465226060576E-14 to score=0.0025 #egs=35.0
Comparing variance: 0.011545064932296444 to score=0.0025 #egs=9.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 39,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,011545)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,011545) into the LAST position (#1) in the search queue.

% Time for loop #1: 169 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(_, A) :- female(A).  [covers 35,0/74,0 pos, 0,0/0,0 neg]
% This clause covers 35 positive examples, of which 35 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 4 6 7 12 19 31 37 38
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 39,0/39,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 39,0/39,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'mother(_, _).  [covers 39,0/39,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,191970 (regressionFit = 0,191969, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 24,0/39,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,191970): mother(A, _) :- male(A).  [covers 24,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 36,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,103503 (regressionFit = 0,103502, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,103503): mother(A, B) :- childof(B, A).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128346 (regressionFit = 0,128345, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,193876 (regressionFit = 0,193874, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 24,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128346 (regressionFit = 0,128345, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128346 (regressionFit = 0,128345, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 15,0/39,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 5,0/39,0 pos, 0,0/0,0 neg]' score=-0.10350333360695262
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,103504 (regressionFit = 0,103502, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 5,0/39,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 15,0/39,0 pos, 0,0/0,0 neg]' score=-0.12834595161430415
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 15,0/39,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]' score=-0.12834595161430415
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 15,0/39,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 15,0/39,0 pos, 0,0/0,0 neg]' score=-0.12834616161430504
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 15,0/39,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'mother(A, _) :- male(A).  [covers 24,0/39,0 pos, 0,0/0,0 neg]' score=-0.19197012743771782
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,191971 (regressionFit = 0,191969, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 24,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,203879 (regressionFit = 0,203877, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 19,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 15,0/39,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 24,0/39,0 pos, 0,0/0,0 neg]' score=-0.19387571093615777
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,351718 (regressionFit = 0,351716, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 19,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,193877 (regressionFit = 0,193874, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 24,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,431641 (regressionFit = 0,431638, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 24,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,342199 (regressionFit = 0,342197, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,193877 (regressionFit = 0,193874, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 24,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,342199 (regressionFit = 0,342197, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,342199 (regressionFit = 0,342197, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,342200 (regressionFit = 0,342197, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,193877 (regressionFit = 0,193874, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 24,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,342199 (regressionFit = 0,342197, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,193877 (regressionFit = 0,193874, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 24,0/39,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'mother(_, A) :- male(A).  [covers 36,0/39,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,191971 (regressionFit = 0,191969, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 24,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,103504 (regressionFit = 0,103502, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,193877 (regressionFit = 0,193874, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 24,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 15,0/39,0 pos, 0,0/0,0 neg]
%     Score = -0,128347 (regressionFit = 0,128345, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 15,0/39,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/39,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, B) :- childof(B, A).  [covers 5,0/39,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A).  [covers 5,0/39,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,012.
% Will extend: mother(A, B) :- childof(B, A).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
Comparing variance: 4.4408920985006264E-17 to score=0.0025 #egs=5.0
Comparing variance: 0.012937789200869049 to score=0.0025 #egs=8.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 34,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0,012938)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -0,012938) into the LAST position (#1) in the search queue.

% Time for loop #2: 46 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      mother(A, B) :- childof(B, A).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 5 8 12 16 26 28 30
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 34,0/34,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 34,0/34,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'mother(_, _).  [covers 34,0/34,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,183353 (regressionFit = 0,183352, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 24,0/34,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,183353): mother(A, _) :- male(A).  [covers 24,0/34,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 31,0/34,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124015 (regressionFit = 0,124014, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,124015): mother(A, B) :- siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,185638 (regressionFit = 0,185637, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 24,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124015 (regressionFit = 0,124014, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124015 (regressionFit = 0,124014, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 15,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]' score=-0.12401515794849137
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 15,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]' score=-0.12401515794849137
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 15,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 15,0/34,0 pos, 0,0/0,0 neg]' score=-0.12401536794849226
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 15,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1] 'mother(A, _) :- male(A).  [covers 24,0/34,0 pos, 0,0/0,0 neg]' score=-0.18335327978153368
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,183354 (regressionFit = 0,183352, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 24,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,199961 (regressionFit = 0,199959, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 19,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 15,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 24,0/34,0 pos, 0,0/0,0 neg]' score=-0.18563795384298684
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,287219 (regressionFit = 0,287217, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 19,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,185639 (regressionFit = 0,185637, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 24,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,423403 (regressionFit = 0,423401, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 24,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,254244 (regressionFit = 0,254242, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,185639 (regressionFit = 0,185637, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 24,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,254244 (regressionFit = 0,254242, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,254244 (regressionFit = 0,254242, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,254244 (regressionFit = 0,254242, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,185639 (regressionFit = 0,185637, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 24,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,254244 (regressionFit = 0,254242, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,185639 (regressionFit = 0,185637, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 24,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=1] 'mother(_, A) :- male(A).  [covers 31,0/34,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,183354 (regressionFit = 0,183352, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 24,0/34,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,185639 (regressionFit = 0,185637, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 24,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%     Score = -0,124016 (regressionFit = 0,124014, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 15,0/34,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/34,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -0,013.
% Will extend: mother(A, B) :- siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
Comparing variance: 0.004623497857616539 to score=0.0025 #egs=15.0
Comparing variance: 0.010932334016848655 to score=0.0025 #egs=5.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 15,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0,004623)
%         ILP node to extend: mother(A, B) :- siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0,004623) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 19,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0,010932)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -0,010932) into position #1 in the search queue (new size=2).

% Time for loop #3: 79 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      mother(A, B) :- siblingof(A, B).  [covers 15,0/34,0 pos, 0,0/0,0 neg]
% This clause covers 15 positive examples, of which 15 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 0 2 4 5 7 9 10 12
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 19,0/19,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 19,0/19,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'mother(_, _).  [covers 19,0/19,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,071109 (regressionFit = 0,071108, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,071109): mother(A, _) :- male(A).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 16,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,069401 (regressionFit = 0,069400, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,069401): mother(A, _) :- siblingof(A, _).  [covers 9,0/19,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 9,0/19,0 pos, 0,0/0,0 neg]' score=-0.06940095951378587
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 46 bad extensions.
%     Score = -0,141833 (regressionFit = 0,141831, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 4,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,069402 (regressionFit = 0,069400, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,051016 (regressionFit = 0,051014, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,051016): mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,069402 (regressionFit = 0,069400, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,069402 (regressionFit = 0,069400, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,069402 (regressionFit = 0,069400, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 9,0/19,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1] 'mother(A, _) :- male(A).  [covers 9,0/19,0 pos, 0,0/0,0 neg]' score=-0.07110896191003832
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,071110 (regressionFit = 0,071108, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,054575 (regressionFit = 0,054573, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 4,0/19,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1] 'mother(_, A) :- male(A).  [covers 16,0/19,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,071110 (regressionFit = 0,071108, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,069402 (regressionFit = 0,069400, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 9,0/19,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/19,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -0,011.
% Will extend: mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 10 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
% This clause covers 9 positive examples, of which 9 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'mother(A, B) :- siblingof(A, B).  [covers 15,0/15,0 pos, 0,0/0,0 neg]'
%     Score = -0,124015 (regressionFit = 0,124014, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 15,0/15,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 1 3 4 6 7 9 10 11
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 15,0/15,0 pos, 0,0/0,0 neg]' score=-0.12401515794849137
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 40 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), male(A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), male(B).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), siblingof(A, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), siblingof(B, A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), siblingof(B, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), male(B).  [covers 15,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), male(A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), siblingof(A, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), siblingof(B, A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), siblingof(B, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), male(A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), male(B).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), male(C).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), siblingof(A, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), siblingof(B, A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(B, C).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), siblingof(B, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(C, A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(C, B).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(C, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), male(A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), male(B).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), siblingof(A, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), siblingof(B, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), male(A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), male(B).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), male(C).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(A, C).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), siblingof(A, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), siblingof(B, A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), siblingof(B, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(C, A).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(C, B).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(C, _).  [covers 15,0/15,0 pos, 0,0/0,0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -0,1240):
%  mother(A, B) :- siblingof(A, B).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
Created a leaf under (mother(F, G) :- siblingof(F, G))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:10 7/14/21.  [Using 8.465.168 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B) )
%   then return 3.336144173577238;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( childof(B, A) )
%   | then return -0.49350504808366874;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( siblingof(A, B) )
%   | | then return -0.5681684180417427;  // std dev = 0,068, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( siblingof(A, C), male(C) )
%   | | | then return -0.18399252795077434;  // std dev = 0,105, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.388702013183778;  // std dev = 0,200, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


% Clauses:

mother(A, B, 3.336144173577238) :- 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.49350504808366874) :- 
     childof(B, A), 
     !. // Clause #2.

mother(A, B, -0.5681684180417427) :- 
     siblingof(A, B), 
     !. // Clause #3.

mother(A, B, -0.18399252795077434) :- 
     siblingof(A, C), 
     male(C), 
     !. // Clause #4.

mother(A, B, -0.388702013183778) :- !. // Clause #5.


% The flattened versions of these clauses:

flattened_mother(underscore, a, 3.336144173577238) :-  /* #pos=35 */ 
   female(a),
   !. // Flattened version of clause #1.

flattened_mother(a, b, -0.49350504808366874) :-  /* #neg=5 */ 
   childof(b, a),
   !. // Flattened version of clause #2.

flattened_mother(a, b, -0.5681684180417427) :-  /* #neg=15 */ 
   siblingof(a, b),
   !. // Flattened version of clause #3.

flattened_mother(a, underscore, -0.18399252795077434) :-  /* #neg=9 */ 
   siblingof(a, uniqueVar5),
   male(uniqueVar5),
   !. // Flattened version of clause #4.

flattened_mother(underscore, underscore, -0.388702013183778) :-  /* #neg=10 */ 
   !. // Flattened version of clause #5.


% The unique flattened literals:
%   siblingof(a, b)
%   siblingof(a, uniqueVar5)
%   male(uniqueVar5)
%   female(a)
%   childof(b, a)

% Learning 1 trees in this iteration for father

% Learn model for: father
% Kept 5 of the 5 positive examples.
% Kept 11 of the 21 negative examples.
% Time taken to learn 6 trees is 3,394 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.21484375
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 13 of the 21 negative examples.
% Dataset size: 18
Computing probabilities
prob time:7 milliseconds
No hidden examples for : father
Time to build dataset: 7 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.0167018183278433
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 0 4 9 10 13 14 15 17
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 16 bad extensions.
%     Score = -0,297147 (regressionFit = 0,297146, penalties=1.12E-6) for clause:  father(A, _) :- male(A).  [covers 13,0/18,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,297147): father(A, _) :- male(A).  [covers 13,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,267597 (regressionFit = 0,267596, penalties=1.12E-6) for clause:  father(_, A) :- male(A).  [covers 14,0/18,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,267597): father(_, A) :- male(A).  [covers 14,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  father(A, _) :- female(A).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,267597 (regressionFit = 0,267596, penalties=1.12E-6) for clause:  father(_, A) :- female(A).  [covers 4,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,156099 (regressionFit = 0,156098, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- childof(B, A).  [covers 8,0/18,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,156099): father(A, B) :- childof(B, A).  [covers 8,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(A, B).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,278950 (regressionFit = 0,278949, penalties=1.23E-6) for clause:  father(A, _) :- siblingof(A, _).  [covers 7,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(B, A).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  father(_, A) :- siblingof(A, _).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- mother(A, B).  [covers 2,0/18,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'father(A, B) :- childof(B, A).  [covers 8,0/18,0 pos, 0,0/0,0 neg]' score=-0.1560987836025354
%  At # nodes expanded = 2, |OPEN| = 9.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,143452 (regressionFit = 0,143450, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(A).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,143452): father(A, B) :- childof(B, A), male(A).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(B).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): father(A, B) :- childof(B, A), male(B).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,277509 (regressionFit = 0,277507, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), female(B).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,205159 (regressionFit = 0,205157, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- childof(B, A), siblingof(A, _).  [covers 4,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), mother(A, B).  [covers 2,0/18,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'father(_, A) :- male(A).  [covers 14,0/18,0 pos, 0,0/0,0 neg]' score=-0.2675972861757751
%  At # nodes expanded = 3, |OPEN| = 8.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,283275 (regressionFit = 0,283274, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(B), male(A).  [covers 11,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), female(A).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 0,000000, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), childof(B, A).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(A, B).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,263634 (regressionFit = 0,263632, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(B), siblingof(A, _).  [covers 6,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(B, A).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  father(_, A) :- male(A), siblingof(A, _).  [covers 1,0/18,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'father(_, A) :- female(A).  [covers 4,0/18,0 pos, 0,0/0,0 neg]' score=-0.2675972861757751
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- female(B), male(A).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,277509 (regressionFit = 0,277507, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- female(B), childof(B, A).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- female(B), siblingof(A, _).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- female(B), mother(A, B).  [covers 2,0/18,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'father(A, _) :- siblingof(A, _).  [covers 7,0/18,0 pos, 0,0/0,0 neg]' score=-0.27894996080141404
%  At # nodes expanded = 5, |OPEN| = 6.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 37 bad extensions.
%     Score = -0,283048 (regressionFit = 0,283046, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- siblingof(A, _), male(A).  [covers 4,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,261111 (regressionFit = 0,261109, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), male(B).  [covers 6,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,282280 (regressionFit = 0,282278, penalties=2.1300000000000004E-6) for clause:  father(A, _) :- siblingof(A, B), male(B).  [covers 7,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), female(B).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,198672 (regressionFit = 0,198670, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), childof(B, A).  [covers 4,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,198672 (regressionFit = 0,198670, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, C), childof(B, C).  [covers 4,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,278951 (regressionFit = 0,278949, penalties=2.24E-6) for clause:  father(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 7,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,278951 (regressionFit = 0,278949, penalties=2.0300000000000005E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 7,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,278951 (regressionFit = 0,278949, penalties=2.1400000000000003E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 7,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), mother(A, B).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for mother/2.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, C), mother(C, B).  [covers 1,0/18,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'father(A, _) :- male(A).  [covers 13,0/18,0 pos, 0,0/0,0 neg]' score=-0.29714722179108294
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -0,283275 (regressionFit = 0,283274, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(A), male(B).  [covers 11,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), female(B).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,143452 (regressionFit = 0,143450, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), childof(B, A).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(A, B).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -0,279492 (regressionFit = 0,279489, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- male(A), siblingof(A, _).  [covers 4,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(B, A).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(A), siblingof(B, _).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), mother(A, B).  [covers 1,0/18,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'father(A, _) :- female(A).  [covers 1,0/18,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(A, B).  [covers 1,0/18,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(B, A).  [covers 1,0/18,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #8 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/18,0 pos, 0,0/0,0 neg]

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/18,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: father(A, B) :- childof(B, A), male(B).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
Comparing variance: -5.551115123125783E-18 to score=0.0025 #egs=5.0
Comparing variance: -1.0675221390626506E-18 to score=0.0025 #egs=13.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 103 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      father(A, B) :- childof(B, A), male(B).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #7 @ 13:52:11 7/14/21.  [Using 8.510.376 memory cells.]  %%%%%


% FOR father(A, B):
%   if ( childof(B, A), male(B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


% Clauses:

father(A, B, 0.20975771563253556) :- 
     childof(B, A), 
     male(B), 
     !. // Clause #1.

father(A, B, -0.07877675473109173) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_father(a, b, 0.20975771563253556) :-  /* #pos=5 */ 
   childof(b, a),
   male(b),
   !. // Flattened version of clause #1.

flattened_father(underscore, underscore, -0.07877675473109173) :-  /* #neg=13 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   childof(b, a)
%   male(b)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/father.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:3.6777205827970194
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 15 25 34 51 52 55 58 67
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 0,0/74,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 0,0/74,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 0,0/74,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:11 7/14/21.  [Using 8.508.480 memory cells.]  %%%%%


% FOR father(A, B):
%   return 0;  // std dev = 1,918, 74,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=35 */


% Clauses:

father(A, B, 0) :- !. // Clause #1.


% The flattened versions of these clauses:

flattened_father(underscore, underscore, 0) :-  /* #neg=39 #pos=35 */ 
   !. // Flattened version of clause #1.


% The unique flattened literals:

% Learning 1 trees in this iteration for mother

% Learn model for: mother
% Kept 5 of the 5 positive examples.
% Kept 12 of the 21 negative examples.
% Time taken to learn 7 trees is 10,232 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.20761245674740486
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 9 of the 21 negative examples.
% Dataset size: 14
Computing probabilities
prob time:4 milliseconds
No hidden examples for : mother
Time to build dataset: 4 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017701233145400206
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 0 2 3 4 5 6 7 8
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,246897 (regressionFit = 0,246896, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 11,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,246897): mother(A, _) :- male(A).  [covers 11,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,217496 (regressionFit = 0,217495, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,217496): mother(_, A) :- male(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,194009 (regressionFit = 0,194008, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,194009): mother(_, A) :- female(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,097914 (regressionFit = 0,097913, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,097914): mother(A, B) :- childof(B, A).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,231286 (regressionFit = 0,231285, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 7,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 7,0/14,0 pos, 0,0/0,0 neg]' score=-0.09791429892338893
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,126827 (regressionFit = 0,126825, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,011523 (regressionFit = 0,011521, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,011523): mother(A, B) :- childof(B, A), female(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,177159 (regressionFit = 0,177157, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 4,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]' score=-0.1940089586427368
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,200556 (regressionFit = 0,200554, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,011523 (regressionFit = 0,011521, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,131820 (regressionFit = 0,131817, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]' score=-0.21749608937799655
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,227145 (regressionFit = 0,227143, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 7,0/14,0 pos, 0,0/0,0 neg]' score=-0.2312857610595416
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 44 bad extensions.
%     Score = -0,242814 (regressionFit = 0,242811, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,230622 (regressionFit = 0,230620, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,128951 (regressionFit = 0,128949, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,175034 (regressionFit = 0,175032, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,175034 (regressionFit = 0,175032, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,231287 (regressionFit = 0,231285, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,231287 (regressionFit = 0,231285, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,231287 (regressionFit = 0,231285, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 7,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 11,0/14,0 pos, 0,0/0,0 neg]' score=-0.24689666885029085
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,227145 (regressionFit = 0,227143, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,200556 (regressionFit = 0,200554, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,126827 (regressionFit = 0,126825, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,241736 (regressionFit = 0,241734, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 5,0/14,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A), female(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A), female(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(A, B) :- childof(B, A), female(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=5.0
Comparing variance: 0.0012801377109888147 to score=0.0025 #egs=9.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 16 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(A, B) :- childof(B, A), female(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #8 @ 13:52:11 7/14/21.  [Using 8.507.888 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( childof(B, A), female(B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09403874300343706;  // std dev = 0,107, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


% Clauses:

mother(A, B, 0.17709649774527736) :- 
     childof(B, A), 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.09403874300343706) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_mother(a, b, 0.17709649774527736) :-  /* #pos=5 */ 
   childof(b, a),
   female(b),
   !. // Flattened version of clause #1.

flattened_mother(underscore, underscore, -0.09403874300343706) :-  /* #neg=9 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   female(b)
%   childof(b, a)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/mother.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:4.069897638688981
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 2 6 7 9 11 20 61 68
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 80,0/80,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 80,0/80,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 80,0/80,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -245,448516 (regressionFit = 245,448515, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 57,0/80,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -245,448516): mother(A, _) :- male(A).  [covers 57,0/80,0 pos, 0,0/0,0 neg]
%     Score = -13,080847 (regressionFit = 13,080846, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 37,0/80,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13,080847): mother(_, A) :- male(A).  [covers 37,0/80,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/80,0 pos, 0,0/0,0 neg]
%     Score = -0,131625 (regressionFit = 0,131624, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 40,0/80,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,131625): mother(_, A) :- female(A).  [covers 40,0/80,0 pos, 0,0/0,0 neg]
%     Score = -71,482648 (regressionFit = 71,482647, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 45,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699046 (regressionFit = 42,699045, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -223,857668 (regressionFit = 223,857667, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 49,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699046 (regressionFit = 42,699045, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699046 (regressionFit = 42,699045, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 16,0/80,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 40,0/80,0 pos, 0,0/0,0 neg]' score=-0.1316246790630841
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -14,500525 (regressionFit = 14,500523, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 32,0/80,0 pos, 0,0/0,0 neg]
%     Score = -0,131626 (regressionFit = 0,131624, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 40,0/80,0 pos, 0,0/0,0 neg]
%     Score = -26,256897 (regressionFit = 26,256895, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 24,0/80,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 37,0/80,0 pos, 0,0/0,0 neg]' score=-13.080847137327375
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -34,584309 (regressionFit = 34,584307, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 25,0/80,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -34,619143 (regressionFit = 34,619141, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 25,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 16,0/80,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 16,0/80,0 pos, 0,0/0,0 neg]' score=-42.69904615851133
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 16,0/80,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]' score=-42.69904615851133
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 16,0/80,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 16,0/80,0 pos, 0,0/0,0 neg]' score=-42.699046368511326
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 16,0/80,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 45,0/80,0 pos, 0,0/0,0 neg]' score=-71.48264793042955
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -14,500525 (regressionFit = 14,500523, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 32,0/80,0 pos, 0,0/0,0 neg]
%     Score = -0,131626 (regressionFit = 0,131624, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 40,0/80,0 pos, 0,0/0,0 neg]
%     Score = -26,256897 (regressionFit = 26,256895, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 24,0/80,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 49,0/80,0 pos, 0,0/0,0 neg]' score=-223.85766785046576
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -177,645215 (regressionFit = 177,645213, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 36,0/80,0 pos, 0,0/0,0 neg]
%     Score = -21,278899 (regressionFit = 21,278897, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 25,0/80,0 pos, 0,0/0,0 neg]
%     Score = -219,076432 (regressionFit = 219,076430, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 49,0/80,0 pos, 0,0/0,0 neg]
%     Score = -26,771216 (regressionFit = 26,771214, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 24,0/80,0 pos, 0,0/0,0 neg]
%     Score = -26,771216 (regressionFit = 26,771214, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 24,0/80,0 pos, 0,0/0,0 neg]
%     Score = -26,771216 (regressionFit = 26,771214, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 24,0/80,0 pos, 0,0/0,0 neg]
%     Score = -40,175252 (regressionFit = 40,175250, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -223,857669 (regressionFit = 223,857667, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 49,0/80,0 pos, 0,0/0,0 neg]
%     Score = -40,175252 (regressionFit = 40,175250, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -40,175252 (regressionFit = 40,175250, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -40,175252 (regressionFit = 40,175250, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -223,857669 (regressionFit = 223,857667, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 49,0/80,0 pos, 0,0/0,0 neg]
%     Score = -40,175252 (regressionFit = 40,175250, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -223,857669 (regressionFit = 223,857667, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 49,0/80,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 57,0/80,0 pos, 0,0/0,0 neg]' score=-245.4485160612206
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -34,584309 (regressionFit = 34,584307, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 25,0/80,0 pos, 0,0/0,0 neg]
%     Score = -14,500525 (regressionFit = 14,500523, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 32,0/80,0 pos, 0,0/0,0 neg]
%     Score = -14,500525 (regressionFit = 14,500523, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 32,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -177,472901 (regressionFit = 177,472899, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 36,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 16,0/80,0 pos, 0,0/0,0 neg]
%     Score = -42,699047 (regressionFit = 42,699045, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 16,0/80,0 pos, 0,0/0,0 neg]

***** Warning: #9 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: mother(_, A) :- female(A).  [covers 40,0/80,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 40,0/80,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(_, A) :- female(A).  [covers 40,0/80,0 pos, 0,0/0,0 neg]
Comparing variance: 1.4210854715202004E-14 to score=0.0025 #egs=40.0
Comparing variance: 0.014624839895835073 to score=0.0025 #egs=9.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 40,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,014625)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,014625) into the LAST position (#1) in the search queue.

% Time for loop #1: 205 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(_, A) :- female(A).  [covers 40,0/80,0 pos, 0,0/0,0 neg]
% This clause covers 40 positive examples, of which 40 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 1 3 6 8 15 16 19 23
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 40,0/40,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 40,0/40,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'mother(_, _).  [covers 40,0/40,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,325941 (regressionFit = 0,325940, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 25,0/40,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,325941): mother(A, _) :- male(A).  [covers 25,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 37,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,131487 (regressionFit = 0,131486, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,131487): mother(A, B) :- childof(B, A).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218472 (regressionFit = 0,218471, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,329563 (regressionFit = 0,329561, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 25,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218472 (regressionFit = 0,218471, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218472 (regressionFit = 0,218471, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 16,0/40,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 5,0/40,0 pos, 0,0/0,0 neg]' score=-0.1314867749636612
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,131488 (regressionFit = 0,131486, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 5,0/40,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 16,0/40,0 pos, 0,0/0,0 neg]' score=-0.21847211197138347
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 16,0/40,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]' score=-0.21847211197138347
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 16,0/40,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 16,0/40,0 pos, 0,0/0,0 neg]' score=-0.2184723219713817
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 16,0/40,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'mother(A, _) :- male(A).  [covers 25,0/40,0 pos, 0,0/0,0 neg]' score=-0.32594099743093013
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,325942 (regressionFit = 0,325940, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 25,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,334173 (regressionFit = 0,334170, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 20,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 16,0/40,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 25,0/40,0 pos, 0,0/0,0 neg]' score=-0.3295625395703384
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,482011 (regressionFit = 0,482009, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 20,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,329563 (regressionFit = 0,329561, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 25,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,652037 (regressionFit = 0,652035, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 25,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,432326 (regressionFit = 0,432324, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,329564 (regressionFit = 0,329561, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 25,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,432326 (regressionFit = 0,432324, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,432325 (regressionFit = 0,432324, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,432326 (regressionFit = 0,432324, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,329563 (regressionFit = 0,329561, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 25,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,432325 (regressionFit = 0,432324, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,329563 (regressionFit = 0,329561, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 25,0/40,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'mother(_, A) :- male(A).  [covers 37,0/40,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,325942 (regressionFit = 0,325940, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 25,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,131488 (regressionFit = 0,131486, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,329563 (regressionFit = 0,329561, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 25,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 16,0/40,0 pos, 0,0/0,0 neg]
%     Score = -0,218473 (regressionFit = 0,218471, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 16,0/40,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A).  [covers 5,0/40,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A).  [covers 5,0/40,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,015.
% Will extend: mother(A, B) :- childof(B, A).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
Comparing variance: 4.4408920985006264E-17 to score=0.0025 #egs=5.0
Comparing variance: 0.016435719370457624 to score=0.0025 #egs=8.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 35,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0,016436)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -0,016436) into the LAST position (#1) in the search queue.

% Time for loop #2: 131 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      mother(A, B) :- childof(B, A).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 6 positive seeds: 8 10 12 18 24 32
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'mother(_, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,317324 (regressionFit = 0,317323, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 25,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,317324): mother(A, _) :- male(A).  [covers 25,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 32,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214141 (regressionFit = 0,214140, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,214141): mother(A, B) :- siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,321325 (regressionFit = 0,321324, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 25,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214141 (regressionFit = 0,214140, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-0.21414131830557068
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-0.21414131830557068
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-0.2141415283055689
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214143 (regressionFit = 0,214140, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214143 (regressionFit = 0,214140, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1] 'mother(A, _) :- male(A).  [covers 25,0/35,0 pos, 0,0/0,0 neg]' score=-0.317324149774746
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,317325 (regressionFit = 0,317323, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 25,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,330254 (regressionFit = 0,330252, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 20,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 25,0/35,0 pos, 0,0/0,0 neg]' score=-0.32132478247716745
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,417512 (regressionFit = 0,417510, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 20,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,321326 (regressionFit = 0,321324, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 25,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,643799 (regressionFit = 0,643797, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 25,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,344370 (regressionFit = 0,344368, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,321326 (regressionFit = 0,321324, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 25,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,344370 (regressionFit = 0,344368, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,344370 (regressionFit = 0,344368, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,344370 (regressionFit = 0,344368, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,321326 (regressionFit = 0,321324, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 25,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,344370 (regressionFit = 0,344368, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,321326 (regressionFit = 0,321324, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 25,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=1] 'mother(_, A) :- male(A).  [covers 32,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,317325 (regressionFit = 0,317323, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 25,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,321326 (regressionFit = 0,321324, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 25,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214142 (regressionFit = 0,214140, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -0,214143 (regressionFit = 0,214140, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -0,016.
% Will extend: mother(A, B) :- siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Comparing variance: 0.009967414263832963 to score=0.0025 #egs=16.0
Comparing variance: 0.010932334016848655 to score=0.0025 #egs=5.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 16,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0,009967)
%         ILP node to extend: mother(A, B) :- siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0,009967) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 19,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0,010932)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -0,010932) into position #1 in the search queue (new size=2).

% Time for loop #3: 252 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      mother(A, B) :- siblingof(A, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 16 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 0 2 3 4 7 10 11 16
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 19,0/19,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 19,0/19,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'mother(_, _).  [covers 19,0/19,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,071109 (regressionFit = 0,071108, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,071109): mother(A, _) :- male(A).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 16,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,069401 (regressionFit = 0,069400, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,069401): mother(A, _) :- siblingof(A, _).  [covers 9,0/19,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 9,0/19,0 pos, 0,0/0,0 neg]' score=-0.06940095951378587
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 46 bad extensions.
%     Score = -0,141833 (regressionFit = 0,141831, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 4,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,069402 (regressionFit = 0,069400, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,051016 (regressionFit = 0,051014, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,051016): mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,069402 (regressionFit = 0,069400, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,069402 (regressionFit = 0,069400, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,069402 (regressionFit = 0,069400, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 9,0/19,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1] 'mother(A, _) :- male(A).  [covers 9,0/19,0 pos, 0,0/0,0 neg]' score=-0.07110896191003832
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,071110 (regressionFit = 0,071108, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,054575 (regressionFit = 0,054573, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 4,0/19,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1] 'mother(_, A) :- male(A).  [covers 16,0/19,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,071110 (regressionFit = 0,071108, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -0,069402 (regressionFit = 0,069400, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 9,0/19,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/19,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -0,011.
% Will extend: mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 9 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/19,0 pos, 0,0/0,0 neg]
% This clause covers 9 positive examples, of which 9 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'mother(A, B) :- siblingof(A, B).  [covers 16,0/16,0 pos, 0,0/0,0 neg]'
%     Score = -0,214141 (regressionFit = 0,214140, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 16,0/16,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 2 3 4 5 8 9 14
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 16,0/16,0 pos, 0,0/0,0 neg]' score=-0.21414131830557068
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 40 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), male(A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), male(B).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), siblingof(A, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), siblingof(B, A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), siblingof(B, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), male(B).  [covers 16,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), male(A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), siblingof(A, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), siblingof(B, A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), siblingof(B, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), male(A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), male(B).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), male(C).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), siblingof(A, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), siblingof(B, A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(B, C).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), siblingof(B, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(C, A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(C, B).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(C, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), male(A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), male(B).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), siblingof(A, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), siblingof(B, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), male(A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), male(B).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), male(C).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(A, C).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), siblingof(A, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), siblingof(B, A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), siblingof(B, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(C, A).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(C, B).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(C, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -0,2141):
%  mother(A, B) :- siblingof(A, B).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
Created a leaf under (mother(F, G) :- siblingof(F, G))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:12 7/14/21.  [Using 9.580.784 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B) )
%   then return 3.51324067132251;  // std dev = 7,54e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( childof(B, A) )
%   | then return -0.49350504808366874;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( siblingof(A, B) )
%   | | then return -0.6035587218487748;  // std dev = 0,100, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( siblingof(A, C), male(C) )
%   | | | then return -0.18399252795077434;  // std dev = 0,105, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.388702013183778;  // std dev = 0,200, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


% Clauses:

mother(A, B, 3.51324067132251) :- 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.49350504808366874) :- 
     childof(B, A), 
     !. // Clause #2.

mother(A, B, -0.6035587218487748) :- 
     siblingof(A, B), 
     !. // Clause #3.

mother(A, B, -0.18399252795077434) :- 
     siblingof(A, C), 
     male(C), 
     !. // Clause #4.

mother(A, B, -0.388702013183778) :- !. // Clause #5.


% The flattened versions of these clauses:

flattened_mother(underscore, a, 3.51324067132251) :-  /* #pos=40 */ 
   female(a),
   !. // Flattened version of clause #1.

flattened_mother(a, b, -0.49350504808366874) :-  /* #neg=5 */ 
   childof(b, a),
   !. // Flattened version of clause #2.

flattened_mother(a, b, -0.6035587218487748) :-  /* #neg=16 */ 
   siblingof(a, b),
   !. // Flattened version of clause #3.

flattened_mother(a, underscore, -0.18399252795077434) :-  /* #neg=9 */ 
   siblingof(a, uniqueVar6),
   male(uniqueVar6),
   !. // Flattened version of clause #4.

flattened_mother(underscore, underscore, -0.388702013183778) :-  /* #neg=10 */ 
   !. // Flattened version of clause #5.


% The unique flattened literals:
%   siblingof(a, b)
%   male(uniqueVar6)
%   female(a)
%   childof(b, a)
%   siblingof(a, uniqueVar6)

% Learning 1 trees in this iteration for father

% Learn model for: father
% Kept 5 of the 5 positive examples.
% Kept 11 of the 21 negative examples.
% Time taken to learn 7 trees is 3,902 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.21484375
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 11 of the 21 negative examples.
% Dataset size: 16
Computing probabilities
prob time:84 milliseconds
No hidden examples for : father
Time to build dataset: 85 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.013464575612320635
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 1 4 5 6 7 8 9 13
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,214129 (regressionFit = 0,214128, penalties=1.12E-6) for clause:  father(A, _) :- male(A).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,214129): father(A, _) :- male(A).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,182793 (regressionFit = 0,182792, penalties=1.12E-6) for clause:  father(_, A) :- male(A).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,182793): father(_, A) :- male(A).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,052227 (regressionFit = 0,052226, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- childof(B, A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,052227): father(A, B) :- childof(B, A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(A, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,211517 (regressionFit = 0,211516, penalties=1.23E-6) for clause:  father(A, _) :- siblingof(A, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(B, A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  father(_, A) :- siblingof(A, _).  [covers 1,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'father(A, B) :- childof(B, A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]' score=-0.052227252678092154
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,057451 (regressionFit = 0,057449, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(A).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 6,93889e-18, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): father(A, B) :- childof(B, A), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,151458 (regressionFit = 0,151456, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- childof(B, A), siblingof(A, _).  [covers 4,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'father(_, A) :- male(A).  [covers 12,0/16,0 pos, 0,0/0,0 neg]' score=-0.18279293437332253
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,192990 (regressionFit = 0,192988, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(B), male(A).  [covers 9,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 2,08167e-17, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(A, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,177761 (regressionFit = 0,177759, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(B), siblingof(A, _).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(B, A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  father(_, A) :- male(A), siblingof(A, _).  [covers 1,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'father(A, _) :- siblingof(A, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]' score=-0.21151747234627313
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 40 bad extensions.
%     Score = -0,212216 (regressionFit = 0,212214, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- siblingof(A, _), male(A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,170383 (regressionFit = 0,170381, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,212155 (regressionFit = 0,212153, penalties=2.1300000000000004E-6) for clause:  father(A, _) :- siblingof(A, B), male(B).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,142251 (regressionFit = 0,142249, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), childof(B, A).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,142251 (regressionFit = 0,142249, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, C), childof(B, C).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,211518 (regressionFit = 0,211516, penalties=2.24E-6) for clause:  father(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,211518 (regressionFit = 0,211516, penalties=2.0300000000000005E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,211518 (regressionFit = 0,211516, penalties=2.1400000000000003E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 8,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'father(A, _) :- male(A).  [covers 12,0/16,0 pos, 0,0/0,0 neg]' score=-0.21412867398017782
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,192990 (regressionFit = 0,192988, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(A), male(B).  [covers 9,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,057451 (regressionFit = 0,057449, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), childof(B, A).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(A, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,211946 (regressionFit = 0,211944, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- male(A), siblingof(A, _).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(B, A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(A), siblingof(B, _).  [covers 1,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(A, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(B, A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'father(_, A) :- siblingof(A, _).  [covers 1,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: father(A, B) :- childof(B, A), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=5.0
Comparing variance: 6.30808536718839E-19 to score=0.0025 #egs=11.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 149 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      father(A, B) :- childof(B, A), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #8 @ 13:52:13 7/14/21.  [Using 9.517.760 memory cells.]  %%%%%


% FOR father(A, B):
%   if ( childof(B, A), male(B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


% Clauses:

father(A, B, 0.17709649774527736) :- 
     childof(B, A), 
     male(B), 
     !. // Clause #1.

father(A, B, -0.07324622576333704) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_father(a, b, 0.17709649774527736) :-  /* #pos=5 */ 
   childof(b, a),
   male(b),
   !. // Flattened version of clause #1.

flattened_father(underscore, underscore, -0.07324622576333704) :-  /* #neg=11 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   childof(b, a)
%   male(b)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/father.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:4.069897638688981
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 17 21 23 30 36 43 56
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 0,0/80,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 0,0/80,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 0,0/80,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:13 7/14/21.  [Using 9.516.088 memory cells.]  %%%%%


% FOR father(A, B):
%   return 0;  // std dev = 2,017, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */


% Clauses:

father(A, B, 0) :- !. // Clause #1.


% The flattened versions of these clauses:

flattened_father(underscore, underscore, 0) :-  /* #neg=40 #pos=40 */ 
   !. // Flattened version of clause #1.


% The unique flattened literals:

% Learning 1 trees in this iteration for mother

% Learn model for: mother
% Kept 5 of the 5 positive examples.
% Kept 11 of the 21 negative examples.
% Time taken to learn 8 trees is 11,726 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.21484375
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 6 of the 21 negative examples.
% Dataset size: 11
Computing probabilities
prob time:3 milliseconds
No hidden examples for : mother
Time to build dataset: 3 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.013266084619600518
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 0 1 2 3 5 6 7 8
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 11,0/11,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 11,0/11,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 11,0/11,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 9,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,091346 (regressionFit = 0,091345, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,091346): mother(_, A) :- male(A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,068205 (regressionFit = 0,068204, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,068205): mother(_, A) :- female(A).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,004056 (regressionFit = 0,004055, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,004056): mother(A, B) :- childof(B, A).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,142321 (regressionFit = 0,142320, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 2,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 5,0/11,0 pos, 0,0/0,0 neg]' score=-0.004055958060261387
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,048645 (regressionFit = 0,048643, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,004057 (regressionFit = 0,004055, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,082087 (regressionFit = 0,082085, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 6,0/11,0 pos, 0,0/0,0 neg]' score=-0.06820476555415177
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,048645 (regressionFit = 0,048643, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,004057 (regressionFit = 0,004055, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,082087 (regressionFit = 0,082085, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 3,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]' score=-0.0913460228526627
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,091347 (regressionFit = 0,091345, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 2,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 6,0/11,0 pos, 0,0/0,0 neg]' score=-0.14232102193817417
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -0,134140 (regressionFit = 0,134138, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,137928 (regressionFit = 0,137926, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,076171 (regressionFit = 0,076169, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,076171 (regressionFit = 0,076169, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,076171 (regressionFit = 0,076169, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 3,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,142322 (regressionFit = 0,142320, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,142322 (regressionFit = 0,142320, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 6,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,142322 (regressionFit = 0,142320, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 6,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 9,0/11,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,091347 (regressionFit = 0,091345, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,048645 (regressionFit = 0,048643, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,048645 (regressionFit = 0,048643, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 4,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -0,145696 (regressionFit = 0,145694, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 2,0/11,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 2,0/11,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 2,0/11,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 2,0/11,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 2,0/11,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, B) :- childof(B, A).  [covers 5,0/11,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A).  [covers 5,0/11,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(A, B) :- childof(B, A).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=5.0
Comparing variance: 6.758230100435645E-4 to score=0.0025 #egs=6.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 6,0 < 2.1 * minPosCov = 6,3

% Time for loop #1: 15 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(A, B) :- childof(B, A).  [covers 5,0/11,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #9 @ 13:52:13 7/14/21.  [Using 9.587.392 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( childof(B, A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07533448519424314;  // std dev = 0,064, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


% Clauses:

mother(A, B, 0.15274385809367097) :- 
     childof(B, A), 
     !. // Clause #1.

mother(A, B, -0.07533448519424314) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_mother(a, b, 0.15274385809367097) :-  /* #pos=5 */ 
   childof(b, a),
   !. // Flattened version of clause #1.

flattened_mother(underscore, underscore, -0.07533448519424314) :-  /* #neg=6 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   childof(b, a)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/mother.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:4.4515706223362805
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 1 3 5 9 29 52 62 65
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 88,0/88,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 88,0/88,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 88,0/88,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -301,025269 (regressionFit = 301,025268, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 64,0/88,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -301,025269): mother(A, _) :- male(A).  [covers 64,0/88,0 pos, 0,0/0,0 neg]
%     Score = -14,312713 (regressionFit = 14,312712, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 40,0/88,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14,312713): mother(_, A) :- male(A).  [covers 40,0/88,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/88,0 pos, 0,0/0,0 neg]
%     Score = -0,174623 (regressionFit = 0,174622, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 45,0/88,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,174623): mother(_, A) :- female(A).  [covers 45,0/88,0 pos, 0,0/0,0 neg]
%     Score = -78,030588 (regressionFit = 78,030587, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 50,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379595 (regressionFit = 46,379594, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -267,589101 (regressionFit = 267,589100, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 54,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379595 (regressionFit = 46,379594, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379595 (regressionFit = 46,379594, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 18,0/88,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 45,0/88,0 pos, 0,0/0,0 neg]' score=-0.17462263172220474
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -15,824918 (regressionFit = 15,824916, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 36,0/88,0 pos, 0,0/0,0 neg]
%     Score = -0,174624 (regressionFit = 0,174622, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 45,0/88,0 pos, 0,0/0,0 neg]
%     Score = -28,629704 (regressionFit = 28,629702, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 27,0/88,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 40,0/88,0 pos, 0,0/0,0 neg]' score=-14.312712914498352
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -37,433977 (regressionFit = 37,433975, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 28,0/88,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -37,806060 (regressionFit = 37,806058, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 27,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 18,0/88,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 18,0/88,0 pos, 0,0/0,0 neg]' score=-46.37959494751298
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 18,0/88,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]' score=-46.37959494751298
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 18,0/88,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 18,0/88,0 pos, 0,0/0,0 neg]' score=-46.37959515751298
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 18,0/88,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 50,0/88,0 pos, 0,0/0,0 neg]' score=-78.03058831050117
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -15,824918 (regressionFit = 15,824916, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 36,0/88,0 pos, 0,0/0,0 neg]
%     Score = -0,174624 (regressionFit = 0,174622, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 45,0/88,0 pos, 0,0/0,0 neg]
%     Score = -28,629704 (regressionFit = 28,629702, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 27,0/88,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 54,0/88,0 pos, 0,0/0,0 neg]' score=-267.5891007513053
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -213,086177 (regressionFit = 213,086175, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 40,0/88,0 pos, 0,0/0,0 neg]
%     Score = -23,290486 (regressionFit = 23,290484, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 27,0/88,0 pos, 0,0/0,0 neg]
%     Score = -260,359413 (regressionFit = 260,359410, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 54,0/88,0 pos, 0,0/0,0 neg]
%     Score = -29,183260 (regressionFit = 29,183258, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 27,0/88,0 pos, 0,0/0,0 neg]
%     Score = -29,183260 (regressionFit = 29,183258, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 27,0/88,0 pos, 0,0/0,0 neg]
%     Score = -29,183260 (regressionFit = 29,183258, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 27,0/88,0 pos, 0,0/0,0 neg]
%     Score = -43,586572 (regressionFit = 43,586570, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -267,589102 (regressionFit = 267,589100, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 54,0/88,0 pos, 0,0/0,0 neg]
%     Score = -43,586572 (regressionFit = 43,586570, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -43,586572 (regressionFit = 43,586570, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -43,586572 (regressionFit = 43,586570, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -267,589102 (regressionFit = 267,589100, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 54,0/88,0 pos, 0,0/0,0 neg]
%     Score = -43,586572 (regressionFit = 43,586570, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -267,589102 (regressionFit = 267,589100, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 54,0/88,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 64,0/88,0 pos, 0,0/0,0 neg]' score=-301.02526870082045
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -37,433977 (regressionFit = 37,433975, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 28,0/88,0 pos, 0,0/0,0 neg]
%     Score = -15,824918 (regressionFit = 15,824916, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 36,0/88,0 pos, 0,0/0,0 neg]
%     Score = -15,824918 (regressionFit = 15,824916, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 36,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -212,927614 (regressionFit = 212,927612, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 40,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 18,0/88,0 pos, 0,0/0,0 neg]
%     Score = -46,379596 (regressionFit = 46,379594, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 18,0/88,0 pos, 0,0/0,0 neg]

***** Warning: #10 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: mother(_, A) :- female(A).  [covers 45,0/88,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 45,0/88,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(_, A) :- female(A).  [covers 45,0/88,0 pos, 0,0/0,0 neg]
Comparing variance: 5.052748343182935E-15 to score=0.0025 #egs=45.0
Comparing variance: 0.019402390191330818 to score=0.0025 #egs=9.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 43,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,019402)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,019402) into the LAST position (#1) in the search queue.

% Time for loop #1: 153 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(_, A) :- female(A).  [covers 45,0/88,0 pos, 0,0/0,0 neg]
% This clause covers 45 positive examples, of which 45 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 4 8 13 15 26 32 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 43,0/43,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 43,0/43,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'mother(_, _).  [covers 43,0/43,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,458311 (regressionFit = 0,458310, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 28,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,458311): mother(A, _) :- male(A).  [covers 28,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 40,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,174497 (regressionFit = 0,174496, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,174497): mother(A, B) :- childof(B, A).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305240 (regressionFit = 0,305239, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,503343 (regressionFit = 0,503341, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 27,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305240 (regressionFit = 0,305239, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305240 (regressionFit = 0,305239, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 18,0/43,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 5,0/43,0 pos, 0,0/0,0 neg]' score=-0.17449735651660633
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,174498 (regressionFit = 0,174496, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 5,0/43,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 18,0/43,0 pos, 0,0/0,0 neg]' score=-0.30523997848996776
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 18,0/43,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]' score=-0.30523997848996776
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 18,0/43,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 18,0/43,0 pos, 0,0/0,0 neg]' score=-0.30524018848996687
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 18,0/43,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'mother(A, _) :- male(A).  [covers 28,0/43,0 pos, 0,0/0,0 neg]' score=-0.45831115494031066
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,458312 (regressionFit = 0,458310, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 28,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,486076 (regressionFit = 0,486074, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 22,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 18,0/43,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 27,0/43,0 pos, 0,0/0,0 neg]' score=-0.5033426434661553
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,658817 (regressionFit = 0,658815, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 22,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,503344 (regressionFit = 0,503341, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 27,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,958680 (regressionFit = 0,958677, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 27,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,549392 (regressionFit = 0,549390, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,503344 (regressionFit = 0,503341, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 27,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,549392 (regressionFit = 0,549390, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,549391 (regressionFit = 0,549390, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,549392 (regressionFit = 0,549390, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,503343 (regressionFit = 0,503341, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 27,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,549391 (regressionFit = 0,549390, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,503344 (regressionFit = 0,503341, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 27,0/43,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'mother(_, A) :- male(A).  [covers 40,0/43,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,458312 (regressionFit = 0,458310, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 28,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,174498 (regressionFit = 0,174496, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,503344 (regressionFit = 0,503341, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 27,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 18,0/43,0 pos, 0,0/0,0 neg]
%     Score = -0,305241 (regressionFit = 0,305239, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 18,0/43,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/43,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, B) :- childof(B, A).  [covers 5,0/43,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A).  [covers 5,0/43,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,019.
% Will extend: mother(A, B) :- childof(B, A).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
Comparing variance: 4.4408920985006264E-17 to score=0.0025 #egs=5.0
Comparing variance: 0.021812042064575765 to score=0.0025 #egs=8.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 38,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0,021812)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -0,021812) into the LAST position (#1) in the search queue.

% Time for loop #2: 490 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      mother(A, B) :- childof(B, A).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 1 4 6 10 16 22 33
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 38,0/38,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 38,0/38,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'mother(_, _).  [covers 38,0/38,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,449694 (regressionFit = 0,449693, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 28,0/38,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,449694): mother(A, _) :- male(A).  [covers 28,0/38,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 35,0/38,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302327 (regressionFit = 0,302326, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,302327): mother(A, B) :- siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,498153 (regressionFit = 0,498151, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 27,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302327 (regressionFit = 0,302326, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 18,0/38,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]' score=-0.3023273012042842
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 18,0/38,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]' score=-0.3023273012042842
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 18,0/38,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 18,0/38,0 pos, 0,0/0,0 neg]' score=-0.3023275112042833
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302329 (regressionFit = 0,302326, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302329 (regressionFit = 0,302326, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 18,0/38,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1] 'mother(A, _) :- male(A).  [covers 28,0/38,0 pos, 0,0/0,0 neg]' score=-0.4496943072841265
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,449695 (regressionFit = 0,449693, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 28,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,483763 (regressionFit = 0,483760, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 22,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 18,0/38,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 27,0/38,0 pos, 0,0/0,0 neg]' score=-0.49815257448471767
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,596928 (regressionFit = 0,596926, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 22,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,498153 (regressionFit = 0,498151, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 27,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,953490 (regressionFit = 0,953487, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 27,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,463217 (regressionFit = 0,463215, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,498154 (regressionFit = 0,498151, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 27,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,463217 (regressionFit = 0,463215, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,463216 (regressionFit = 0,463215, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,463217 (regressionFit = 0,463215, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,498153 (regressionFit = 0,498151, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 27,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,463216 (regressionFit = 0,463215, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,498153 (regressionFit = 0,498151, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 27,0/38,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=1] 'mother(_, A) :- male(A).  [covers 35,0/38,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,449695 (regressionFit = 0,449693, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 28,0/38,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,498153 (regressionFit = 0,498151, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 27,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302328 (regressionFit = 0,302326, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%     Score = -0,302329 (regressionFit = 0,302326, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 18,0/38,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #3, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/38,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -0,022.
% Will extend: mother(A, B) :- siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
Comparing variance: 0.012752948659932952 to score=0.0025 #egs=18.0
Comparing variance: 0.014554641065098206 to score=0.0025 #egs=5.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 18,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0,012753)
%         ILP node to extend: mother(A, B) :- siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0,012753) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 20,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0,014555)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -0,014555) into position #1 in the search queue (new size=2).

% Time for loop #3: 312 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      mother(A, B) :- siblingof(A, B).  [covers 18,0/38,0 pos, 0,0/0,0 neg]
% This clause covers 18 positive examples, of which 18 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 5 6 9 11 12 13 14 16
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'mother(_, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,121866 (regressionFit = 0,121865, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 10,0/20,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,121866): mother(A, _) :- male(A).  [covers 10,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 17,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,091195 (regressionFit = 0,091193, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 9,0/20,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,091195): mother(A, _) :- siblingof(A, _).  [covers 9,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 9,0/20,0 pos, 0,0/0,0 neg]' score=-0.09119454892119176
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 46 bad extensions.
%     Score = -0,185369 (regressionFit = 0,185367, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 4,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,091195 (regressionFit = 0,091193, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 9,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,072810 (regressionFit = 0,072808, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/20,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,072810): mother(A, _) :- siblingof(A, B), male(B).  [covers 9,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,091196 (regressionFit = 0,091193, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 9,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,091195 (regressionFit = 0,091193, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 9,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,091195 (regressionFit = 0,091193, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 9,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1] 'mother(A, _) :- male(A).  [covers 10,0/20,0 pos, 0,0/0,0 neg]' score=-0.12186580319320703
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,121867 (regressionFit = 0,121865, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 10,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,072204 (regressionFit = 0,072202, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 4,0/20,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,072204): mother(A, _) :- male(A), siblingof(A, _).  [covers 4,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1] 'mother(_, A) :- male(A).  [covers 17,0/20,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,121867 (regressionFit = 0,121865, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 10,0/20,0 pos, 0,0/0,0 neg]
%     Score = -0,091195 (regressionFit = 0,091193, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 9,0/20,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- male(A), siblingof(A, _).  [covers 4,0/20,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- male(A), siblingof(A, _).  [covers 4,0/20,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -0,015.
% Will extend: mother(A, _) :- male(A), siblingof(A, _).  [covers 4,0/20,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 208 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      mother(A, _) :- male(A), siblingof(A, _).  [covers 4,0/20,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'mother(A, B) :- siblingof(A, B).  [covers 18,0/18,0 pos, 0,0/0,0 neg]'
%     Score = -0,302327 (regressionFit = 0,302326, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 18,0/18,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 2 6 9 12 13 14 16
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 18,0/18,0 pos, 0,0/0,0 neg]' score=-0.3023273012042842
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 40 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), male(A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), male(B).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), siblingof(A, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), siblingof(B, A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), siblingof(B, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), male(B).  [covers 18,0/18,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), male(A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), siblingof(A, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), siblingof(B, A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), siblingof(B, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), male(A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), male(B).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), male(C).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), siblingof(A, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), siblingof(B, A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(B, C).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), siblingof(B, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(C, A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(C, B).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(C, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), male(A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), male(B).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), siblingof(A, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), siblingof(B, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), male(A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), male(B).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), male(C).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(A, C).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), siblingof(A, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), siblingof(B, A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), siblingof(B, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(C, A).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(C, B).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(C, _).  [covers 18,0/18,0 pos, 0,0/0,0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -0,3023):
%  mother(A, B) :- siblingof(A, B).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
Created a leaf under (mother(F, G) :- siblingof(F, G))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:15 7/14/21.  [Using 10.645.848 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B) )
%   then return 3.6659845294161846;  // std dev = 4,77e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( childof(B, A) )
%   | then return -0.49350504808366874;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( siblingof(A, B) )
%   | | then return -0.6488240532099216;  // std dev = 0,113, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( male(A), siblingof(A, C) )
%   | | | then return -0.13766676073437922;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.43973083420540965;  // std dev = 0,269, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


% Clauses:

mother(A, B, 3.6659845294161846) :- 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.49350504808366874) :- 
     childof(B, A), 
     !. // Clause #2.

mother(A, B, -0.6488240532099216) :- 
     siblingof(A, B), 
     !. // Clause #3.

mother(A, B, -0.13766676073437922) :- 
     male(A), 
     siblingof(A, C), 
     !. // Clause #4.

mother(A, B, -0.43973083420540965) :- !. // Clause #5.


% The flattened versions of these clauses:

flattened_mother(underscore, a, 3.6659845294161846) :-  /* #pos=45 */ 
   female(a),
   !. // Flattened version of clause #1.

flattened_mother(a, b, -0.49350504808366874) :-  /* #neg=5 */ 
   childof(b, a),
   !. // Flattened version of clause #2.

flattened_mother(a, b, -0.6488240532099216) :-  /* #neg=18 */ 
   siblingof(a, b),
   !. // Flattened version of clause #3.

flattened_mother(a, underscore, -0.13766676073437922) :-  /* #neg=4 */ 
   male(a),
   siblingof(a, underscore),
   !. // Flattened version of clause #4.

flattened_mother(underscore, underscore, -0.43973083420540965) :-  /* #neg=16 */ 
   !. // Flattened version of clause #5.


% The unique flattened literals:
%   siblingof(a, b)
%   siblingof(a, underscore)
%   female(a)
%   childof(b, a)
%   male(a)

% Learning 1 trees in this iteration for father

% Learn model for: father
% Kept 5 of the 5 positive examples.
% Kept 10 of the 21 negative examples.
% Time taken to learn 8 trees is 4,505 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2222222222222222
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 11 of the 21 negative examples.
% Dataset size: 16
Computing probabilities
prob time:7 milliseconds
No hidden examples for : father
Time to build dataset: 7 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.010509412604766333
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 0 1 2 9 10 12 15
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 16,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -0,140636 (regressionFit = 0,140635, penalties=1.12E-6) for clause:  father(A, _) :- male(A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,140636): father(A, _) :- male(A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,122292 (regressionFit = 0,122291, penalties=1.12E-6) for clause:  father(_, A) :- male(A).  [covers 10,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,122292): father(_, A) :- male(A).  [covers 10,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,142674 (regressionFit = 0,142673, penalties=1.12E-6) for clause:  father(_, A) :- female(A).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,091720 (regressionFit = 0,091719, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- childof(B, A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,091720): father(A, B) :- childof(B, A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(A, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,159951 (regressionFit = 0,159949, penalties=1.23E-6) for clause:  father(A, _) :- siblingof(A, _).  [covers 7,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(B, A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  father(_, A) :- siblingof(A, _).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- mother(A, B).  [covers 2,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'father(A, B) :- childof(B, A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]' score=-0.09171953000523345
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,083605 (regressionFit = 0,083603, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,083605): father(A, B) :- childof(B, A), male(A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 6,93889e-18, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): father(A, B) :- childof(B, A), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,150514 (regressionFit = 0,150512, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), female(B).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,118217 (regressionFit = 0,118215, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- childof(B, A), siblingof(A, _).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), mother(A, B).  [covers 2,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'father(_, A) :- male(A).  [covers 10,0/16,0 pos, 0,0/0,0 neg]' score=-0.12229246667364459
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,109249 (regressionFit = 0,109247, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(B), male(A).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 6,93889e-18, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(A, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,138747 (regressionFit = 0,138745, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(B), siblingof(A, _).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(B, A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  father(_, A) :- male(A), siblingof(A, _).  [covers 1,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'father(A, _) :- male(A).  [covers 8,0/16,0 pos, 0,0/0,0 neg]' score=-0.14063616867469128
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,109249 (regressionFit = 0,109247, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(A), male(B).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,083605 (regressionFit = 0,083603, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), childof(B, A).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(A, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,158981 (regressionFit = 0,158979, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- male(A), siblingof(A, _).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(B, A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(A), siblingof(B, _).  [covers 1,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'father(_, A) :- female(A).  [covers 4,0/16,0 pos, 0,0/0,0 neg]' score=-0.1426743577859187
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,150514 (regressionFit = 0,150512, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- female(B), childof(B, A).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- female(B), siblingof(A, _).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- female(B), mother(A, B).  [covers 2,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'father(A, _) :- siblingof(A, _).  [covers 7,0/16,0 pos, 0,0/0,0 neg]' score=-0.15995054691917962
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants and have picked up 37 bad extensions.
%     Score = -0,160611 (regressionFit = 0,160609, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- siblingof(A, _), male(A).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,134869 (regressionFit = 0,134867, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,161370 (regressionFit = 0,161367, penalties=2.1300000000000004E-6) for clause:  father(A, _) :- siblingof(A, B), male(B).  [covers 7,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), female(B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,112866 (regressionFit = 0,112864, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), childof(B, A).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,112866 (regressionFit = 0,112864, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, C), childof(B, C).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,159952 (regressionFit = 0,159949, penalties=2.24E-6) for clause:  father(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 7,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,159951 (regressionFit = 0,159949, penalties=2.0300000000000005E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 7,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -0,159951 (regressionFit = 0,159949, penalties=2.1400000000000003E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 7,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), mother(A, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, C), mother(C, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(A, B).  [covers 1,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(B, A).  [covers 1,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'father(_, A) :- siblingof(A, _).  [covers 1,0/16,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #11 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: father(A, B) :- childof(B, A), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=5.0
Comparing variance: 6.30808536718839E-19 to score=0.0025 #egs=11.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 21 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      father(A, B) :- childof(B, A), male(B).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #9 @ 13:52:15 7/14/21.  [Using 10.683.160 memory cells.]  %%%%%


% FOR father(A, B):
%   if ( childof(B, A), male(B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


% Clauses:

father(A, B, 0.15274385809367097) :- 
     childof(B, A), 
     male(B), 
     !. // Clause #1.

father(A, B, -0.06842697784420272) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_father(a, b, 0.15274385809367097) :-  /* #pos=5 */ 
   childof(b, a),
   male(b),
   !. // Flattened version of clause #1.

flattened_father(underscore, underscore, -0.06842697784420272) :-  /* #neg=11 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   childof(b, a)
%   male(b)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/father.model.ckpt
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:4.4515706223362805
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 13 15 23 33 34 39 47 71
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 0,0/88,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 0,0/88,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 0,0/88,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:15 7/14/21.  [Using 10.678.552 memory cells.]  %%%%%


% FOR father(A, B):
%   return 0;  // std dev = 2,110, 88,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */


% Clauses:

father(A, B, 0) :- !. // Clause #1.


% The flattened versions of these clauses:

flattened_father(underscore, underscore, 0) :-  /* #neg=43 #pos=45 */ 
   !. // Flattened version of clause #1.


% The unique flattened literals:

% Learning 1 trees in this iteration for mother

% Learn model for: mother
% Kept 5 of the 5 positive examples.
% Kept 8 of the 21 negative examples.
% Time taken to learn 9 trees is 13,680 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2366863905325444
Set score:0.0025
% Kept 5 of the 5 positive examples.
% Kept 9 of the 21 negative examples.
% Dataset size: 14
Computing probabilities
prob time:4 milliseconds
No hidden examples for : mother
Time to build dataset: 4 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.008988864592523273
Set score:0.002247216148130818
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 0 1 2 4 6 7 8 9
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,125639 (regressionFit = 0,125637, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 11,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,125639): mother(A, _) :- male(A).  [covers 11,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,000320 (regressionFit = 0,000319, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000320): mother(_, A) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,000320 (regressionFit = 0,000319, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,062257 (regressionFit = 0,062256, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,123145 (regressionFit = 0,123144, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 7,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]' score=-3.2024482083500117E-4
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,058338 (regressionFit = 0,058336, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,097636 (regressionFit = 0,097634, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 4,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]' score=-3.20244820835022E-4
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,035468 (regressionFit = 0,035466, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,000321 (regressionFit = 0,000319, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,064225 (regressionFit = 0,064223, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 7,0/14,0 pos, 0,0/0,0 neg]' score=-0.062257150927161616
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,069271 (regressionFit = 0,069269, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,000321 (regressionFit = 0,000319, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,094472 (regressionFit = 0,094470, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 4,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 7,0/14,0 pos, 0,0/0,0 neg]' score=-0.12314502323357701
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 43 bad extensions.
%     Score = -0,121033 (regressionFit = 0,121030, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,070724 (regressionFit = 0,070722, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,124224 (regressionFit = 0,124222, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,057147 (regressionFit = 0,057145, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,089432 (regressionFit = 0,089430, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,089432 (regressionFit = 0,089430, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,123146 (regressionFit = 0,123144, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,123146 (regressionFit = 0,123144, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,123146 (regressionFit = 0,123144, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 7,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 11,0/14,0 pos, 0,0/0,0 neg]' score=-0.12563853091287824
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,058338 (regressionFit = 0,058336, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,035468 (regressionFit = 0,035466, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,069271 (regressionFit = 0,069269, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,120866 (regressionFit = 0,120864, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 4,0/14,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(_, A) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]
Comparing variance: 3.545831342611124E-5 to score=0.002247216148130818 #egs=9.0
Comparing variance: 0.0 to score=0.002247216148130818 #egs=5.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.002247216148130818
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 5,0 < 2.1 * minPosCov = 6,3

% Time for loop #1: 14 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(_, A) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]
% This clause covers 9 positive examples, of which 9 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #10 @ 13:52:15 7/14/21.  [Using 10.627.344 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( male(B) )
%   then return -0.0636093049355057;  // std dev = 0,018, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


% Clauses:

mother(A, B, -0.0636093049355057) :- 
     male(B), 
     !. // Clause #1.

mother(A, B, 0.13400703000801117) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_mother(underscore, a, -0.0636093049355057) :-  /* #neg=9 */ 
   male(a),
   !. // Flattened version of clause #1.

flattened_mother(underscore, underscore, 0.13400703000801117) :-  /* #pos=5 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   male(a)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/mother.model.ckpt
% Saving model in: datasets\Father-Mother\train/models/bRDNs/mother.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for mother.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).

logPrior(-1.8).
mother(F, G, Total) :- // A general accessor. 
   mother(F, G, 1000000, Total), !.
mother(F, G, Total) :- waitHere("This should not fail", mother(F, G, Total)).

mother(F, G, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_mother_tree1(F, G, TreesToUse, Total1),
   getScore_mother_tree2(F, G, TreesToUse, Total2),
   getScore_mother_tree3(F, G, TreesToUse, Total3),
   getScore_mother_tree4(F, G, TreesToUse, Total4),
   getScore_mother_tree5(F, G, TreesToUse, Total5),
   getScore_mother_tree6(F, G, TreesToUse, Total6),
   getScore_mother_tree7(F, G, TreesToUse, Total7),
   getScore_mother_tree8(F, G, TreesToUse, Total8),
   getScore_mother_tree9(F, G, TreesToUse, Total9),
   getScore_mother_tree10(F, G, TreesToUse, Total10),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10,
   !.
mother(F, G, TreesToUse, Total) :- waitHere("This should not fail", mother(F, G, TreesToUse, Total)).

getScore_mother_tree1(F, G, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_mother_tree1(F, G, TreesToUse, Total1) :- mother_tree1(F, G, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_mother_tree2(F, G, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_mother_tree2(F, G, TreesToUse, Total2) :- mother_tree2(F, G, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_mother_tree3(F, G, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_mother_tree3(F, G, TreesToUse, Total3) :- mother_tree3(F, G, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_mother_tree4(F, G, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_mother_tree4(F, G, TreesToUse, Total4) :- mother_tree4(F, G, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_mother_tree5(F, G, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_mother_tree5(F, G, TreesToUse, Total5) :- mother_tree5(F, G, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_mother_tree6(F, G, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_mother_tree6(F, G, TreesToUse, Total6) :- mother_tree6(F, G, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_mother_tree7(F, G, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_mother_tree7(F, G, TreesToUse, Total7) :- mother_tree7(F, G, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_mother_tree8(F, G, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_mother_tree8(F, G, TreesToUse, Total8) :- mother_tree8(F, G, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_mother_tree9(F, G, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_mother_tree9(F, G, TreesToUse, Total9) :- mother_tree9(F, G, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_mother_tree10(F, G, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_mother_tree10(F, G, TreesToUse, Total10) :- mother_tree10(F, G, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(mother, 18, [
   siblingof(a, b),
   male(uniqueVar6),
   female(b),
   female(a),
   siblingof(a, uniqueVar5),
   siblingof(a, uniqueVar4),
   siblingof(a, uniqueVar3),
   male(uniqueVar5),
   siblingof(a, underscore),
   childof(b, a),
   male(uniqueVar3),
   male(uniqueVar4),
   male(a),
   siblingof(a, uniqueVar2),
   siblingof(a, uniqueVar1),
   male(uniqueVar2),
   male(uniqueVar1),
   siblingof(a, uniqueVar6)]).
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:4.82995754143076
Set score:0.002247216148130818
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 0 2 11 16 33 42 63 68
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 97,0/97,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 97,0/97,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'mother(_, _).  [covers 97,0/97,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -361,051236 (regressionFit = 361,051235, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 71,0/97,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -361,051236): mother(A, _) :- male(A).  [covers 71,0/97,0 pos, 0,0/0,0 neg]
%     Score = -15,531568 (regressionFit = 15,531567, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 44,0/97,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -15,531568): mother(_, A) :- male(A).  [covers 44,0/97,0 pos, 0,0/0,0 neg]
%     Score = -0,236968 (regressionFit = 0,236967, penalties=1.12E-6) for clause:  mother(_, A) :- female(A).  [covers 50,0/97,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,236968): mother(_, A) :- female(A).  [covers 50,0/97,0 pos, 0,0/0,0 neg]
%     Score = -84,026817 (regressionFit = 84,026816, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 55,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041558 (regressionFit = 50,041557, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -320,031837 (regressionFit = 320,031836, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 60,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041558 (regressionFit = 50,041557, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041558 (regressionFit = 50,041557, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 20,0/97,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'mother(_, A) :- female(A).  [covers 50,0/97,0 pos, 0,0/0,0 neg]' score=-0.23696769481727578
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -17,118002 (regressionFit = 17,118000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), male(A).  [covers 40,0/97,0 pos, 0,0/0,0 neg]
%     Score = -0,236969 (regressionFit = 0,236967, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- female(B), childof(B, A).  [covers 50,0/97,0 pos, 0,0/0,0 neg]
%     Score = -30,929757 (regressionFit = 30,929755, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- female(B), siblingof(A, _).  [covers 30,0/97,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'mother(_, A) :- male(A).  [covers 44,0/97,0 pos, 0,0/0,0 neg]' score=-15.531568001387349
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -40,396468 (regressionFit = 40,396466, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 31,0/97,0 pos, 0,0/0,0 neg]
%     Score = -58,073010 (regressionFit = 58,073008, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 5,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -40,779276 (regressionFit = 40,779274, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 30,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 20,0/97,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 20,0/97,0 pos, 0,0/0,0 neg]' score=-50.04155785213665
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 20,0/97,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]' score=-50.04155785213665
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 20,0/97,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 20,0/97,0 pos, 0,0/0,0 neg]' score=-50.04155806213665
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 20,0/97,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 55,0/97,0 pos, 0,0/0,0 neg]' score=-84.02681687922943
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -17,118002 (regressionFit = 17,118000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(A).  [covers 40,0/97,0 pos, 0,0/0,0 neg]
%     Score = -58,073010 (regressionFit = 58,073008, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 5,0/97,0 pos, 0,0/0,0 neg]
%     Score = -0,236969 (regressionFit = 0,236967, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), female(B).  [covers 50,0/97,0 pos, 0,0/0,0 neg]
%     Score = -30,929757 (regressionFit = 30,929755, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- childof(B, A), siblingof(A, _).  [covers 30,0/97,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 60,0/97,0 pos, 0,0/0,0 neg]' score=-320.03183706601294
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 0 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants and have picked up 39 bad extensions.
%     Score = -251,133237 (regressionFit = 251,133235, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 44,0/97,0 pos, 0,0/0,0 neg]
%     Score = -25,186751 (regressionFit = 25,186749, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 30,0/97,0 pos, 0,0/0,0 neg]
%     Score = -312,952669 (regressionFit = 312,952667, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 60,0/97,0 pos, 0,0/0,0 neg]
%     Score = -31,457233 (regressionFit = 31,457231, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), female(B).  [covers 30,0/97,0 pos, 0,0/0,0 neg]
%     Score = -31,457233 (regressionFit = 31,457231, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), childof(B, A).  [covers 30,0/97,0 pos, 0,0/0,0 neg]
%     Score = -31,457233 (regressionFit = 31,457231, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, C), childof(B, C).  [covers 30,0/97,0 pos, 0,0/0,0 neg]
%     Score = -47,081182 (regressionFit = 47,081180, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -320,031838 (regressionFit = 320,031836, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 60,0/97,0 pos, 0,0/0,0 neg]
%     Score = -47,081182 (regressionFit = 47,081180, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -47,081182 (regressionFit = 47,081180, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -47,081182 (regressionFit = 47,081180, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -320,031838 (regressionFit = 320,031836, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 60,0/97,0 pos, 0,0/0,0 neg]
%     Score = -47,081182 (regressionFit = 47,081180, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -320,031838 (regressionFit = 320,031836, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 60,0/97,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'mother(A, _) :- male(A).  [covers 71,0/97,0 pos, 0,0/0,0 neg]' score=-361.0512358755349
%  At # nodes expanded = 9, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -40,396468 (regressionFit = 40,396466, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 31,0/97,0 pos, 0,0/0,0 neg]
%     Score = -17,118002 (regressionFit = 17,118000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), female(B).  [covers 40,0/97,0 pos, 0,0/0,0 neg]
%     Score = -17,118002 (regressionFit = 17,118000, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), childof(B, A).  [covers 40,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -250,893877 (regressionFit = 250,893875, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 44,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 20,0/97,0 pos, 0,0/0,0 neg]
%     Score = -50,041559 (regressionFit = 50,041557, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 20,0/97,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 50,0/97,0 pos, 0,0/0,0 neg]

% The best node found: mother(_, A) :- female(A).  [covers 50,0/97,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: mother(_, A) :- female(A).  [covers 50,0/97,0 pos, 0,0/0,0 neg]
Comparing variance: -1.5916157281026246E-14 to score=0.002247216148130818 #egs=50.0
Comparing variance: 0.026329619424141755 to score=0.002247216148130818 #egs=9.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.002247216148130818
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 47,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,026330)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,026330) into the LAST position (#1) in the search queue.

% Time for loop #1: 131 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      mother(_, A) :- female(A).  [covers 50,0/97,0 pos, 0,0/0,0 neg]
% This clause covers 50 positive examples, of which 50 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 1 4 5 12 13 28 29 43
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 47,0/47,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'mother(_, _).  [covers 47,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,668061 (regressionFit = 0,668060, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 31,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,668061): mother(A, _) :- male(A).  [covers 31,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 44,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,235394 (regressionFit = 0,235393, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- childof(B, A).  [covers 5,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,235394): mother(A, B) :- childof(B, A).  [covers 5,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446466 (regressionFit = 0,446465, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,711889 (regressionFit = 0,711888, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 30,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446466 (regressionFit = 0,446465, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 20,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'mother(A, B) :- childof(B, A).  [covers 5,0/47,0 pos, 0,0/0,0 neg]' score=-0.2353936124961062
%  At # nodes expanded = 2, |OPEN| = 7.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,235395 (regressionFit = 0,235393, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- childof(B, A), male(B).  [covers 5,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 20,0/47,0 pos, 0,0/0,0 neg]' score=-0.4464664316373872
%  At # nodes expanded = 3, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 20,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]' score=-0.4464664316373872
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 20,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 20,0/47,0 pos, 0,0/0,0 neg]' score=-0.44646664163738187
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,446468 (regressionFit = 0,446465, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446468 (regressionFit = 0,446465, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446468 (regressionFit = 0,446465, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446468 (regressionFit = 0,446465, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446468 (regressionFit = 0,446465, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446468 (regressionFit = 0,446465, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 20,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'mother(A, _) :- male(A).  [covers 31,0/47,0 pos, 0,0/0,0 neg]' score=-0.6680612237508251
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,668062 (regressionFit = 0,668060, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 31,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,710474 (regressionFit = 0,710472, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 24,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446468 (regressionFit = 0,446465, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 20,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 30,0/47,0 pos, 0,0/0,0 neg]' score=-0.7118889478157926
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,867504 (regressionFit = 0,867501, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 24,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,711890 (regressionFit = 0,711888, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 30,0/47,0 pos, 0,0/0,0 neg]
%     Score = -1,263469 (regressionFit = 1,263467, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 30,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,697851 (regressionFit = 0,697849, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,711890 (regressionFit = 0,711888, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 30,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,697851 (regressionFit = 0,697849, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,697851 (regressionFit = 0,697849, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,697851 (regressionFit = 0,697849, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,711890 (regressionFit = 0,711888, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 30,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,697851 (regressionFit = 0,697849, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,711890 (regressionFit = 0,711888, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 30,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #2, bodyLen=1] 'mother(_, A) :- male(A).  [covers 44,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 18 bad extensions.
%     Score = -0,668062 (regressionFit = 0,668060, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 31,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,235395 (regressionFit = 0,235393, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), childof(B, A).  [covers 5,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,711890 (regressionFit = 0,711888, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 30,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446467 (regressionFit = 0,446465, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -0,446468 (regressionFit = 0,446465, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 20,0/47,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #2, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/47,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, B) :- childof(B, A).  [covers 5,0/47,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- childof(B, A).  [covers 5,0/47,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,026.
% Will extend: mother(A, B) :- childof(B, A).  [covers 5,0/47,0 pos, 0,0/0,0 neg]
Comparing variance: 4.4408920985006264E-17 to score=0.002247216148130818 #egs=5.0
Comparing variance: 0.02942407406201325 to score=0.002247216148130818 #egs=8.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 42,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-0,029424)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -0,029424) into the LAST position (#1) in the search queue.

% Time for loop #2: 54 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      mother(A, B) :- childof(B, A).  [covers 5,0/47,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 6 positive seeds: 0 7 25 32 37 38
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 42,0/42,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 42,0/42,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'mother(_, _).  [covers 42,0/42,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,662379 (regressionFit = 0,662377, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 31,0/42,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,662379): mother(A, _) :- male(A).  [covers 31,0/42,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 39,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445449 (regressionFit = 0,445448, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,445449): mother(A, B) :- siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,708908 (regressionFit = 0,708907, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 30,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445449 (regressionFit = 0,445448, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(B, A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445449 (regressionFit = 0,445448, penalties=1.23E-6) for clause:  mother(_, A) :- siblingof(A, _).  [covers 20,0/42,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]' score=-0.4454485263880117
%  At # nodes expanded = 2, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445449 (regressionFit = 0,445448, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 20,0/42,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #3, bodyLen=1] 'mother(A, B) :- siblingof(B, A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]' score=-0.4454485263880117
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(B, A), male(B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445449 (regressionFit = 0,445448, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 20,0/42,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1] 'mother(_, A) :- siblingof(A, _).  [covers 20,0/42,0 pos, 0,0/0,0 neg]' score=-0.44544873638800636
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(B, _), male(A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- siblingof(A, _), male(A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.1300000000000004E-6) for clause:  mother(_, A) :- siblingof(A, B), male(B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445449 (regressionFit = 0,445448, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.24E-6) for clause:  mother(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445449 (regressionFit = 0,445448, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0300000000000005E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.1400000000000003E-6) for clause:  mother(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 20,0/42,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1] 'mother(A, _) :- male(A).  [covers 31,0/42,0 pos, 0,0/0,0 neg]' score=-0.6623785696676655
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,662379 (regressionFit = 0,662377, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 31,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,710030 (regressionFit = 0,710027, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- male(A), siblingof(A, _).  [covers 24,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(A), siblingof(B, A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(A), siblingof(B, _).  [covers 20,0/42,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #3, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 30,0/42,0 pos, 0,0/0,0 neg]' score=-0.708907947565151
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,814869 (regressionFit = 0,814866, penalties=2.2300000000000002E-6) for clause:  mother(A, _) :- siblingof(A, _), male(A).  [covers 24,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,708909 (regressionFit = 0,708907, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 30,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1,260488 (regressionFit = 1,260486, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 30,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,618152 (regressionFit = 0,618150, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,708909 (regressionFit = 0,708907, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 30,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,618152 (regressionFit = 0,618150, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,618152 (regressionFit = 0,618150, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,618152 (regressionFit = 0,618150, penalties=2.1400000000000003E-6) for clause:  mother(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,708909 (regressionFit = 0,708907, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 30,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,618152 (regressionFit = 0,618150, penalties=1.93E-6) for clause:  mother(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,708909 (regressionFit = 0,708907, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 30,0/42,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #3, bodyLen=1] 'mother(_, A) :- male(A).  [covers 39,0/42,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,662379 (regressionFit = 0,662377, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 31,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,708909 (regressionFit = 0,708907, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 30,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), siblingof(B, A).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%     Score = -0,445450 (regressionFit = 0,445448, penalties=2.2300000000000002E-6) for clause:  mother(_, A) :- male(A), siblingof(A, _).  [covers 20,0/42,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, B) :- siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -0,029.
% Will extend: mother(A, B) :- siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
Comparing variance: 0.016848561636405267 to score=0.002247216148130818 #egs=20.0
Comparing variance: 0.02169525473198126 to score=0.002247216148130818 #egs=5.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 20,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0,016849)
%         ILP node to extend: mother(A, B) :- siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -0,016849) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-0,021695)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -0,021695) into position #1 in the search queue (new size=2).

% Time for loop #3: 29 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      mother(A, B) :- siblingof(A, B).  [covers 20,0/42,0 pos, 0,0/0,0 neg]
% This clause covers 20 positive examples, of which 20 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 6 positive seeds: 4 7 10 12 15 19
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = mother(F, G)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  mother(_, _).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
% Most-general root: mother(_, _).  [covers 22,0/22,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'mother(_, _).  [covers 22,0/22,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,213315 (regressionFit = 0,213314, penalties=1.12E-6) for clause:  mother(A, _) :- male(A).  [covers 11,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,213315): mother(A, _) :- male(A).  [covers 11,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(_, A) :- male(A).  [covers 19,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  mother(A, _) :- female(A).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -0,161008 (regressionFit = 0,161007, penalties=1.23E-6) for clause:  mother(A, _) :- siblingof(A, _).  [covers 10,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,161008): mother(A, _) :- siblingof(A, _).  [covers 10,0/22,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=1] 'mother(A, _) :- siblingof(A, _).  [covers 10,0/22,0 pos, 0,0/0,0 neg]' score=-0.16100830716323447
%  At # nodes expanded = 2, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 47 bad extensions.
%     Score = -0,161009 (regressionFit = 0,161007, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, _), male(B).  [covers 10,0/22,0 pos, 0,0/0,0 neg]
%     Score = -0,088503 (regressionFit = 0,088501, penalties=2.1300000000000004E-6) for clause:  mother(A, _) :- siblingof(A, B), male(B).  [covers 10,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,088503): mother(A, _) :- siblingof(A, B), male(B).  [covers 10,0/22,0 pos, 0,0/0,0 neg]
%     Score = -0,161009 (regressionFit = 0,161007, penalties=2.24E-6) for clause:  mother(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 10,0/22,0 pos, 0,0/0,0 neg]
%     Score = -0,161009 (regressionFit = 0,161007, penalties=2.0300000000000005E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 10,0/22,0 pos, 0,0/0,0 neg]
%     Score = -0,161009 (regressionFit = 0,161007, penalties=2.1400000000000003E-6) for clause:  mother(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 10,0/22,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #4, bodyLen=1] 'mother(A, _) :- male(A).  [covers 11,0/22,0 pos, 0,0/0,0 neg]' score=-0.21331484805225928
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 22 bad extensions.
%     Score = -0,213316 (regressionFit = 0,213314, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(A), male(B).  [covers 11,0/22,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1] 'mother(_, A) :- male(A).  [covers 19,0/22,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 21 bad extensions.
%     Score = -0,213316 (regressionFit = 0,213314, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- male(B), male(A).  [covers 11,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- male(B), female(A).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -0,161009 (regressionFit = 0,161007, penalties=2.1300000000000004E-6) for clause:  mother(A, B) :- male(B), siblingof(A, _).  [covers 10,0/22,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=1] 'mother(A, _) :- female(A).  [covers 2,0/22,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 10,0/22,0 pos, 0,0/0,0 neg]

% The best node found: mother(A, _) :- siblingof(A, B), male(B).  [covers 10,0/22,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -0,022.
% Will extend: mother(A, _) :- siblingof(A, B), male(B).  [covers 10,0/22,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 3 >= 3

% Time for loop #4: 11 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      mother(A, _) :- siblingof(A, B), male(B).  [covers 10,0/22,0 pos, 0,0/0,0 neg]
% This clause covers 10 positive examples, of which 10 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'mother(A, B) :- siblingof(A, B).  [covers 20,0/20,0 pos, 0,0/0,0 neg]'
%     Score = -0,445449 (regressionFit = 0,445448, penalties=1.0200000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B).  [covers 20,0/20,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 2 3 7 9 10 14 15
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #5, bodyLen=1] 'mother(A, B) :- siblingof(A, B).  [covers 20,0/20,0 pos, 0,0/0,0 neg]' score=-0.4454485263880117
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 40 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), male(A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), male(B).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), siblingof(A, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), siblingof(B, A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(A), siblingof(B, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), male(B).  [covers 20,0/20,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), male(A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), siblingof(A, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), siblingof(B, A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), male(B), siblingof(B, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), male(A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), male(B).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), male(C).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), siblingof(A, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), siblingof(B, A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(B, C).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, _), siblingof(B, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(C, A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(C, B).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(A, C), siblingof(C, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), male(A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), male(B).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), siblingof(A, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, A), siblingof(B, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #5, bodyLen=2] 'mother(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 0 variant children.  Sending 10 items to OPEN for evaluation and possible insertion.
% Have created 10 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), male(A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0300000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), male(B).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000007E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), male(C).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(A, C).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), siblingof(A, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9300000000000003E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), siblingof(B, A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0400000000000005E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, _), siblingof(B, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(C, A).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.8300000000000004E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(C, B).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.9400000000000002E-6) for clause:  mother(A, B) :- siblingof(A, B), siblingof(B, C), siblingof(C, _).  [covers 20,0/20,0 pos, 0,0/0,0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -0,4454):
%  mother(A, B) :- siblingof(A, B).  [covers 20,0/20,0 pos, 0,0/0,0 neg]
Created a leaf under (mother(F, G) :- siblingof(F, G))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:16 7/14/21.  [Using 11.679.656 memory cells.]  %%%%%


% FOR mother(A, B):
%   if ( female(B) )
%   then return 3.7999915594241975;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( childof(B, A) )
%   | then return -0.49350504808366874;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( siblingof(A, B) )
%   | | then return -0.6961119095327581;  // std dev = 0,130, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( siblingof(A, C), male(C) )
%   | | | then return -0.19850182309593328;  // std dev = 0,036, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.4304600879293816;  // std dev = 0,295, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


% Clauses:

mother(A, B, 3.7999915594241975) :- 
     female(B), 
     !. // Clause #1.

mother(A, B, -0.49350504808366874) :- 
     childof(B, A), 
     !. // Clause #2.

mother(A, B, -0.6961119095327581) :- 
     siblingof(A, B), 
     !. // Clause #3.

mother(A, B, -0.19850182309593328) :- 
     siblingof(A, C), 
     male(C), 
     !. // Clause #4.

mother(A, B, -0.4304600879293816) :- !. // Clause #5.


% The flattened versions of these clauses:

flattened_mother(underscore, a, 3.7999915594241975) :-  /* #pos=50 */ 
   female(a),
   !. // Flattened version of clause #1.

flattened_mother(a, b, -0.49350504808366874) :-  /* #neg=5 */ 
   childof(b, a),
   !. // Flattened version of clause #2.

flattened_mother(a, b, -0.6961119095327581) :-  /* #neg=20 */ 
   siblingof(a, b),
   !. // Flattened version of clause #3.

flattened_mother(a, underscore, -0.19850182309593328) :-  /* #neg=10 */ 
   siblingof(a, uniqueVar7),
   male(uniqueVar7),
   !. // Flattened version of clause #4.

flattened_mother(underscore, underscore, -0.4304600879293816) :-  /* #neg=12 */ 
   !. // Flattened version of clause #5.


% The unique flattened literals:
%   siblingof(a, b)
%   male(uniqueVar7)
%   siblingof(a, uniqueVar7)
%   female(a)
%   childof(b, a)

% Time taken to learn model for 'mother': 1,040 seconds.
% Learning 1 trees in this iteration for father

% Learn model for: father
% Kept 5 of the 5 positive examples.
% Kept 11 of the 21 negative examples.
% Time taken to learn 9 trees is 4,885 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.21484375
Set score:0.002247216148130818
% Kept 5 of the 5 positive examples.
% Kept 9 of the 21 negative examples.
% Dataset size: 14
Computing probabilities
prob time:4 milliseconds
No hidden examples for : father
Time to build dataset: 4 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.009019008391446624
Set score:0.002247216148130818
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 0 1 2 6 8 9 12 13
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 14,0/14,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  father(A, _) :- male(A).  [covers 12,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,087296 (regressionFit = 0,087295, penalties=1.12E-6) for clause:  father(_, A) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,087296): father(_, A) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,098208 (regressionFit = 0,098207, penalties=1.12E-6) for clause:  father(_, A) :- female(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,032737 (regressionFit = 0,032736, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- childof(B, A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,032737): father(A, B) :- childof(B, A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107136 (regressionFit = 0,107135, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,123461 (regressionFit = 0,123460, penalties=1.23E-6) for clause:  father(A, _) :- siblingof(A, _).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107136 (regressionFit = 0,107135, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107136 (regressionFit = 0,107135, penalties=1.23E-6) for clause:  father(_, A) :- siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0200000000000002E-6) for clause:  father(A, B) :- mother(A, B).  [covers 1,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'father(A, B) :- childof(B, A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]' score=-0.03273668008747292
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,066346 (regressionFit = 0,066344, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 6,93889e-18, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), male(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): father(A, B) :- childof(B, A), male(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), female(B).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,064283 (regressionFit = 0,064281, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- childof(B, A), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- childof(B, A), mother(A, B).  [covers 1,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'father(_, A) :- male(A).  [covers 9,0/14,0 pos, 0,0/0,0 neg]' score=-0.08729621356659448
%  At # nodes expanded = 3, |OPEN| = 7.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 19 bad extensions.
%     Score = -0,111303 (regressionFit = 0,111301, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(B), male(A).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 6,93889e-18, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,117851 (regressionFit = 0,117848, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(B), siblingof(A, _).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(B), siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.2300000000000002E-6) for clause:  father(_, A) :- male(A), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'father(_, A) :- female(A).  [covers 4,0/14,0 pos, 0,0/0,0 neg]' score=-0.0982081002624188
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- female(B), male(A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- female(B), childof(B, A).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- female(B), mother(A, B).  [covers 1,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]' score=-0.10713590755900233
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- siblingof(A, B), male(A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- siblingof(A, B), male(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, B), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- siblingof(A, B), siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, B), siblingof(B, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'father(A, B) :- siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]' score=-0.10713590755900233
%  At # nodes expanded = 6, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 20 bad extensions.
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- siblingof(B, A), male(A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- siblingof(B, A), male(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- siblingof(B, A), siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(B, A), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(B, A), siblingof(B, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'father(_, A) :- siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]' score=-0.10713611755900233
%  At # nodes expanded = 7, |OPEN| = 3.  Pruned 0 variant children.  Sending 11 items to OPEN for evaluation and possible insertion.
% Have created 11 valid-on-seeds descendants and have picked up 42 bad extensions.
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(B, _), male(A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.2300000000000002E-6) for clause:  father(_, A) :- siblingof(A, _), male(A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.1300000000000004E-6) for clause:  father(_, A) :- siblingof(A, B), male(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(B, _), siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(B, C), siblingof(A, C).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.1400000000000003E-6) for clause:  father(A, B) :- siblingof(B, _), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(B, _), siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.24E-6) for clause:  father(_, A) :- siblingof(A, _), siblingof(A, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(B, C), siblingof(C, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0300000000000005E-6) for clause:  father(_, A) :- siblingof(A, B), siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.1400000000000003E-6) for clause:  father(_, A) :- siblingof(A, B), siblingof(B, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'father(A, _) :- siblingof(A, _).  [covers 7,0/14,0 pos, 0,0/0,0 neg]' score=-0.12346143375846935
%  At # nodes expanded = 8, |OPEN| = 2.  Pruned 0 variant children.  Sending 13 items to OPEN for evaluation and possible insertion.
% Have created 13 valid-on-seeds descendants and have picked up 40 bad extensions.
%     Score = -0,119240 (regressionFit = 0,119238, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- siblingof(A, _), male(A).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,115798 (regressionFit = 0,115796, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), male(B).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,121015 (regressionFit = 0,121013, penalties=2.1300000000000004E-6) for clause:  father(A, _) :- siblingof(A, B), male(B).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,057242 (regressionFit = 0,057240, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- siblingof(A, _), childof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,057242 (regressionFit = 0,057240, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, C), childof(B, C).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,093058 (regressionFit = 0,093056, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,123462 (regressionFit = 0,123460, penalties=2.24E-6) for clause:  father(A, _) :- siblingof(A, _), siblingof(A, _).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,093058 (regressionFit = 0,093056, penalties=2.0300000000000005E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,093058 (regressionFit = 0,093056, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(B, C).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,093058 (regressionFit = 0,093056, penalties=2.1400000000000003E-6) for clause:  father(A, B) :- siblingof(A, _), siblingof(B, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,123462 (regressionFit = 0,123460, penalties=2.0300000000000005E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, A).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,093058 (regressionFit = 0,093056, penalties=1.93E-6) for clause:  father(A, B) :- siblingof(A, C), siblingof(C, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,123462 (regressionFit = 0,123460, penalties=2.1400000000000003E-6) for clause:  father(A, _) :- siblingof(A, B), siblingof(B, _).  [covers 7,0/14,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=1] 'father(A, _) :- male(A).  [covers 12,0/14,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 9, |OPEN| = 1.  Pruned 0 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 17 bad extensions.
%     Score = -0,111303 (regressionFit = 0,111301, penalties=1.9200000000000003E-6) for clause:  father(A, B) :- male(A), male(B).  [covers 8,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), female(B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,066346 (regressionFit = 0,066344, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), childof(B, A).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(A, B).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,126035 (regressionFit = 0,126032, penalties=2.2300000000000002E-6) for clause:  father(A, _) :- male(A), siblingof(A, _).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), siblingof(B, A).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -0,107137 (regressionFit = 0,107135, penalties=2.1300000000000004E-6) for clause:  father(A, B) :- male(A), siblingof(B, _).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  father(A, B) :- male(A), mother(A, B).  [covers 1,0/14,0 pos, 0,0/0,0 neg]

***** Warning: #12 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]

% The best node found: father(A, B) :- childof(B, A), male(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: father(A, B) :- childof(B, A), male(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.002247216148130818 #egs=5.0
Comparing variance: 7.709882115452476E-19 to score=0.002247216148130818 #egs=9.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 5,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch leaf because good enough fit since score < 0.002247216148130818

% Time for loop #1: 22 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      father(A, B) :- childof(B, A), male(B).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #10 @ 13:52:17 7/14/21.  [Using 11.773.360 memory cells.]  %%%%%


% FOR father(A, B):
%   if ( childof(B, A), male(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


% Clauses:

father(A, B, 0.13400703000801117) :- 
     childof(B, A), 
     male(B), 
     !. // Clause #1.

father(A, B, -0.0641918400820262) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_father(a, b, 0.13400703000801117) :-  /* #pos=5 */ 
   childof(b, a),
   male(b),
   !. // Flattened version of clause #1.

flattened_father(underscore, underscore, -0.0641918400820262) :-  /* #neg=9 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   childof(b, a)
%   male(b)

% Saving model in: datasets\Father-Mother\train/models/bRDNs/father.model.ckpt
% Saving model in: datasets\Father-Mother\train/models/bRDNs/father.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for father.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).

logPrior(-1.8).
father(D, E, Total) :- // A general accessor. 
   father(D, E, 1000000, Total), !.
father(D, E, Total) :- waitHere("This should not fail", father(D, E, Total)).

father(D, E, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_father_tree1(D, E, TreesToUse, Total1),
   getScore_father_tree2(D, E, TreesToUse, Total2),
   getScore_father_tree3(D, E, TreesToUse, Total3),
   getScore_father_tree4(D, E, TreesToUse, Total4),
   getScore_father_tree5(D, E, TreesToUse, Total5),
   getScore_father_tree6(D, E, TreesToUse, Total6),
   getScore_father_tree7(D, E, TreesToUse, Total7),
   getScore_father_tree8(D, E, TreesToUse, Total8),
   getScore_father_tree9(D, E, TreesToUse, Total9),
   getScore_father_tree10(D, E, TreesToUse, Total10),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10,
   !.
father(D, E, TreesToUse, Total) :- waitHere("This should not fail", father(D, E, TreesToUse, Total)).

getScore_father_tree1(D, E, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_father_tree1(D, E, TreesToUse, Total1) :- father_tree1(D, E, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_father_tree2(D, E, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_father_tree2(D, E, TreesToUse, Total2) :- father_tree2(D, E, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_father_tree3(D, E, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_father_tree3(D, E, TreesToUse, Total3) :- father_tree3(D, E, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_father_tree4(D, E, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_father_tree4(D, E, TreesToUse, Total4) :- father_tree4(D, E, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_father_tree5(D, E, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_father_tree5(D, E, TreesToUse, Total5) :- father_tree5(D, E, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_father_tree6(D, E, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_father_tree6(D, E, TreesToUse, Total6) :- father_tree6(D, E, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_father_tree7(D, E, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_father_tree7(D, E, TreesToUse, Total7) :- father_tree7(D, E, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_father_tree8(D, E, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_father_tree8(D, E, TreesToUse, Total8) :- father_tree8(D, E, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_father_tree9(D, E, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_father_tree9(D, E, TreesToUse, Total9) :- father_tree9(D, E, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_father_tree10(D, E, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_father_tree10(D, E, TreesToUse, Total10) :- father_tree10(D, E, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(father, 2, [
   childof(b, a),
   male(b)]).
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:4.82995754143076
Set score:0.002247216148130818
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 1 34 50 52 61 75
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = father(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  father(_, _).  [covers 0,0/97,0 pos, 0,0/0,0 neg]
% Most-general root: father(_, _).  [covers 0,0/97,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'father(_, _).  [covers 0,0/97,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 13:52:17 7/14/21.  [Using 11.771.160 memory cells.]  %%%%%


% FOR father(A, B):
%   return 0;  // std dev = 2,198, 97,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=50 */


% Clauses:

father(A, B, 0) :- !. // Clause #1.


% The flattened versions of these clauses:

flattened_father(underscore, underscore, 0) :-  /* #neg=47 #pos=50 */ 
   !. // Flattened version of clause #1.


% The unique flattened literals:

% Time taken to learn model for 'father': 721 milliseconds.
% Saving model in: datasets\Father-Mother\train/models/bRDNs/mother.model
% Saving model in: datasets\Father-Mother\train/models/bRDNs/father.model
cached groundings hit: 0
Misses: 0

% Total learning time (10 trees): 21,518 seconds.
