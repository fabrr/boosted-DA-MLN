% Running on host: DESKTOP-0S2LA4F

% Creating string handler #1.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Switching to VarIndicator = questionMarks.

% getInputArgWithDefaultValue: args=[datasets\sample-imdb\test/test_pos.txt, datasets\sample-imdb\test/test_neg.txt, datasets\sample-imdb\test/test_bk.txt, datasets\sample-imdb\test/test_facts.txt, null]
%  for N=0: args[N]=datasets\sample-imdb\test/test_pos.txt

% getInputArgWithDefaultValue: args=[datasets\sample-imdb\test/test_pos.txt, datasets\sample-imdb\test/test_neg.txt, datasets\sample-imdb\test/test_bk.txt, datasets\sample-imdb\test/test_facts.txt, null]
%  for N=1: args[N]=datasets\sample-imdb\test/test_neg.txt

% getInputArgWithDefaultValue: args=[datasets\sample-imdb\test/test_pos.txt, datasets\sample-imdb\test/test_neg.txt, datasets\sample-imdb\test/test_bk.txt, datasets\sample-imdb\test/test_facts.txt, null]
%  for N=2: args[N]=datasets\sample-imdb\test/test_bk.txt

% getInputArgWithDefaultValue: args=[datasets\sample-imdb\test/test_pos.txt, datasets\sample-imdb\test/test_neg.txt, datasets\sample-imdb\test/test_bk.txt, datasets\sample-imdb\test/test_facts.txt, null]
%  for N=3: args[N]=datasets\sample-imdb\test/test_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% Reading background theory from dir: null
% Load '../imdb_bk.txt'.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% LoadAllModes() called.  Currently loaded modes: []

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 1.077 facts.

%  LearnOneClause initialized.
% Have read 0 examples from 'datasets\sample-imdb\test' [datasets\sample-imdb\test/test*].
% Have read 0 examples from 'datasets\sample-imdb\test' [datasets\sample-imdb\test/test*].

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.

***** Warning: targetPredicates=null *****


***** Warning: targetArgSpecs=null *****

% Time to collect constants: 25 milliseconds
% Time to collect examples: 0 seconds

% Read 0 pos examples and 0 neg examples.
% Time to init learnOneClause: 45 milliseconds
Domain sizes loaded!

Train domain sizes: 
movie: 19
person: 67
genre: 6

Test domain sizes: 
movie: 20
person: 268
genre: 9

Domain size scales: 
movie: 1.0526315789473684
person: 4.0
genre: 1.5

Scaling weights...

Target: movie

Tree #0

Clause: (movie(_, A, -0.08204245246029683) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.08204245246029683, Scaled weight: -0.08204245246029683

Clause: (movie(_, A, 7.137100586234147E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 7.137100586234147E-16, Scaled weight: 7.137100586234147E-16

Clause: (movie(_, A, -5.596599738668141E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -5.596599738668141E-16, Scaled weight: -5.596599738668141E-16

Clause: (movie(_, A, 6.640089860198305E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.640089860198305E-16, Scaled weight: 6.640089860198305E-16

Clause: (movie(_, A, -5.641420345224479E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -5.641420345224479E-16, Scaled weight: -5.641420345224479E-16

Clause: (movie(_, A, 6.595269253641966E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.595269253641966E-16, Scaled weight: 6.595269253641966E-16

Clause: (movie(_, A, -7.194205359031854E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -7.194205359031854E-16, Scaled weight: -7.194205359031854E-16

Clause: (movie(_, A, 6.629133711928978E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.629133711928978E-16, Scaled weight: 6.629133711928978E-16

Clause: (movie(_, A, -7.161004909730862E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -7.161004909730862E-16, Scaled weight: -7.161004909730862E-16

Clause: (movie(_, A, 6.991018609309785E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.991018609309785E-16, Scaled weight: 6.991018609309785E-16

Clause: (movie(_, A, -7.153368806391634E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -7.153368806391634E-16, Scaled weight: -7.153368806391634E-16

Clause: (movie(_, A, 6.993674645253864E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.993674645253864E-16, Scaled weight: 6.993674645253864E-16

Clause: (movie(_, A, -7.151044774940564E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -7.151044774940564E-16, Scaled weight: -7.151044774940564E-16

Clause: (movie(_, A, 6.999650726128043E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.999650726128043E-16, Scaled weight: 6.999650726128043E-16

Clause: (movie(_, A, -5.726413495435018E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -5.726413495435018E-16, Scaled weight: -5.726413495435018E-16

Clause: (movie(_, A, 6.002973238112277E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.002973238112277E-16, Scaled weight: 6.002973238112277E-16

Clause: (movie(_, A, -7.153368806391634E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -7.153368806391634E-16, Scaled weight: -7.153368806391634E-16

Clause: (movie(_, A, 6.993674645253864E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.993674645253864E-16, Scaled weight: 6.993674645253864E-16

Clause: (movie(_, A, -7.151044774940564E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -7.151044774940564E-16, Scaled weight: -7.151044774940564E-16

Clause: (movie(_, A, 6.999650726128043E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.999650726128043E-16, Scaled weight: 6.999650726128043E-16

Tree #1

Clause: (movie(_, A, -0.07234583689924357) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.07234583689924357, Scaled weight: -0.07234583689924357

Clause: (movie(_, A, -5.599587779105231E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -5.599587779105231E-16, Scaled weight: -5.599587779105231E-16

Clause: (movie(_, A, 6.637101819761216E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.637101819761216E-16, Scaled weight: 6.637101819761216E-16

Clause: (movie(_, A, -7.068043651688085E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -7.068043651688085E-16, Scaled weight: -7.068043651688085E-16

Clause: (movie(_, A, 6.993674645253864E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.993674645253864E-16, Scaled weight: 6.993674645253864E-16

Clause: (movie(_, A, -7.066051624730026E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -7.066051624730026E-16, Scaled weight: -7.066051624730026E-16

Clause: (movie(_, A, 6.994006649746874E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.994006649746874E-16, Scaled weight: 6.994006649746874E-16

Clause: (movie(_, A, -7.065387615744006E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -7.065387615744006E-16, Scaled weight: -7.065387615744006E-16

Clause: (movie(_, A, 6.999650726128043E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.999650726128043E-16, Scaled weight: 6.999650726128043E-16

Clause: (movie(_, A, -5.641420345224479E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -5.641420345224479E-16, Scaled weight: -5.641420345224479E-16

Tree #2

Clause: (movie(_, A, -0.06426703529637673) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.06426703529637673, Scaled weight: -0.06426703529637673

Clause: (movie(_, A, -5.641420345224479E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -5.641420345224479E-16, Scaled weight: -5.641420345224479E-16

Clause: (movie(_, A, 6.595269253641966E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.595269253641966E-16, Scaled weight: 6.595269253641966E-16

Clause: (movie(_, A, -7.194205359031854E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -7.194205359031854E-16, Scaled weight: -7.194205359031854E-16

Clause: (movie(_, A, 6.629133711928978E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.629133711928978E-16, Scaled weight: 6.629133711928978E-16

Clause: (movie(_, A, -7.161004909730862E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -7.161004909730862E-16, Scaled weight: -7.161004909730862E-16

Tree #3

Clause: (movie(_, A, -0.05744949233608133) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.05744949233608133, Scaled weight: -0.05744949233608133

Clause: (movie(_, A, -5.632456223913212E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -5.632456223913212E-16, Scaled weight: -5.632456223913212E-16

Clause: (movie(_, A, 6.605893397418284E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.605893397418284E-16, Scaled weight: 6.605893397418284E-16

Clause: (movie(_, A, -7.183581215255536E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -7.183581215255536E-16, Scaled weight: -7.183581215255536E-16

Clause: (movie(_, A, 6.639757855705295E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.639757855705295E-16, Scaled weight: 6.639757855705295E-16

Tree #4

Clause: (movie(A, B, 0.8653894048261028) :- workedunder(B, C), recursive_movie(A, C))
Connection variables: C (person), 
Scaling factor: 4.0, Weight: 0.8653894048261028, Scaled weight: 0.2163473512065257

Clause: (movie(A, B, 0.1943399627411877) :- workedunder(C, B), recursive_movie(A, C))
Connection variables: C (person), 
Scaling factor: 4.0, Weight: 0.1943399627411877, Scaled weight: 0.048584990685296925

Clause: (movie(_, A, -0.1250195613426893) :- workedunder(A, _))
Connection variables: _1 (person), 
Scaling factor: 4.0, Weight: -0.1250195613426893, Scaled weight: -0.031254890335672324

Clause: (movie(A, B, 0.1478673629552515) :- workedunder(C, B), recursive_movie(A, C))
Connection variables: C (person), 
Scaling factor: 4.0, Weight: 0.1478673629552515, Scaled weight: 0.03696684073881287

Tree #5

Clause: (movie(A, B, 0.7543264859174821) :- workedunder(B, C), recursive_movie(A, C))
Connection variables: C (person), 
Scaling factor: 4.0, Weight: 0.7543264859174821, Scaled weight: 0.18858162147937052

Clause: (movie(_, A, -0.0592742286836221) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.0592742286836221, Scaled weight: -0.0592742286836221

Clause: (movie(_, A, 6.898389355760019E-16) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: 6.898389355760019E-16, Scaled weight: 6.898389355760019E-16

Tree #6

Clause: (movie(A, B, 0.5945883486348656) :- workedunder(B, C), recursive_movie(A, C))
Connection variables: C (person), 
Scaling factor: 4.0, Weight: 0.5945883486348656, Scaled weight: 0.1486470871587164

Clause: (movie(_, A, -0.05345052194231742) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.05345052194231742, Scaled weight: -0.05345052194231742

Tree #7

Clause: (movie(A, B, 0.4511996401254773) :- workedunder(B, C), recursive_movie(A, C))
Connection variables: C (person), 
Scaling factor: 4.0, Weight: 0.4511996401254773, Scaled weight: 0.11279991003136933

Clause: (movie(_, A, -0.04850467645396791) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.04850467645396791, Scaled weight: -0.04850467645396791

Tree #8

Clause: (movie(A, B, 0.3471576164546922) :- workedunder(B, C), recursive_movie(A, C))
Connection variables: C (person), 
Scaling factor: 4.0, Weight: 0.3471576164546922, Scaled weight: 0.08678940411367304

Clause: (movie(_, A, -0.04428808380610936) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.04428808380610936, Scaled weight: -0.04428808380610936

Tree #9

Clause: (movie(A, B, 0.2760876098158035) :- workedunder(B, C), recursive_movie(A, C))
Connection variables: C (person), 
Scaling factor: 4.0, Weight: 0.2760876098158035, Scaled weight: 0.06902190245395087

Clause: (movie(_, A, -0.04063092255564469) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.04063092255564469, Scaled weight: -0.04063092255564469

Tree #10

Clause: (movie(A, B, 0.2268703289274599) :- workedunder(B, C), recursive_movie(A, C))
Connection variables: C (person), 
Scaling factor: 4.0, Weight: 0.2268703289274599, Scaled weight: 0.056717582231864974

Tree #11

Clause: (movie(A, B, 0.1898752590789119) :- workedunder(B, C), recursive_movie(A, C))
Connection variables: C (person), 
Scaling factor: 4.0, Weight: 0.1898752590789119, Scaled weight: 0.047468814769727974

Tree #12

Clause: (movie(A, B, 0.1625862991601946) :- workedunder(B, C), recursive_movie(A, C))
Connection variables: C (person), 
Scaling factor: 4.0, Weight: 0.1625862991601946, Scaled weight: 0.04064657479004865

Tree #13

Clause: (movie(_, A, -0.035975076963417875) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.035975076963417875, Scaled weight: -0.035975076963417875

Tree #14

Clause: (movie(_, A, -0.03312015346718509) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.03312015346718509, Scaled weight: -0.03312015346718509

Tree #15

Clause: (movie(_, A, -0.03056308043272263) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.03056308043272263, Scaled weight: -0.03056308043272263

Tree #16

Clause: (movie(_, A, -0.028262739418624006) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.028262739418624006, Scaled weight: -0.028262739418624006

Tree #17

Clause: (movie(_, A, -0.0261851622637379) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.0261851622637379, Scaled weight: -0.0261851622637379

Tree #18

Clause: (movie(_, A, -0.024302048469900625) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.024302048469900625, Scaled weight: -0.024302048469900625

Tree #19

Clause: (movie(_, A, -0.022589635017824652) :- female(A))
Connection variables: 
Scaling factor: 1.0, Weight: -0.022589635017824652, Scaled weight: -0.022589635017824652

% for movie |lookupPos| = 286
% for movie |lookupNeg| = 5.074
% getJointExamples: |pos| = 286, |neg| = 5.074

% Starting inference in bRDN.

% Subsampling the negative examples.
% Initial size of testset negs: 5.074 for movie
% Final size of negs: 533 for movie
% Trees = 20
% [ LazyGroundClauseIndex ]  Building full index for female/1 with 95 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for workedunder/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for workedunder/2.
 (Arithmetic) Mean Probability Assigned to Correct Output Class: 504,566/819,00 = 0,616075

 The weighted count of positive examples = 286,000 and the weighted count of negative examples = 533,000

printExamples: Writing out predictions (for Tuffy?) on 819 examples for 'movie' to:
  datasets\sample-imdb\test/results_movie.db
 and to:
  datasets\sample-imdb\test/query_movie.db
%    No need to compress since small: datasets\sample-imdb\test/query_movie.db

% Computing Area Under Curves.
%Pos=286
%Neg=533
%LL:-639.7611666605841
%LL:-704.3523298294765

% Running command: java -jar src/edu/wisc/cs/will/DataSetUtils/auc.jar datasets\sample-imdb\test/AUC/aucTemp.txt list 0.0
% WAITING FOR command: java -jar src/edu/wisc/cs/will/DataSetUtils/auc.jar datasets\sample-imdb\test/AUC/aucTemp.txt list 0.0
% DONE WAITING FOR command: java -jar src/edu/wisc/cs/will/DataSetUtils/auc.jar datasets\sample-imdb\test/AUC/aucTemp.txt list 0.0

%   AUC ROC   = 0,483498
%   AUC PR    = 0,343434
%   CLL	      = -0,860015
%   Precision = 0,354167 at threshold = 0,140
%   Recall    = 0,118881
%   F1        = 0,178010

% Total inference time (20 trees): 3,337 seconds.
