% Running on host: DESKTOP-0S2LA4F

% Creating string handler #1.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Switching to VarIndicator = questionMarks.

% getInputArgWithDefaultValue: args=[datasets\SmokeGen\train/train_pos.txt, datasets\SmokeGen\train/train_neg.txt, datasets\SmokeGen\train/train_bk.txt, datasets\SmokeGen\train/train_facts.txt, null]
%  for N=0: args[N]=datasets\SmokeGen\train/train_pos.txt

% getInputArgWithDefaultValue: args=[datasets\SmokeGen\train/train_pos.txt, datasets\SmokeGen\train/train_neg.txt, datasets\SmokeGen\train/train_bk.txt, datasets\SmokeGen\train/train_facts.txt, null]
%  for N=1: args[N]=datasets\SmokeGen\train/train_neg.txt

% getInputArgWithDefaultValue: args=[datasets\SmokeGen\train/train_pos.txt, datasets\SmokeGen\train/train_neg.txt, datasets\SmokeGen\train/train_bk.txt, datasets\SmokeGen\train/train_facts.txt, null]
%  for N=2: args[N]=datasets\SmokeGen\train/train_bk.txt

% getInputArgWithDefaultValue: args=[datasets\SmokeGen\train/train_pos.txt, datasets\SmokeGen\train/train_neg.txt, datasets\SmokeGen\train/train_bk.txt, datasets\SmokeGen\train/train_facts.txt, null]
%  for N=3: args[N]=datasets\SmokeGen\train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% Reading background theory from dir: null
% Load '../smoke_bk.txt'.

***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Person] for 'r_smokes'. *****


***** Warning: At least one argument in a mode should be an input argument.  You provided signature = [Const], types = [`Person] for 'r_not_smokes'. *****

% LoadAllModes() called.  Currently loaded modes: []

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 203 facts.

%  LearnOneClause initialized.
% Have read 0 examples from 'datasets\SmokeGen\train' [datasets\SmokeGen\train/train*].
% Have read 0 examples from 'datasets\SmokeGen\train' [datasets\SmokeGen\train/train*].

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.

***** Warning: targetPredicates=null *****


***** Warning: targetArgSpecs=null *****

% Time to collect constants: 14 milliseconds
% Time to collect examples: 0 seconds

% Read 0 pos examples and 0 neg examples.
% Time to init learnOneClause: 22 milliseconds

% 'models/domain_sizes.txt' saved.
File: datasets\SmokeGen\train/advice.txt doesnt exist.Hence no advice loaded
% Learning 20 trees in this iteration for smokes

% Learn model for: smokes
% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:3 milliseconds
No hidden examples for : smokes
Time to build dataset: 8 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #23 as the next seed: smokes(person_87)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (0):
%    
%  Modes (40):
%    friends(+Person, -Person),
%    friends(-Person, +Person),
%    r_smokes(`Person),
%    r_not_smokes(`Person),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber)

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for friends/2 with 162 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for friends/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for friends/2.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for r_smokes/1 with 6 assertions.
% [ LazyGroundClauseIndex ]  Building full index for r_not_smokes/1 with 29 assertions.
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,953729 (regressionFit = 4,953727, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,953729): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,953729 (regressionFit = 4,953727, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #1 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.041534953642508754 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,95 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35,
(smokes(D) :- friends(D, Anon1089), r_smokes(Anon1089))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 16 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #34 as the next seed: smokes(person_57)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,965020 (regressionFit = 4,965018, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,965020): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,965020 (regressionFit = 4,965018, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #2 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.011867129612145342 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon1357), r_smokes(Anon1357))

% On cycle #2, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #1 as the next seed: smokes(person_27)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,969332 (regressionFit = 4,969330, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,969332): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,969332 (regressionFit = 4,969330, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #3 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.003390608460612943 for 
 // Learned this clause on outer loop cycle #3.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon1625), r_smokes(Anon1625))

% On cycle #3, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #30 as the next seed: smokes(person_48)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,970653 (regressionFit = 4,970651, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,970653): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,970653 (regressionFit = 4,970651, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #4 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 9.687452744608786E-4 for 
 // Learned this clause on outer loop cycle #4.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon1893), r_smokes(Anon1893))

% On cycle #4, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 4 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #15 as the next seed: smokes(person_79)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #5, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971038 (regressionFit = 4,971036, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971038): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971038 (regressionFit = 4,971036, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #5 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 2.767843641316387E-4 for 
 // Learned this clause on outer loop cycle #5.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon2161), r_smokes(Anon2161))

% On cycle #5, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 5 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #5 as the next seed: smokes(person_65)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #6, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971148 (regressionFit = 4,971146, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971148): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971148 (regressionFit = 4,971146, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #6 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 7.908124689475235E-5 for 
 // Learned this clause on outer loop cycle #6.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon2429), r_smokes(Anon2429))

% On cycle #6, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 6 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #24 as the next seed: smokes(person_90)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #7, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #7, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971180 (regressionFit = 4,971178, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971180): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971180 (regressionFit = 4,971178, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #7, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #7, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #7, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #7, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #7 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 2.259464196997102E-5 for 
 // Learned this clause on outer loop cycle #7.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon2697), r_smokes(Anon2697))

% On cycle #7, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 7 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #19 as the next seed: smokes(person_41)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #8, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #8, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971189 (regressionFit = 4,971187, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971189): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971189 (regressionFit = 4,971187, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #8, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #8, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #8, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #8, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #8 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 6.4556119914212825E-6 for 
 // Learned this clause on outer loop cycle #8.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon2965), r_smokes(Anon2965))

% On cycle #8, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 8 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #12 as the next seed: smokes(person_37)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #9, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #9, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #9, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971191 (regressionFit = 4,971189, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971191): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #9, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971191 (regressionFit = 4,971189, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #9, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #9, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #9, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #9, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #9, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #9 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 1.8444605689479126E-6 for 
 // Learned this clause on outer loop cycle #9.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon3233), r_smokes(Anon3233))

% On cycle #9, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 9 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #8 as the next seed: smokes(person_59)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #10, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #10, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #10, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971192): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #10, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #10, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #10, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #10, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #10, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #10, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #10 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 5.269887340189627E-7 for 
 // Learned this clause on outer loop cycle #10.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon3501), r_smokes(Anon3501))

% On cycle #10, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 10 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #6 as the next seed: smokes(person_89)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #11, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #11, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #11, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971192): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #11, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #11, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #11, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #11, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #11, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #11, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #11 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 1.5056820972565127E-7 for 
 // Learned this clause on outer loop cycle #11.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon3769), r_smokes(Anon3769))

% On cycle #11, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 11 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #11 as the next seed: smokes(person_58)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #12, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #12, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #12, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971192): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #12, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #12, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #12, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #12, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #12, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #12, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #12 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 4.301948850522168E-8 for 
 // Learned this clause on outer loop cycle #12.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon4037), r_smokes(Anon4037))

% On cycle #12, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 12 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #2 as the next seed: smokes(person_22)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #13, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #13, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #13, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971192): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #13, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #13, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #13, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #13, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #13, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #13, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #13 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 1.2291282413494958E-8 for 
 // Learned this clause on outer loop cycle #13.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon4305), r_smokes(Anon4305))

% On cycle #13, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 13 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #28 as the next seed: smokes(person_86)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #14, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #14, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #14, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971192): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #14, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #14, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #14, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #14, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #14, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #14, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #14 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 3.511794954042762E-9 for 
 // Learned this clause on outer loop cycle #14.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon4573), r_smokes(Anon4573))

% On cycle #14, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 14 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #33 as the next seed: smokes(person_44)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #15, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #15, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #15, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971192): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #15, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #15, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #15, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #15, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #15, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #15, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #15 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 1.0033699902680026E-9 for 
 // Learned this clause on outer loop cycle #15.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon4841), r_smokes(Anon4841))

% On cycle #15, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 15 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #18 as the next seed: smokes(person_98)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #16, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #16, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #16, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971192): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #16, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #16, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #16, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #16, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #16, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #16, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #16 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 2.866771562201212E-10 for 
 // Learned this clause on outer loop cycle #16.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon5109), r_smokes(Anon5109))

% On cycle #16, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 16 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #13 as the next seed: smokes(person_96)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #17, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #17, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #17, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971192): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #17, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #17, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #17, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #17, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #17, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #17, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #17 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 8.19077375369126E-11 for 
 // Learned this clause on outer loop cycle #17.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon5377), r_smokes(Anon5377))

% On cycle #17, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 17 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #31 as the next seed: smokes(person_81)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #18, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #18, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #18, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971192): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #18, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #18, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #18, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #18, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #18, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #18, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #18 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 2.3402204777208826E-11 for 
 // Learned this clause on outer loop cycle #18.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon5645), r_smokes(Anon5645))

% On cycle #18, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 18 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #20 as the next seed: smokes(person_99)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #19, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #19, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #19, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,971192): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #19, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,971192 (regressionFit = 4,971190, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #19, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #19, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #19, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #19, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #19, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #19 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 6.686358807897871E-12 for 
 // Learned this clause on outer loop cycle #19.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon5913), r_smokes(Anon5913))

% On cycle #19, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 19 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (20).

% ******************************************
adding regression values
Added 0.041534953642508754 to wgt = 0,0415 (smokes(A) :- friends(A, B), r_smokes(B))
Added 0.011867129612145342 to wgt = 0,0119 (smokes(A) :- friends(A, B), r_smokes(B))
Added 0.003390608460612943 to wgt = 0,0034 (smokes(A) :- friends(A, B), r_smokes(B))
Added 9.687452744608786E-4 to wgt = 0,0010 (smokes(A) :- friends(A, B), r_smokes(B))
Added 2.767843641316387E-4 to wgt = 0,0003 (smokes(A) :- friends(A, B), r_smokes(B))
Added 7.908124689475235E-5 to wgt = 7,908e-05 (smokes(A) :- friends(A, B), r_smokes(B))
Added 2.259464196997102E-5 to wgt = 2,259e-05 (smokes(A) :- friends(A, B), r_smokes(B))
Added 6.4556119914212825E-6 to wgt = 6,456e-06 (smokes(A) :- friends(A, B), r_smokes(B))
Added 1.8444605689479126E-6 to wgt = 1,844e-06 (smokes(A) :- friends(A, B), r_smokes(B))
Added 5.269887340189627E-7 to wgt = 5,270e-07 (smokes(A) :- friends(A, B), r_smokes(B))
Added 1.5056820972565127E-7 to wgt = 1,506e-07 (smokes(A) :- friends(A, B), r_smokes(B))
Added 4.301948850522168E-8 to wgt = 4,302e-08 (smokes(A) :- friends(A, B), r_smokes(B))
Added 1.2291282413494958E-8 to wgt = 1,229e-08 (smokes(A) :- friends(A, B), r_smokes(B))
Added 3.511794954042762E-9 to wgt = 3,512e-09 (smokes(A) :- friends(A, B), r_smokes(B))
Added 1.0033699902680026E-9 to wgt = 1,003e-09 (smokes(A) :- friends(A, B), r_smokes(B))
Added 2.866771562201212E-10 to wgt = 2,867e-10 (smokes(A) :- friends(A, B), r_smokes(B))
Added 8.19077375369126E-11 to wgt = 8,191e-11 (smokes(A) :- friends(A, B), r_smokes(B))
Added 2.3402204777208826E-11 to wgt = 2,340e-11 (smokes(A) :- friends(A, B), r_smokes(B))
Added 6.686358807897871E-12 to wgt = 6,686e-12 (smokes(A) :- friends(A, B), r_smokes(B))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 1 trees is 4,517 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:32 milliseconds
No hidden examples for : smokes
Time to build dataset: 33 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #10 as the next seed: smokes(person_61)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,953669 (regressionFit = 4,953667, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,953669): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,953669 (regressionFit = 4,953667, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #20 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.03422205165597677 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,95 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35,
(smokes(D) :- friends(D, Anon6181), r_smokes(Anon6181))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 16 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #33 as the next seed: smokes(person_44)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,962508 (regressionFit = 4,962506, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,962508): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,962508 (regressionFit = 4,962506, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #21 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.009777729044564736 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,96 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon6449), r_smokes(Anon6449))

% On cycle #2, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #6 as the next seed: smokes(person_89)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,965770 (regressionFit = 4,965768, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,965770): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,965770 (regressionFit = 4,965768, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #22 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.0027936368698756567 for 
 // Learned this clause on outer loop cycle #3.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon6717), r_smokes(Anon6717))

% On cycle #3, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #1 as the next seed: smokes(person_27)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,966763 (regressionFit = 4,966761, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,966763): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,966763 (regressionFit = 4,966761, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #23 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 7.981819628215864E-4 for 
 // Learned this clause on outer loop cycle #4.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon6985), r_smokes(Anon6985))

% On cycle #4, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 4 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #19 as the next seed: smokes(person_41)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #5, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,967051 (regressionFit = 4,967049, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,967051): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,967051 (regressionFit = 4,967049, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #24 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 2.280519893776482E-4 for 
 // Learned this clause on outer loop cycle #5.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon7253), r_smokes(Anon7253))

% On cycle #5, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 5 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #2 as the next seed: smokes(person_22)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #6, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,967134 (regressionFit = 4,967132, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,967134): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,967134 (regressionFit = 4,967132, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #25 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 6.515771125075493E-5 for 
 // Learned this clause on outer loop cycle #6.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon7521), r_smokes(Anon7521))

% On cycle #6, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 6 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #18 as the next seed: smokes(person_98)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #7, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #7, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #7, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,967158 (regressionFit = 4,967156, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,967158): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #7, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,967158 (regressionFit = 4,967156, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #7, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #7, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #7, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #7, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #7, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #26 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 1.861648892872793E-5 for 
 // Learned this clause on outer loop cycle #7.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon7789), r_smokes(Anon7789))

% On cycle #7, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 7 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #34 as the next seed: smokes(person_57)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #8, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #8, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #8, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,967165 (regressionFit = 4,967163, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,967165): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #8, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,967165 (regressionFit = 4,967163, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #8, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #8, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #8, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #8, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #8, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #27 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 5.3189968368206176E-6 for 
 // Learned this clause on outer loop cycle #8.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon8057), r_smokes(Anon8057))

% On cycle #8, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 8 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #12 as the next seed: smokes(person_37)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #9, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #9, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #9, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,967166 (regressionFit = 4,967164, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,967166): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #9, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,967166 (regressionFit = 4,967164, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #9, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #9, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #9, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #9, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #9, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #28 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 1.5197133819491726E-6 for 
 // Learned this clause on outer loop cycle #9.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon8325), r_smokes(Anon8325))

% On cycle #9, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 9 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #13 as the next seed: smokes(person_96)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #10, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #10, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #10, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,967167 (regressionFit = 4,967165, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,967167): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #10, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,967167 (regressionFit = 4,967165, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #10, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #10, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #10, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #10, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #10, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #29 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 4.342038234001715E-7 for 
 // Learned this clause on outer loop cycle #10.  It scores=-4,97 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon8593), r_smokes(Anon8593))

% On cycle #10, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 10 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (10).

% ******************************************
adding regression values
Added 0.03422205165597677 to wgt = 0,0342 (smokes(A) :- friends(A, B), r_smokes(B))
Added 0.009777729044564736 to wgt = 0,0098 (smokes(A) :- friends(A, B), r_smokes(B))
Added 0.0027936368698756567 to wgt = 0,0028 (smokes(A) :- friends(A, B), r_smokes(B))
Added 7.981819628215864E-4 to wgt = 0,0008 (smokes(A) :- friends(A, B), r_smokes(B))
Added 2.280519893776482E-4 to wgt = 0,0002 (smokes(A) :- friends(A, B), r_smokes(B))
Added 6.515771125075493E-5 to wgt = 6,516e-05 (smokes(A) :- friends(A, B), r_smokes(B))
Added 1.861648892872793E-5 to wgt = 1,862e-05 (smokes(A) :- friends(A, B), r_smokes(B))
Added 5.3189968368206176E-6 to wgt = 5,319e-06 (smokes(A) :- friends(A, B), r_smokes(B))
Added 1.5197133819491726E-6 to wgt = 1,520e-06 (smokes(A) :- friends(A, B), r_smokes(B))
Added 4.342038234001715E-7 to wgt = 4,342e-07 (smokes(A) :- friends(A, B), r_smokes(B))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 2 trees is 5,366 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:84 milliseconds
No hidden examples for : smokes
Time to build dataset: 86 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #30 as the next seed: smokes(person_48)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,953527 (regressionFit = 4,953525, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,953527): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,953527 (regressionFit = 4,953525, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #30 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.02783720249101433 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,95 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35,
(smokes(D) :- friends(D, Anon8861), r_smokes(Anon8861))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 16 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #28 as the next seed: smokes(person_86)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,960344 (regressionFit = 4,960342, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,960344): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,960344 (regressionFit = 4,960342, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #31 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.007953486426004078 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,96 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon9129), r_smokes(Anon9129))

% On cycle #2, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #15 as the next seed: smokes(person_79)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,962779 (regressionFit = 4,962777, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,962779): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,962779 (regressionFit = 4,962777, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #32 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.0022724246931440195 for 
 // Learned this clause on outer loop cycle #3.  It scores=-4,96 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon9397), r_smokes(Anon9397))

% On cycle #3, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #1 as the next seed: smokes(person_27)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,963515 (regressionFit = 4,963513, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,963515): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,963515 (regressionFit = 4,963513, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #33 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 6.492641980411228E-4 for 
 // Learned this clause on outer loop cycle #4.  It scores=-4,96 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon9665), r_smokes(Anon9665))

% On cycle #4, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 4 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #12 as the next seed: smokes(person_37)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #5, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,963728 (regressionFit = 4,963726, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,963728): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,963728 (regressionFit = 4,963726, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #34 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 1.8550405658321036E-4 for 
 // Learned this clause on outer loop cycle #5.  It scores=-4,96 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon9933), r_smokes(Anon9933))

% On cycle #5, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 5 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #6 as the next seed: smokes(person_89)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #6, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #6, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,963790 (regressionFit = 4,963788, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,963790): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #6, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,963790 (regressionFit = 4,963788, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #6, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #35 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 5.3001159023763345E-5 for 
 // Learned this clause on outer loop cycle #6.  It scores=-4,96 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon10201), r_smokes(Anon10201))

% On cycle #6, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 6 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (6).

% ******************************************
adding regression values
Added 0.02783720249101433 to wgt = 0,0278 (smokes(A) :- friends(A, B), r_smokes(B))
Added 0.007953486426004078 to wgt = 0,0080 (smokes(A) :- friends(A, B), r_smokes(B))
Added 0.0022724246931440195 to wgt = 0,0023 (smokes(A) :- friends(A, B), r_smokes(B))
Added 6.492641980411228E-4 to wgt = 0,0006 (smokes(A) :- friends(A, B), r_smokes(B))
Added 1.8550405658321036E-4 to wgt = 0,0002 (smokes(A) :- friends(A, B), r_smokes(B))
Added 5.3001159023763345E-5 to wgt = 5,300e-05 (smokes(A) :- friends(A, B), r_smokes(B))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 3 trees is 5,788 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:32 milliseconds
No hidden examples for : smokes
Time to build dataset: 32 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #17 as the next seed: smokes(person_43)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,953350 (regressionFit = 4,953348, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,953350): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,953350 (regressionFit = 4,953348, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #36 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.022401277170326757 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,95 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35,
(smokes(D) :- friends(D, Anon10469), r_smokes(Anon10469))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 16 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #18 as the next seed: smokes(person_98)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,958557 (regressionFit = 4,958555, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,958557): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,958557 (regressionFit = 4,958555, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #37 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.0064003649058076584 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,96 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon10737), r_smokes(Anon10737))

% On cycle #2, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #12 as the next seed: smokes(person_37)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,960361 (regressionFit = 4,960359, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,960361): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,960361 (regressionFit = 4,960359, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #38 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.0018286756873736212 for 
 // Learned this clause on outer loop cycle #3.  It scores=-4,96 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon11005), r_smokes(Anon11005))

% On cycle #3, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #30 as the next seed: smokes(person_48)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,960902 (regressionFit = 4,960900, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,960902): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,960902 (regressionFit = 4,960900, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #39 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 5.22478767821014E-4 for 
 // Learned this clause on outer loop cycle #4.  It scores=-4,96 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon11273), r_smokes(Anon11273))

% On cycle #4, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 4 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #8 as the next seed: smokes(person_59)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #5, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #5, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,961059 (regressionFit = 4,961057, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,961059): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #5, bodyLen=0:1] 'smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(_, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(_, A), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(B, A), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,961059 (regressionFit = 4,961057, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(B, A), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#6 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#7 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#8 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#9 of outerLoop #5, bodyLen=1:2] 'smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

***** Warning: #40 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 1.4927964794883762E-4 for 
 // Learned this clause on outer loop cycle #5.  It scores=-4,96 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon11541), r_smokes(Anon11541))

% On cycle #5, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 5 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (5).

% ******************************************
adding regression values
Added 0.022401277170326757 to wgt = 0,0224 (smokes(A) :- friends(A, B), r_smokes(B))
Added 0.0064003649058076584 to wgt = 0,0064 (smokes(A) :- friends(A, B), r_smokes(B))
Added 0.0018286756873736212 to wgt = 0,0018 (smokes(A) :- friends(A, B), r_smokes(B))
Added 5.22478767821014E-4 to wgt = 0,0005 (smokes(A) :- friends(A, B), r_smokes(B))
Added 1.4927964794883762E-4 to wgt = 0,0001 (smokes(A) :- friends(A, B), r_smokes(B))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 4 trees is 6,064 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:47 milliseconds
No hidden examples for : smokes
Time to build dataset: 48 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #11 as the next seed: smokes(person_58)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,953169 (regressionFit = 4,953167, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,953169): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.953169047783424
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,927964 (regressionFit = 4,927961, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,927964): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,953170 (regressionFit = 4,953167, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,961604 (regressionFit = 4,961601, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,927964 (regressionFit = 4,927961, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,961604 (regressionFit = 4,961601, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.927963748637305

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.927963748637305

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.953169947783424

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.961603721323895

% Consider expanding [#9 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.961603721323895

***** Warning: #41 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting -0.006166652296114547 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,93 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35,
(smokes(D) :- friends(D, Anon11809), r_smokes(Anon11809), friends(D, Anon11939))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 16 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #8 as the next seed: smokes(person_59)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,952058 (regressionFit = 4,952056, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,952058): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.952057541923475
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,939390 (regressionFit = 4,939387, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,939390): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,952058 (regressionFit = 4,952056, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,965952 (regressionFit = 4,965949, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,939390 (regressionFit = 4,939387, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,965952 (regressionFit = 4,965949, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.939389714831263

% Consider expanding [#6 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.939389714831263

% Consider expanding [#7 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.952058441923475

% Consider expanding [#8 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.965951723832281

% Consider expanding [#9 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.965951723832281

***** Warning: #42 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting -0.005438740109713498 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,94 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon12101), r_smokes(Anon12101), friends(D, Anon12231))

% On cycle #2, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #28 as the next seed: smokes(person_86)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,951185 (regressionFit = 4,951183, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,951185): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.951185441822544
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,949687 (regressionFit = 4,949684, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,949687): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,951186 (regressionFit = 4,951183, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,969886 (regressionFit = 4,969883, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,949687 (regressionFit = 4,949684, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,969886 (regressionFit = 4,969883, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.949687101284777

% Consider expanding [#6 of outerLoop #3, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.949687101284777

% Consider expanding [#7 of outerLoop #3, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.9511863418225435

% Consider expanding [#8 of outerLoop #3, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.969886400771342

% Consider expanding [#9 of outerLoop #3, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.969886400771342

***** Warning: #43 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting -0.004796750742642643 for 
 // Learned this clause on outer loop cycle #3.  It scores=-4,95 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon12393), r_smokes(Anon12393), friends(D, Anon12523))

% On cycle #3, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #30 as the next seed: smokes(person_48)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #4, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,950500 (regressionFit = 4,950498, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,950500): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #4, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.9505004509495265
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,958940 (regressionFit = 4,958937, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,950501 (regressionFit = 4,950498, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,973434 (regressionFit = 4,973431, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,958940 (regressionFit = 4,958937, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,973434 (regressionFit = 4,973431, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #4, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.950501350949526

% Consider expanding [#6 of outerLoop #4, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.95894022175605

% Consider expanding [#7 of outerLoop #4, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.95894022175605

% Consider expanding [#8 of outerLoop #4, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.973434345775731

% Consider expanding [#9 of outerLoop #4, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.973434345775731

***** Warning: #44 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.029586858693713018 for 
 // Learned this clause on outer loop cycle #4.  It scores=-4,95 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon12685), r_smokes(Anon12685))

% On cycle #4, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 4 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (4).

% ******************************************
adding regression values
Added -0.006166652296114547 to wgt = -0,0062 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, _))
Added -0.005438740109713498 to wgt = -0,0054 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, _))
Added -0.004796750742642643 to wgt = -0,0048 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, _))
Added 0.029586858693713018 to wgt = 0,0296 (smokes(A) :- friends(A, B), r_smokes(B))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 5 trees is 6,271 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:34 milliseconds
No hidden examples for : smokes
Time to build dataset: 35 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #12 as the next seed: smokes(person_37)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,917697 (regressionFit = 4,917694, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,917697): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.917696508924298
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,917980 (regressionFit = 4,917977, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,917697 (regressionFit = 4,917694, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,936104 (regressionFit = 4,936101, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,917980 (regressionFit = 4,917977, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,936104 (regressionFit = 4,936101, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.9176974089242975

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.917980323830498

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.917980323830498

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.936103714008363

% Consider expanding [#9 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.936103714008363

***** Warning: #45 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.02593550866921826 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,92 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35,
(smokes(D) :- friends(D, Anon12959), r_smokes(Anon12959))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 16 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #28 as the next seed: smokes(person_86)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,923888 (regressionFit = 4,923886, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,923888): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.923887970077642
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,873468 (regressionFit = 4,873465, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,873468): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,923889 (regressionFit = 4,923886, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,919376 (regressionFit = 4,919372, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,873468 (regressionFit = 4,873465, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,919376 (regressionFit = 4,919372, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.873467837267702

% Consider expanding [#6 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.873467837267702

% Consider expanding [#7 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.9193755050350045

% Consider expanding [#8 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.9193755050350045

% Consider expanding [#9 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.923888870077642

***** Warning: #46 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting -0.007606601715884079 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,87 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon13233), r_smokes(Anon13233), friends(D, Anon13363))

% On cycle #2, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #18 as the next seed: smokes(person_98)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #3, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,921833 (regressionFit = 4,921831, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,921833): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #3, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.921833075169223
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,886037 (regressionFit = 4,886034, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,886037): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,921834 (regressionFit = 4,921831, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,924061 (regressionFit = 4,924058, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,886037 (regressionFit = 4,886034, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,924061 (regressionFit = 4,924058, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #3, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.886036599303436

% Consider expanding [#6 of outerLoop #3, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.886036599303436

% Consider expanding [#7 of outerLoop #3, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.921833975169223

% Consider expanding [#8 of outerLoop #3, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.924061011838562

% Consider expanding [#9 of outerLoop #3, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.924061011838562

***** Warning: #47 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting -0.006708717771692858 for 
 // Learned this clause on outer loop cycle #3.  It scores=-4,89 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon13525), r_smokes(Anon13525), friends(D, Anon13655))

% On cycle #3, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (3).

% ******************************************
adding regression values
Added 0.02593550866921826 to wgt = 0,0259 (smokes(A) :- friends(A, B), r_smokes(B))
Added -0.007606601715884079 to wgt = -0,0076 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, _))
Added -0.006708717771692858 to wgt = -0,0067 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, _))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 6 trees is 6,429 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:40 milliseconds
No hidden examples for : smokes
Time to build dataset: 43 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #10 as the next seed: smokes(person_61)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,890385 (regressionFit = 4,890383, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,890385): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.890384750489135
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,910335 (regressionFit = 4,910332, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,890386 (regressionFit = 4,890383, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,916776 (regressionFit = 4,916773, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,910335 (regressionFit = 4,910332, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,916776 (regressionFit = 4,916773, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.890385650489135

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.910334907880884

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.910334907880884

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.9167755917306

% Consider expanding [#9 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.9167755917306

***** Warning: #48 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.03243716684212818 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,89 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35,
(smokes(D) :- friends(D, Anon13817), r_smokes(Anon13817))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 16 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #24 as the next seed: smokes(person_90)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,898502 (regressionFit = 4,898500, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,898502): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.898501565136603
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,855851 (regressionFit = 4,855848, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,855851): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,898502 (regressionFit = 4,898500, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,896318 (regressionFit = 4,896315, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,855851 (regressionFit = 4,855848, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,896318 (regressionFit = 4,896315, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.855850532033822

% Consider expanding [#6 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.855850532033822

% Consider expanding [#7 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.896317826614025

% Consider expanding [#8 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.896317826614025

% Consider expanding [#9 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.898502465136603

***** Warning: #49 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting -0.007083419787773061 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,86 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon14091), r_smokes(Anon14091), friends(D, Anon14221))

% On cycle #2, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.03243716684212818 to wgt = 0,0324 (smokes(A) :- friends(A, B), r_smokes(B))
Added -0.007083419787773061 to wgt = -0,0071 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, _))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 7 trees is 6,542 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:63 milliseconds
No hidden examples for : smokes
Time to build dataset: 66 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #4 as the next seed: smokes(person_0)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,876664 (regressionFit = 4,876662, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,876664): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.876664235577929
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,898636 (regressionFit = 4,898633, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,876665 (regressionFit = 4,876662, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,903535 (regressionFit = 4,903532, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,898636 (regressionFit = 4,898633, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,903535 (regressionFit = 4,903532, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.8766651355779285

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.898635586711072

% Consider expanding [#7 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.898635586711072

% Consider expanding [#8 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.903534969547682

% Consider expanding [#9 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.903534969547682

***** Warning: #50 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting 0.03293992451753879 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,88 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35,
(smokes(D) :- friends(D, Anon14383), r_smokes(Anon14383))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 16 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}
% Have selected pos example #6 as the next seed: smokes(person_89)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,884888 (regressionFit = 4,884886, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,884888): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.8848881907752
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,844011 (regressionFit = 4,844008, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,844011): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,884889 (regressionFit = 4,884886, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,883038 (regressionFit = 4,883035, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,844011 (regressionFit = 4,844008, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,883038 (regressionFit = 4,883035, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.844010656464185

% Consider expanding [#6 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.844010656464185

% Consider expanding [#7 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.883037603126841

% Consider expanding [#8 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.883037603126841

% Consider expanding [#9 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.8848890907752

***** Warning: #51 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
Setting -0.006948636933662879 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,84 and has recall=0,46, precision=0,99, and F1=0,63 (using m-estimates).
 // It covers 45,7% of the positive examples, 16 of 35 (of which 0 are newly covered),
 // So far 16 (45,7%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon14657), r_smokes(Anon14657), friends(D, Anon14787))

% On cycle #2, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 45,7% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.03293992451753879 to wgt = 0,0329 (smokes(A) :- friends(A, B), r_smokes(B))
Added -0.006948636933662879 to wgt = -0,0069 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, _))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 8 trees is 6,706 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:33 milliseconds
No hidden examples for : smokes
Time to build dataset: 34 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #23 as the next seed: smokes(person_87)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,863397 (regressionFit = 4,863395, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,863397): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.863396818361837
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,886806 (regressionFit = 4,886803, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,863398 (regressionFit = 4,863395, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,890502 (regressionFit = 4,890499, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,886806 (regressionFit = 4,886803, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,890502 (regressionFit = 4,890499, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.863397718361837
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,886807 (regressionFit = 4,886803, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,890503 (regressionFit = 4,890499, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,886807 (regressionFit = 4,886803, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,890503 (regressionFit = 4,890499, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.886805872119729
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,848590 (regressionFit = 4,848586, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,848590): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,733219 (regressionFit = 4,733215, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,733219): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,864278 (regressionFit = 4,864274, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,886807 (regressionFit = 4,886803, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,733219 (regressionFit = 4,733215, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,884764 (regressionFit = 4,884760, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,848590 (regressionFit = 4,848586, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,864278 (regressionFit = 4,864274, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,884764 (regressionFit = 4,884760, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,858335 (regressionFit = 4,858331, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,858786 (regressionFit = 4,858782, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.7332190504792155

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.7332190504792155

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.848589811727331

***** Warning: #52 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
Setting -0.053186395607206303 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,73 and has recall=0,17, precision=0,98, and F1=0,29 (using m-estimates).
 // It covers 17,1% of the positive examples, 6 of 35,
(smokes(D) :- friends(D, Anon14949), r_smokes(Anon14949), friends(D, Anon15079), friends(Anon14949, Anon15079))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 17,1% of the positive examples and NaN% of the negatives.}
% Have selected pos example #19 as the next seed: smokes(person_41)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,745068 (regressionFit = 4,745066, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,745068): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.745067529439789
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,816001 (regressionFit = 4,815998, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,745068 (regressionFit = 4,745066, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,791113 (regressionFit = 4,791110, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,816001 (regressionFit = 4,815998, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,791113 (regressionFit = 4,791110, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.7450684294397885
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,816002 (regressionFit = 4,815998, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,791114 (regressionFit = 4,791110, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,816002 (regressionFit = 4,815998, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,791114 (regressionFit = 4,791110, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.791112908311735
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,684658 (regressionFit = 4,684654, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,684658): smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,810365 (regressionFit = 4,810361, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,815282 (regressionFit = 4,815278, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,684658 (regressionFit = 4,684654, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,791114 (regressionFit = 4,791110, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,803661 (regressionFit = 4,803657, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,810365 (regressionFit = 4,810361, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,815282 (regressionFit = 4,815278, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,803661 (regressionFit = 4,803657, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,055021 (regressionFit = 4,055017, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,055021): smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,814010 (regressionFit = 4,814006, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.684658201560059

% Consider expanding [#8 of outerLoop #2, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.684658201560059

% Consider expanding [#9 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.791112908311735
%  At # nodes expanded = 9, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,684658 (regressionFit = 4,684654, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), friends(A, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,810365 (regressionFit = 4,810361, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,684658 (regressionFit = 4,684654, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,803661 (regressionFit = 4,803657, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,810365 (regressionFit = 4,810361, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,815282 (regressionFit = 4,815278, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,803661 (regressionFit = 4,803657, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,055021 (regressionFit = 4,055017, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,814010 (regressionFit = 4,814006, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

***** Warning: #53 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
Setting 0.17691103078521556 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,06 and has recall=0,23, precision=0,99, and F1=0,37 (using m-estimates).
 // It covers 22,9% of the positive examples, 8 of 35 (of which 7 are newly covered),
 // So far 13 (37,1%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon15541), r_smokes(Anon15541), friends(Anon15541, Anon15671), r_smokes(Anon15671))

% On cycle #2, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 37,1% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added -0.053186395607206303 to wgt = -0,0532 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C))
Added 0.17691103078521556 to wgt = 0,1769 (smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 9 trees is 6,920 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:23 milliseconds
No hidden examples for : smokes
Time to build dataset: 23 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #17 as the next seed: smokes(person_43)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,633124 (regressionFit = 4,633122, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,633124): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.633124138900097
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,634014 (regressionFit = 4,634011, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,633125 (regressionFit = 4,633122, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,648772 (regressionFit = 4,648769, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,634014 (regressionFit = 4,634011, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,648772 (regressionFit = 4,648769, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.633125038900097
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,634015 (regressionFit = 4,634011, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,648773 (regressionFit = 4,648769, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,634015 (regressionFit = 4,634011, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,648773 (regressionFit = 4,648769, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.634014022181879
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,591167 (regressionFit = 4,591163, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,591167): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,530761 (regressionFit = 4,530757, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,530761): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,610511 (regressionFit = 4,610507, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,634015 (regressionFit = 4,634011, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,530761 (regressionFit = 4,530757, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,631817 (regressionFit = 4,631813, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,591167 (regressionFit = 4,591163, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,610511 (regressionFit = 4,610507, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,631817 (regressionFit = 4,631813, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,625751 (regressionFit = 4,625747, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,599249 (regressionFit = 4,599245, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.530761027680433

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.530761027680433

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.591166858570118

***** Warning: #54 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
Setting -0.048183834555203274 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,53 and has recall=0,17, precision=0,98, and F1=0,29 (using m-estimates).
 // It covers 17,1% of the positive examples, 6 of 35,
(smokes(D) :- friends(D, Anon16329), r_smokes(Anon16329), friends(D, Anon16459), friends(Anon16329, Anon16459))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 17,1% of the positive examples and NaN% of the negatives.}
% Have selected pos example #20 as the next seed: smokes(person_99)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #2, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,541126 (regressionFit = 4,541124, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,541126): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.541125560172153
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,583516 (regressionFit = 4,583513, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,541126 (regressionFit = 4,541124, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,572528 (regressionFit = 4,572525, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,583516 (regressionFit = 4,583513, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,572528 (regressionFit = 4,572525, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.541126460172153
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,583517 (regressionFit = 4,583513, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,572529 (regressionFit = 4,572525, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,583517 (regressionFit = 4,583513, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,572529 (regressionFit = 4,572525, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.572527663902101
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,489490 (regressionFit = 4,489487, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,489490): smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,573276 (regressionFit = 4,573271, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,585022 (regressionFit = 4,585017, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,489490 (regressionFit = 4,489487, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,572528 (regressionFit = 4,572525, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,579861 (regressionFit = 4,579857, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,573276 (regressionFit = 4,573271, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,585022 (regressionFit = 4,585017, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,579861 (regressionFit = 4,579857, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,019952 (regressionFit = 4,019948, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,019952): smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,580751 (regressionFit = 4,580747, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #2, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.489490454368843

% Consider expanding [#8 of outerLoop #2, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.489490454368843

% Consider expanding [#9 of outerLoop #2, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.572527663902101
%  At # nodes expanded = 9, |OPEN| = 7.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,489490 (regressionFit = 4,489487, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), friends(A, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,573276 (regressionFit = 4,573271, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,489490 (regressionFit = 4,489487, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,579861 (regressionFit = 4,579857, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,573276 (regressionFit = 4,573271, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,585022 (regressionFit = 4,585017, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,579861 (regressionFit = 4,579857, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,019952 (regressionFit = 4,019948, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,580751 (regressionFit = 4,580747, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(C, B), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

***** Warning: #55 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
Setting 0.15169515968349667 for 
 // Learned this clause on outer loop cycle #2.  It scores=-4,02 and has recall=0,23, precision=0,99, and F1=0,37 (using m-estimates).
 // It covers 22,9% of the positive examples, 8 of 35 (of which 7 are newly covered),
 // So far 13 (37,1%) of the positive examples have been covered.
(smokes(D) :- friends(D, Anon16921), r_smokes(Anon16921), friends(Anon16921, Anon17051), r_smokes(Anon17051))

% On cycle #2, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 37,1% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added -0.048183834555203274 to wgt = -0,0482 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C))
Added 0.15169515968349667 to wgt = 0,1517 (smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model
% Time taken to learn 10 trees is 7,140 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:22 milliseconds
No hidden examples for : smokes
Time to build dataset: 23 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #26 as the next seed: smokes(person_66)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,430024 (regressionFit = 4,430022, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,430024): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.430023660606791
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,408166 (regressionFit = 4,408163, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,408166): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,430025 (regressionFit = 4,430022, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,435208 (regressionFit = 4,435205, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,408166 (regressionFit = 4,408163, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,435208 (regressionFit = 4,435205, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.408165990150286
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,361648 (regressionFit = 4,361644, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,361648): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,408167 (regressionFit = 4,408163, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,346134 (regressionFit = 4,346131, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,346134): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,384663 (regressionFit = 4,384659, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,408167 (regressionFit = 4,408163, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,346134 (regressionFit = 4,346131, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,406138 (regressionFit = 4,406134, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,361648 (regressionFit = 4,361644, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,384663 (regressionFit = 4,384659, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,406138 (regressionFit = 4,406134, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,422622 (regressionFit = 4,422618, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,366195 (regressionFit = 4,366191, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.346134341471285

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.346134341471285

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.361648341866295

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.361648341866295

***** Warning: #56 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
Setting -0.04404114301163418 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,35 and has recall=0,17, precision=0,98, and F1=0,29 (using m-estimates).
 // It covers 17,1% of the positive examples, 6 of 35,
(smokes(D) :- friends(D, Anon17709), r_smokes(Anon17709), friends(D, Anon17839), friends(Anon17709, Anon17839))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 17,1% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.04404114301163418 to wgt = -0,0440 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 11 trees is 7,749 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:92 milliseconds
No hidden examples for : smokes
Time to build dataset: 93 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #31 as the next seed: smokes(person_81)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,409905 (regressionFit = 4,409903, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,409905): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.409905363177963
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,398040 (regressionFit = 4,398037, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,398040): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,409906 (regressionFit = 4,409903, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,418758 (regressionFit = 4,418755, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,398040 (regressionFit = 4,398037, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,418758 (regressionFit = 4,418755, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.398039684291801
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,355669 (regressionFit = 4,355665, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,355669): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,398041 (regressionFit = 4,398037, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345562 (regressionFit = 4,345558, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,345562): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,377655 (regressionFit = 4,377651, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,398040 (regressionFit = 4,398037, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345562 (regressionFit = 4,345558, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,396330 (regressionFit = 4,396326, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,355669 (regressionFit = 4,355665, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,377655 (regressionFit = 4,377651, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,396330 (regressionFit = 4,396326, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,400904 (regressionFit = 4,400900, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,359880 (regressionFit = 4,359876, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.345561601942145

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.345561601942145

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.35566861643998

% Consider expanding [#9 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.35566861643998

***** Warning: #57 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
Setting -0.03965005559449613 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,35 and has recall=0,17, precision=0,98, and F1=0,29 (using m-estimates).
 // It covers 17,1% of the positive examples, 6 of 35,
(smokes(D) :- friends(D, Anon18241), r_smokes(Anon18241), friends(D, Anon18371), friends(Anon18241, Anon18371))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 17,1% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.03965005559449613 to wgt = -0,0397 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 12 trees is 8,000 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:77 milliseconds
No hidden examples for : smokes
Time to build dataset: 78 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #8 as the next seed: smokes(person_59)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,393957 (regressionFit = 4,393955, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,393957): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.393957396374346
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,390255 (regressionFit = 4,390252, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,390255): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,393958 (regressionFit = 4,393955, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,405741 (regressionFit = 4,405738, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,390255 (regressionFit = 4,390252, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,405741 (regressionFit = 4,405738, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.39025481419208
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,351318 (regressionFit = 4,351314, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,351318): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,390256 (regressionFit = 4,390252, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345032 (regressionFit = 4,345028, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,345032): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,372317 (regressionFit = 4,372313, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,390256 (regressionFit = 4,390252, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345032 (regressionFit = 4,345028, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,388777 (regressionFit = 4,388773, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,351318 (regressionFit = 4,351314, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,372317 (regressionFit = 4,372313, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,388777 (regressionFit = 4,388773, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,383611 (regressionFit = 4,383607, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,355256 (regressionFit = 4,355252, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.345032238114469
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 6 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,355162 (regressionFit = 4,355157, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(A, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345033 (regressionFit = 4,345028, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,357663 (regressionFit = 4,357658, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345033 (regressionFit = 4,345028, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345033 (regressionFit = 4,345028, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,353783 (regressionFit = 4,353778, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,355162 (regressionFit = 4,355157, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(_, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,357663 (regressionFit = 4,357658, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(_, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,353783 (regressionFit = 4,353778, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(_, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), r_smokes(C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345033 (regressionFit = 4,345028, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), r_not_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.345032238114469
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 6 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,355162 (regressionFit = 4,355157, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(A, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345033 (regressionFit = 4,345028, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(B, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,357663 (regressionFit = 4,357658, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(B, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345033 (regressionFit = 4,345028, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,353783 (regressionFit = 4,353778, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(C, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,355162 (regressionFit = 4,355157, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(_, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,357663 (regressionFit = 4,357658, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(_, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,353783 (regressionFit = 4,353778, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(_, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), r_smokes(C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345033 (regressionFit = 4,345028, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), r_not_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.345033138114469

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.345033138114469

***** Warning: #58 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
Setting -0.03604225719476067 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,35 and has recall=0,17, precision=0,98, and F1=0,29 (using m-estimates).
 // It covers 17,1% of the positive examples, 6 of 35,
(smokes(D) :- friends(D, Anon18773), r_smokes(Anon18773), friends(D, Anon18903), friends(Anon18773, Anon18903))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 17,1% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.03604225719476067 to wgt = -0,0360 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 13 trees is 8,501 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:66 milliseconds
No hidden examples for : smokes
Time to build dataset: 66 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #23 as the next seed: smokes(person_87)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,381025 (regressionFit = 4,381023, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,381025): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.381025065729711
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,384118 (regressionFit = 4,384115, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,381026 (regressionFit = 4,381023, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,395211 (regressionFit = 4,395208, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,384118 (regressionFit = 4,384115, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,395211 (regressionFit = 4,395208, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.381025965729711
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,384119 (regressionFit = 4,384115, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,395212 (regressionFit = 4,395208, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,384119 (regressionFit = 4,384115, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,395212 (regressionFit = 4,395208, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.384118400224745
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,348071 (regressionFit = 4,348067, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,348071): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344547 (regressionFit = 4,344544, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,344547): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,368147 (regressionFit = 4,368143, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,384119 (regressionFit = 4,384115, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344547 (regressionFit = 4,344544, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,382818 (regressionFit = 4,382814, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,348071 (regressionFit = 4,348067, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,368147 (regressionFit = 4,368143, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,382818 (regressionFit = 4,382814, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,369526 (regressionFit = 4,369522, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,351782 (regressionFit = 4,351778, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.344547493368132
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 6 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,353371 (regressionFit = 4,353366, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(A, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344548 (regressionFit = 4,344544, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,355572 (regressionFit = 4,355567, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344548 (regressionFit = 4,344544, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344548 (regressionFit = 4,344544, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,352198 (regressionFit = 4,352194, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,353371 (regressionFit = 4,353366, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(_, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,355572 (regressionFit = 4,355567, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(_, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,352198 (regressionFit = 4,352194, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(_, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), r_smokes(C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344548 (regressionFit = 4,344544, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), r_not_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.344547493368132
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 6 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,353371 (regressionFit = 4,353366, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(A, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344548 (regressionFit = 4,344544, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(B, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,355572 (regressionFit = 4,355567, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(B, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344548 (regressionFit = 4,344544, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,352198 (regressionFit = 4,352194, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(C, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,353371 (regressionFit = 4,353366, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(_, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,355572 (regressionFit = 4,355567, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(_, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,352198 (regressionFit = 4,352194, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(_, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), r_smokes(C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344548 (regressionFit = 4,344544, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), r_not_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.3445483933681315

***** Warning: #59 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
Setting -0.033028746152684876 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,34 and has recall=0,17, precision=0,98, and F1=0,29 (using m-estimates).
 // It covers 17,1% of the positive examples, 6 of 35,
(smokes(D) :- friends(D, Anon19711), r_smokes(Anon19711), friends(D, Anon19841), friends(Anon19711, Anon19841))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 17,1% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.033028746152684876 to wgt = -0,0330 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 14 trees is 8,800 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:43 milliseconds
No hidden examples for : smokes
Time to build dataset: 43 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #32 as the next seed: smokes(person_47)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,370337 (regressionFit = 4,370335, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,370337): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.370337294209496
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,379179 (regressionFit = 4,379176, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,370338 (regressionFit = 4,370335, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,386532 (regressionFit = 4,386529, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,379179 (regressionFit = 4,379176, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,386532 (regressionFit = 4,386529, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.370338194209496
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,379179 (regressionFit = 4,379176, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,386533 (regressionFit = 4,386529, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,379179 (regressionFit = 4,379176, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,386533 (regressionFit = 4,386529, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.379178530415057
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345596 (regressionFit = 4,345592, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,345596): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344106 (regressionFit = 4,344102, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,344106): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,364822 (regressionFit = 4,364818, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,379179 (regressionFit = 4,379176, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344106 (regressionFit = 4,344102, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,378019 (regressionFit = 4,378015, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,345596 (regressionFit = 4,345592, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,364822 (regressionFit = 4,364818, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,378019 (regressionFit = 4,378015, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,357837 (regressionFit = 4,357833, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,349115 (regressionFit = 4,349111, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.344105569208926
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 6 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,351870 (regressionFit = 4,351865, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(A, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344106 (regressionFit = 4,344102, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,353823 (regressionFit = 4,353818, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344106 (regressionFit = 4,344102, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344106 (regressionFit = 4,344102, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,350859 (regressionFit = 4,350855, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,351870 (regressionFit = 4,351865, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(_, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,353823 (regressionFit = 4,353818, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(_, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,350859 (regressionFit = 4,350855, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(_, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), r_smokes(C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344107 (regressionFit = 4,344102, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), r_not_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.344105569208926
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 6 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,351870 (regressionFit = 4,351865, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(A, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344106 (regressionFit = 4,344102, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(B, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,353823 (regressionFit = 4,353818, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(B, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344106 (regressionFit = 4,344102, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,350859 (regressionFit = 4,350855, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(C, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,351870 (regressionFit = 4,351865, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(_, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,353823 (regressionFit = 4,353818, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(_, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,350859 (regressionFit = 4,350855, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(_, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), r_smokes(C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344107 (regressionFit = 4,344102, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), r_not_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.344106469208926

***** Warning: #60 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
Setting -0.030475906538685482 for 
 // Learned this clause on outer loop cycle #1.  It scores=-4,34 and has recall=0,17, precision=0,98, and F1=0,29 (using m-estimates).
 // It covers 17,1% of the positive examples, 6 of 35,
(smokes(D) :- friends(D, Anon20711), r_smokes(Anon20711), friends(D, Anon20841), friends(Anon20711, Anon20841))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 17,1% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.030475906538685482 to wgt = -0,0305 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 15 trees is 8,973 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:26 milliseconds
No hidden examples for : smokes
Time to build dataset: 26 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #15 as the next seed: smokes(person_79)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,361362 (regressionFit = 4,361360, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,361362): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.361361744649443
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,375130 (regressionFit = 4,375127, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,361363 (regressionFit = 4,361360, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,379266 (regressionFit = 4,379263, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,375130 (regressionFit = 4,375127, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,379266 (regressionFit = 4,379263, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.361362644649443
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,375131 (regressionFit = 4,375127, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,379267 (regressionFit = 4,379263, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,375131 (regressionFit = 4,375127, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,379267 (regressionFit = 4,379263, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.375130137867035
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,343674 (regressionFit = 4,343670, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,343674): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,343703 (regressionFit = 4,343700, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,362122 (regressionFit = 4,362118, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,375131 (regressionFit = 4,375127, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,343703 (regressionFit = 4,343700, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,374086 (regressionFit = 4,374082, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,343674 (regressionFit = 4,343670, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,362122 (regressionFit = 4,362118, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,374086 (regressionFit = 4,374082, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,347980 (regressionFit = 4,347976, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,347029 (regressionFit = 4,347026, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.3436741023358385
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 13 variant children.  Sending 26 items to OPEN for evaluation and possible insertion.
% Have created 26 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,334364 (regressionFit = 4,334359, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,334364): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,343675 (regressionFit = 4,343670, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,334294 (regressionFit = 4,334289, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,334294): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,334294 (regressionFit = 4,334289, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,336607 (regressionFit = 4,336602, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,343675 (regressionFit = 4,343670, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,334294 (regressionFit = 4,334289, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,658975 (regressionFit = 3,658971, penalties=4.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,658975): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344350 (regressionFit = 4,344345, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,343675 (regressionFit = 4,343670, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,334294 (regressionFit = 4,334289, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,658975 (regressionFit = 3,658971, penalties=4.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344350 (regressionFit = 4,344345, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,334364 (regressionFit = 4,334359, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,336607 (regressionFit = 4,336602, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344350 (regressionFit = 4,344345, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,344350 (regressionFit = 4,344345, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,382950 (regressionFit = 4,382945, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,382950 (regressionFit = 4,382945, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,318712 (regressionFit = 4,318708, penalties=4.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,318712 (regressionFit = 4,318708, penalties=4.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]' score=-3.658975376551486

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]' score=-3.658975376551486

***** Warning: #61 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
Setting -0.005861072406184694 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,66 and has recall=0,34, precision=0,99, and F1=0,51 (using m-estimates).
 // It covers 34,3% of the positive examples, 12 of 35,
(smokes(D) :- friends(D, Anon21711), r_smokes(Anon21711), friends(D, Anon21841), friends(D, Anon22011), friends(Anon21841, Anon22011))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 12 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 34,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.005861072406184694 to wgt = -0,0059 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 16 trees is 9,298 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:38 milliseconds
No hidden examples for : smokes
Time to build dataset: 40 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #25 as the next seed: smokes(person_94)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,325780 (regressionFit = 4,325778, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,325780): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.325779867411579
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,351003 (regressionFit = 4,351000, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,325781 (regressionFit = 4,325778, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,347593 (regressionFit = 4,347590, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,351003 (regressionFit = 4,351000, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,347593 (regressionFit = 4,347590, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.325780767411579
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,351004 (regressionFit = 4,351000, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,347594 (regressionFit = 4,347590, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,351004 (regressionFit = 4,351000, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,347594 (regressionFit = 4,347590, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.34759335294917
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,290646 (regressionFit = 4,290643, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,290646): smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,340853 (regressionFit = 4,340849, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,354624 (regressionFit = 4,354620, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,290646 (regressionFit = 4,290643, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,347594 (regressionFit = 4,347590, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,352083 (regressionFit = 4,352079, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,340853 (regressionFit = 4,340849, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,354624 (regressionFit = 4,354620, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,352083 (regressionFit = 4,352079, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,941424 (regressionFit = 3,941420, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,941424): smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,350205 (regressionFit = 4,350201, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.290646434396291
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 6 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,297079 (regressionFit = 4,297075, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(A, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,290647 (regressionFit = 4,290643, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,298358 (regressionFit = 4,298353, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,290647 (regressionFit = 4,290643, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,290647 (regressionFit = 4,290643, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,295934 (regressionFit = 4,295929, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(C, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,297079 (regressionFit = 4,297075, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(_, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,298358 (regressionFit = 4,298353, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(_, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,295934 (regressionFit = 4,295929, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(_, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), r_smokes(C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,290647 (regressionFit = 4,290643, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), r_not_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.290646434396291
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 6 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,297079 (regressionFit = 4,297075, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), friends(A, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,290647 (regressionFit = 4,290643, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), friends(B, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,298358 (regressionFit = 4,298353, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), friends(B, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,290647 (regressionFit = 4,290643, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,295934 (regressionFit = 4,295929, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), friends(C, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,297079 (regressionFit = 4,297075, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), friends(_, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,298358 (regressionFit = 4,298353, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), friends(_, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,295934 (regressionFit = 4,295929, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), friends(_, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), r_smokes(C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,290647 (regressionFit = 4,290643, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(C, A), r_not_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]' score=-4.290647334396291
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 5 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,297080 (regressionFit = 4,297075, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), friends(A, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,298359 (regressionFit = 4,298353, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), friends(B, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,290648 (regressionFit = 4,290643, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), friends(C, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,290648 (regressionFit = 4,290643, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,295934 (regressionFit = 4,295929, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), friends(C, _).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,297080 (regressionFit = 4,297075, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), friends(_, A).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,298359 (regressionFit = 4,298353, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), friends(_, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,295934 (regressionFit = 4,295929, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), friends(_, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), r_smokes(C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.730000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,290648 (regressionFit = 4,290643, penalties=5.730000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), friends(A, C), friends(B, A), r_not_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]

***** Warning: #62 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
Setting 0.129248328542404 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,94 and has recall=0,23, precision=0,99, and F1=0,37 (using m-estimates).
 // It covers 22,9% of the positive examples, 8 of 35,
(smokes(D) :- friends(D, Anon22791), r_smokes(Anon22791), friends(Anon22791, Anon22921), r_smokes(Anon22921))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C).  [covers 8,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 22,9% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.129248328542404 to wgt = 0,1292 (smokes(A) :- friends(A, B), r_smokes(B), friends(B, C), r_smokes(C))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 17 trees is 9,433 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:22 milliseconds
No hidden examples for : smokes
Time to build dataset: 23 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #17 as the next seed: smokes(person_43)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,182601 (regressionFit = 4,182599, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,182601): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.182600735928432
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,178107 (regressionFit = 4,178104, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,178107): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,182602 (regressionFit = 4,182599, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,192011 (regressionFit = 4,192008, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,178107 (regressionFit = 4,178104, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,192011 (regressionFit = 4,192008, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.178106965139314
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,145287 (regressionFit = 4,145283, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,145287): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,178108 (regressionFit = 4,178104, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,162323 (regressionFit = 4,162319, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,165041 (regressionFit = 4,165037, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,178108 (regressionFit = 4,178104, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,162323 (regressionFit = 4,162319, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,177391 (regressionFit = 4,177387, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,145287 (regressionFit = 4,145283, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,165041 (regressionFit = 4,165037, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,177391 (regressionFit = 4,177387, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,170302 (regressionFit = 4,170298, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,145494 (regressionFit = 4,145490, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.145287227502056
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 13 variant children.  Sending 26 items to OPEN for evaluation and possible insertion.
% Have created 26 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,138931 (regressionFit = 4,138926, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,138931): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,145288 (regressionFit = 4,145283, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,127831 (regressionFit = 4,127826, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,127831): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,127831 (regressionFit = 4,127826, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,141118 (regressionFit = 4,141113, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,145288 (regressionFit = 4,145283, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,127831 (regressionFit = 4,127826, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,561622 (regressionFit = 3,561618, penalties=4.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,561622): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,147312 (regressionFit = 4,147307, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,145288 (regressionFit = 4,145283, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,127831 (regressionFit = 4,127826, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,561622 (regressionFit = 3,561618, penalties=4.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,147312 (regressionFit = 4,147307, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,138931 (regressionFit = 4,138926, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,141118 (regressionFit = 4,141113, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,147312 (regressionFit = 4,147307, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,147312 (regressionFit = 4,147307, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,191998 (regressionFit = 4,191993, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,191998 (regressionFit = 4,191993, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,119275 (regressionFit = 4,119270, penalties=4.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,119275 (regressionFit = 4,119270, penalties=4.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]' score=-3.5616223448063797
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 12 variant children.  Sending 25 items to OPEN for evaluation and possible insertion.
% Have created 25 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,595535 (regressionFit = 3,595529, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(A, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,561623 (regressionFit = 3,561618, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,073083 (regressionFit = 4,073077, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,073083 (regressionFit = 4,073077, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, D).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,599901 (regressionFit = 3,599895, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,561623 (regressionFit = 3,561618, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(C, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,073083 (regressionFit = 4,073077, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,580289 (regressionFit = 3,580284, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(C, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,561623 (regressionFit = 3,561618, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,073083 (regressionFit = 4,073077, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,561623 (regressionFit = 3,561618, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, D).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,580289 (regressionFit = 3,580284, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,595535 (regressionFit = 3,595529, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(_, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,599901 (regressionFit = 3,599895, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(_, B).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,580289 (regressionFit = 3,580284, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(_, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,580289 (regressionFit = 3,580284, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(_, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,064126 (regressionFit = 4,064120, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,064126 (regressionFit = 4,064120, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_smokes(D).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,549164 (regressionFit = 3,549158, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,549164): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,549164 (regressionFit = 3,549158, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]' score=-3.5616223448063797
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 12 variant children.  Sending 25 items to OPEN for evaluation and possible insertion.
% Have created 25 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,595535 (regressionFit = 3,595529, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(A, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,561623 (regressionFit = 3,561618, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,073083 (regressionFit = 4,073077, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,073083 (regressionFit = 4,073077, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, D).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,599901 (regressionFit = 3,599895, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,561623 (regressionFit = 3,561618, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(C, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,073083 (regressionFit = 4,073077, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,580289 (regressionFit = 3,580284, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(C, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,561623 (regressionFit = 3,561618, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(D, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,073083 (regressionFit = 4,073077, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(D, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(D, D).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,580289 (regressionFit = 3,580284, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(D, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,595535 (regressionFit = 3,595529, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(_, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,599901 (regressionFit = 3,599895, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(_, B).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,580289 (regressionFit = 3,580284, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(_, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,580289 (regressionFit = 3,580284, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(_, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,064126 (regressionFit = 4,064120, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,064126 (regressionFit = 4,064120, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_smokes(D).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,549164 (regressionFit = 3,549158, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,549164 (regressionFit = 3,549158, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_not_smokes(D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=5:6] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]' score=-3.5616232448063796

***** Warning: #63 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
Setting -0.007055134252130027 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,55 and has recall=0,34, precision=0,99, and F1=0,51 (using m-estimates).
 // It covers 34,3% of the positive examples, 12 of 35,
(smokes(D) :- friends(D, Anon23985), r_smokes(Anon23985), friends(D, Anon24115), friends(D, Anon24211), friends(Anon24115, Anon24211), r_not_smokes(Anon24115))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 12 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 34,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.007055134252130027 to wgt = -0,0071 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 18 trees is 9,809 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:31 milliseconds
No hidden examples for : smokes
Time to build dataset: 32 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #27 as the next seed: smokes(person_42)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,143075 (regressionFit = 4,143073, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,143075): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.1430748601556395
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,149869 (regressionFit = 4,149866, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,143076 (regressionFit = 4,143073, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,156099 (regressionFit = 4,156096, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,149869 (regressionFit = 4,149866, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,156099 (regressionFit = 4,156096, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.143075760155639
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,149870 (regressionFit = 4,149866, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,156100 (regressionFit = 4,156096, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,149870 (regressionFit = 4,149866, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,156100 (regressionFit = 4,156096, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.149868803076928
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,122450 (regressionFit = 4,122446, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,122450): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,132484 (regressionFit = 4,132481, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,139101 (regressionFit = 4,139097, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,149870 (regressionFit = 4,149866, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,132484 (regressionFit = 4,132481, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,149415 (regressionFit = 4,149411, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,122450 (regressionFit = 4,122446, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,139101 (regressionFit = 4,139097, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,149415 (regressionFit = 4,149411, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,130163 (regressionFit = 4,130159, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,123431 (regressionFit = 4,123427, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.122449908267681
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 13 variant children.  Sending 26 items to OPEN for evaluation and possible insertion.
% Have created 26 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,115968 (regressionFit = 4,115963, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,115968): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,122451 (regressionFit = 4,122446, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,108768 (regressionFit = 4,108763, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,108768): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,108768 (regressionFit = 4,108763, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,118145 (regressionFit = 4,118140, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,122451 (regressionFit = 4,122446, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,108768 (regressionFit = 4,108763, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,547164 (regressionFit = 3,547159, penalties=4.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,547164): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,124151 (regressionFit = 4,124146, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,122451 (regressionFit = 4,122446, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,108768 (regressionFit = 4,108763, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,547164 (regressionFit = 3,547159, penalties=4.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,124151 (regressionFit = 4,124146, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,115968 (regressionFit = 4,115963, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,118145 (regressionFit = 4,118140, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,124151 (regressionFit = 4,124146, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,124151 (regressionFit = 4,124146, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,158326 (regressionFit = 4,158321, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,158326 (regressionFit = 4,158321, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,099870 (regressionFit = 4,099865, penalties=4.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,099870 (regressionFit = 4,099865, penalties=4.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]' score=-3.5471641839134294
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 12 variant children.  Sending 25 items to OPEN for evaluation and possible insertion.
% Have created 25 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,576932 (regressionFit = 3,576926, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(A, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,547165 (regressionFit = 3,547159, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,032487 (regressionFit = 4,032482, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,032487 (regressionFit = 4,032482, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, D).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,580113 (regressionFit = 3,580107, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,547165 (regressionFit = 3,547159, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(C, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,032487 (regressionFit = 4,032482, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,563722 (regressionFit = 3,563716, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(C, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,547165 (regressionFit = 3,547159, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,032487 (regressionFit = 4,032482, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,547165 (regressionFit = 3,547159, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, D).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,563722 (regressionFit = 3,563716, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,576932 (regressionFit = 3,576926, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(_, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,580113 (regressionFit = 3,580107, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(_, B).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,563722 (regressionFit = 3,563716, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(_, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,563722 (regressionFit = 3,563716, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(_, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,024329 (regressionFit = 4,024324, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,024329 (regressionFit = 4,024324, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_smokes(D).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,536619 (regressionFit = 3,536614, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,536619): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,536619 (regressionFit = 3,536614, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]' score=-3.5471641839134294
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 12 variant children.  Sending 25 items to OPEN for evaluation and possible insertion.
% Have created 25 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,576932 (regressionFit = 3,576926, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(A, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,547165 (regressionFit = 3,547159, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,032487 (regressionFit = 4,032482, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,032487 (regressionFit = 4,032482, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, D).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,580113 (regressionFit = 3,580107, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,547165 (regressionFit = 3,547159, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(C, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,032487 (regressionFit = 4,032482, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,563722 (regressionFit = 3,563716, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(C, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,547165 (regressionFit = 3,547159, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(D, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,032487 (regressionFit = 4,032482, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(D, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(D, D).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,563722 (regressionFit = 3,563716, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(D, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,576932 (regressionFit = 3,576926, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(_, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,580113 (regressionFit = 3,580107, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(_, B).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,563722 (regressionFit = 3,563716, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(_, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,563722 (regressionFit = 3,563716, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(_, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,024329 (regressionFit = 4,024324, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,024329 (regressionFit = 4,024324, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_smokes(D).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,536619 (regressionFit = 3,536614, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,536619 (regressionFit = 3,536614, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_not_smokes(D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]

***** Warning: #64 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
Setting -0.006465268916539932 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,54 and has recall=0,34, precision=0,99, and F1=0,51 (using m-estimates).
 // It covers 34,3% of the positive examples, 12 of 35,
(smokes(D) :- friends(D, Anon25877), r_smokes(Anon25877), friends(D, Anon26007), friends(D, Anon26177), friends(Anon26007, Anon26177), r_not_smokes(Anon26007))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 12 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 34,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.006465268916539932 to wgt = -0,0065 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Time taken to learn 19 trees is 10,126 seconds.

% Kept 6 of the 6 positive examples.
% Kept 29 of the 29 negative examples.
% Dataset size: 35
Computing probabilities
prob time:27 milliseconds
No hidden examples for : smokes
Time to build dataset: 28 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #11 as the next seed: smokes(person_58)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,109990 (regressionFit = 4,109988, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,109990): smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 35,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.109990359997821
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,125915 (regressionFit = 4,125912, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,109991 (regressionFit = 4,109988, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,126027 (regressionFit = 4,126024, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,125915 (regressionFit = 4,125912, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,126027 (regressionFit = 4,126024, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.109991259997821
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,125916 (regressionFit = 4,125912, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,126028 (regressionFit = 4,126024, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,125916 (regressionFit = 4,125912, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,126028 (regressionFit = 4,126024, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.125915490014324
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,102913 (regressionFit = 4,102909, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,102913): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,107403 (regressionFit = 4,107399, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,117108 (regressionFit = 4,117104, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,125916 (regressionFit = 4,125912, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,107403 (regressionFit = 4,107399, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,125624 (regressionFit = 4,125620, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,102913 (regressionFit = 4,102909, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,117108 (regressionFit = 4,117104, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,125624 (regressionFit = 4,125620, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,096987 (regressionFit = 4,096983, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,096987): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,104451 (regressionFit = 4,104447, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]' score=-4.102913472685248
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 13 variant children.  Sending 26 items to OPEN for evaluation and possible insertion.
% Have created 26 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,096409 (regressionFit = 4,096404, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,096409): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(A, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,102914 (regressionFit = 4,102909, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(B, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.940000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,092288 (regressionFit = 4,092283, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,092288): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,092288 (regressionFit = 4,092283, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,098582 (regressionFit = 4,098577, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(B, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,102914 (regressionFit = 4,102909, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,092288 (regressionFit = 4,092283, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,534452 (regressionFit = 3,534448, penalties=4.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,534452): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,104339 (regressionFit = 4,104334, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,102914 (regressionFit = 4,102909, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,092288 (regressionFit = 4,092283, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,534452 (regressionFit = 3,534448, penalties=4.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,104339 (regressionFit = 4,104334, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(C, _).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,096409 (regressionFit = 4,096404, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(_, A).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,098582 (regressionFit = 4,098577, penalties=5.050000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), friends(_, B).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,104339 (regressionFit = 4,104334, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,104339 (regressionFit = 4,104334, penalties=4.950000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), friends(_, C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,130287 (regressionFit = 4,130283, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,130287 (regressionFit = 4,130283, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), r_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,083094 (regressionFit = 4,083089, penalties=4.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, _), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]
%     Score = -4,083094 (regressionFit = 4,083089, penalties=4.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, C), r_not_smokes(C).  [covers 16,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]' score=-3.5344522788248436
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 12 variant children.  Sending 25 items to OPEN for evaluation and possible insertion.
% Have created 25 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,560832 (regressionFit = 3,560826, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(A, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,534453 (regressionFit = 3,534448, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,998027 (regressionFit = 3,998022, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,998027 (regressionFit = 3,998022, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, D).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,563222 (regressionFit = 3,563216, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(B, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,534453 (regressionFit = 3,534448, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(C, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,998027 (regressionFit = 3,998022, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,549299 (regressionFit = 3,549294, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(C, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,534453 (regressionFit = 3,534448, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,998027 (regressionFit = 3,998022, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,534453 (regressionFit = 3,534448, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, D).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,549299 (regressionFit = 3,549294, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(D, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,560832 (regressionFit = 3,560826, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(_, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,563222 (regressionFit = 3,563216, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(_, B).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,549299 (regressionFit = 3,549294, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(_, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,549299 (regressionFit = 3,549294, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), friends(_, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,990495 (regressionFit = 3,990490, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,990495 (regressionFit = 3,990490, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_smokes(D).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,525422 (regressionFit = 3,525416, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3,525422): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,525422 (regressionFit = 3,525416, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]' score=-3.5344522788248436
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 12 variant children.  Sending 25 items to OPEN for evaluation and possible insertion.
% Have created 25 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(A, A).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,560832 (regressionFit = 3,560826, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(A, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,534453 (regressionFit = 3,534448, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,998027 (regressionFit = 3,998022, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,998027 (regressionFit = 3,998022, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, D).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,563222 (regressionFit = 3,563216, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(B, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,534453 (regressionFit = 3,534448, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(C, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,998027 (regressionFit = 3,998022, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(C, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(C, C).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,549299 (regressionFit = 3,549294, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(C, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,534453 (regressionFit = 3,534448, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(D, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,998027 (regressionFit = 3,998022, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(D, B).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(D, D).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,549299 (regressionFit = 3,549294, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(D, _).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,560832 (regressionFit = 3,560826, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(_, A).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,563222 (regressionFit = 3,563216, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(_, B).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,549299 (regressionFit = 3,549294, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(_, C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,549299 (regressionFit = 3,549294, penalties=5.750000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), friends(_, D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,990495 (regressionFit = 3,990490, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_smokes(C).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,990495 (regressionFit = 3,990490, penalties=5.640000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_smokes(D).  [covers 6,0/35,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_not_smokes(B).  [covers 0,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,525422 (regressionFit = 3,525416, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
%     Score = -3,525422 (regressionFit = 3,525416, penalties=5.740000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(D, C), r_not_smokes(D).  [covers 12,0/35,0 pos, 0,0/0,0 neg]

***** Warning: #65 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
Setting -0.005976429175915682 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3,53 and has recall=0,34, precision=0,99, and F1=0,51 (using m-estimates).
 // It covers 34,3% of the positive examples, 12 of 35,
(smokes(D) :- friends(D, Anon27829), r_smokes(Anon27829), friends(D, Anon27959), friends(D, Anon28129), friends(Anon27959, Anon28129), r_not_smokes(Anon27959))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C).  [covers 12,0/35,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 12 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 34,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.005976429175915682 to wgt = -0,0060 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(A, D), friends(C, D), r_not_smokes(C))
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model.ckpt
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for smokes.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).
stepLength_tree11(1.0).
stepLength_tree12(1.0).
stepLength_tree13(1.0).
stepLength_tree14(1.0).
stepLength_tree15(1.0).
stepLength_tree16(1.0).
stepLength_tree17(1.0).
stepLength_tree18(1.0).
stepLength_tree19(1.0).
stepLength_tree20(1.0).

logPrior(-1.8).
smokes(D, Total) :- // A general accessor. 
   smokes(D, 1000000, Total), !.
smokes(D, Total) :- waitHere("This should not fail", smokes(D, Total)).

smokes(D, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_smokes_tree1(D, TreesToUse, Total1),
   getScore_smokes_tree2(D, TreesToUse, Total2),
   getScore_smokes_tree3(D, TreesToUse, Total3),
   getScore_smokes_tree4(D, TreesToUse, Total4),
   getScore_smokes_tree5(D, TreesToUse, Total5),
   getScore_smokes_tree6(D, TreesToUse, Total6),
   getScore_smokes_tree7(D, TreesToUse, Total7),
   getScore_smokes_tree8(D, TreesToUse, Total8),
   getScore_smokes_tree9(D, TreesToUse, Total9),
   getScore_smokes_tree10(D, TreesToUse, Total10),
   getScore_smokes_tree11(D, TreesToUse, Total11),
   getScore_smokes_tree12(D, TreesToUse, Total12),
   getScore_smokes_tree13(D, TreesToUse, Total13),
   getScore_smokes_tree14(D, TreesToUse, Total14),
   getScore_smokes_tree15(D, TreesToUse, Total15),
   getScore_smokes_tree16(D, TreesToUse, Total16),
   getScore_smokes_tree17(D, TreesToUse, Total17),
   getScore_smokes_tree18(D, TreesToUse, Total18),
   getScore_smokes_tree19(D, TreesToUse, Total19),
   getScore_smokes_tree20(D, TreesToUse, Total20),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10 + Total11 + Total12 + Total13 + Total14 + Total15 + Total16 + Total17 + Total18 + Total19 + Total20,
   !.
smokes(D, TreesToUse, Total) :- waitHere("This should not fail", smokes(D, TreesToUse, Total)).

getScore_smokes_tree1(D, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_smokes_tree1(D, TreesToUse, Total1) :- smokes_tree1(D, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_smokes_tree2(D, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_smokes_tree2(D, TreesToUse, Total2) :- smokes_tree2(D, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_smokes_tree3(D, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_smokes_tree3(D, TreesToUse, Total3) :- smokes_tree3(D, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_smokes_tree4(D, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_smokes_tree4(D, TreesToUse, Total4) :- smokes_tree4(D, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_smokes_tree5(D, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_smokes_tree5(D, TreesToUse, Total5) :- smokes_tree5(D, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_smokes_tree6(D, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_smokes_tree6(D, TreesToUse, Total6) :- smokes_tree6(D, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_smokes_tree7(D, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_smokes_tree7(D, TreesToUse, Total7) :- smokes_tree7(D, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_smokes_tree8(D, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_smokes_tree8(D, TreesToUse, Total8) :- smokes_tree8(D, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_smokes_tree9(D, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_smokes_tree9(D, TreesToUse, Total9) :- smokes_tree9(D, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_smokes_tree10(D, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_smokes_tree10(D, TreesToUse, Total10) :- smokes_tree10(D, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

getScore_smokes_tree11(D, TreesToUse, 0.0) :- 11 > TreesToUse, !.
getScore_smokes_tree11(D, TreesToUse, Total11) :- smokes_tree11(D, Total), stepLength_tree11(StepLen), Total11 is Total * StepLen.

getScore_smokes_tree12(D, TreesToUse, 0.0) :- 12 > TreesToUse, !.
getScore_smokes_tree12(D, TreesToUse, Total12) :- smokes_tree12(D, Total), stepLength_tree12(StepLen), Total12 is Total * StepLen.

getScore_smokes_tree13(D, TreesToUse, 0.0) :- 13 > TreesToUse, !.
getScore_smokes_tree13(D, TreesToUse, Total13) :- smokes_tree13(D, Total), stepLength_tree13(StepLen), Total13 is Total * StepLen.

getScore_smokes_tree14(D, TreesToUse, 0.0) :- 14 > TreesToUse, !.
getScore_smokes_tree14(D, TreesToUse, Total14) :- smokes_tree14(D, Total), stepLength_tree14(StepLen), Total14 is Total * StepLen.

getScore_smokes_tree15(D, TreesToUse, 0.0) :- 15 > TreesToUse, !.
getScore_smokes_tree15(D, TreesToUse, Total15) :- smokes_tree15(D, Total), stepLength_tree15(StepLen), Total15 is Total * StepLen.

getScore_smokes_tree16(D, TreesToUse, 0.0) :- 16 > TreesToUse, !.
getScore_smokes_tree16(D, TreesToUse, Total16) :- smokes_tree16(D, Total), stepLength_tree16(StepLen), Total16 is Total * StepLen.

getScore_smokes_tree17(D, TreesToUse, 0.0) :- 17 > TreesToUse, !.
getScore_smokes_tree17(D, TreesToUse, Total17) :- smokes_tree17(D, Total), stepLength_tree17(StepLen), Total17 is Total * StepLen.

getScore_smokes_tree18(D, TreesToUse, 0.0) :- 18 > TreesToUse, !.
getScore_smokes_tree18(D, TreesToUse, Total18) :- smokes_tree18(D, Total), stepLength_tree18(StepLen), Total18 is Total * StepLen.

getScore_smokes_tree19(D, TreesToUse, 0.0) :- 19 > TreesToUse, !.
getScore_smokes_tree19(D, TreesToUse, Total19) :- smokes_tree19(D, Total), stepLength_tree19(StepLen), Total19 is Total * StepLen.

getScore_smokes_tree20(D, TreesToUse, 0.0) :- 20 > TreesToUse, !.
getScore_smokes_tree20(D, TreesToUse, Total20) :- smokes_tree20(D, Total), stepLength_tree20(StepLen), Total20 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(0, []).
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #588 as the next seed: smokes(person_86)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = smokes(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  smokes(_).  [covers 700,0/700,0 pos, 0,0/0,0 neg]
% Most-general root: smokes(_).  [covers 700,0/700,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'smokes(_).  [covers 700,0/700,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.0100000000000003E-6) for clause:  smokes(A) :- friends(A, A).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(A, _).  [covers 700,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  smokes(A) :- friends(_, A).  [covers 700,0/700,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, A).  [covers 0,0/700,0 pos, 0,0/0,0 neg]' score=-Infinity

% Consider expanding [#3 of outerLoop #1, bodyLen=0:1] 'smokes(A) :- friends(A, _).  [covers 700,0/700,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 3 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, _), friends(A, A).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(A, _).  [covers 700,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, A).  [covers 700,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.9200000000000003E-6) for clause:  smokes(A) :- friends(A, B), friends(B, B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(B, _).  [covers 700,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  smokes(A) :- friends(A, _), friends(_, A).  [covers 700,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  smokes(A) :- friends(A, B), friends(_, B).  [covers 700,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.375,328924 (regressionFit = 17.375,328922, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -17.375,328924): smokes(A) :- friends(A, B), r_smokes(B).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  smokes(A) :- friends(A, B), r_not_smokes(B).  [covers 700,0/700,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1:2] 'smokes(A) :- friends(A, B), r_smokes(B).  [covers 320,0/700,0 pos, 0,0/0,0 neg]' score=-17375.32892418984
%  At # nodes expanded = 4, |OPEN| = 9.  Pruned 3 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, A).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.383,237685 (regressionFit = 17.383,237682, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.375,328925 (regressionFit = 17.375,328922, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.499,890979 (regressionFit = 17.499,890976, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, _).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.383,237685 (regressionFit = 17.383,237682, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, A).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.499,890979 (regressionFit = 17.499,890976, penalties=3.0300000000000002E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(_, B).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0200000000000007E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), r_not_smokes(B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(B, A).  [covers 320,0/700,0 pos, 0,0/0,0 neg]' score=-17375.328925089838
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, A).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.383,237686 (regressionFit = 17.383,237682, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(A, _).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.82E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.499,890980 (regressionFit = 17.499,890976, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(B, _).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.383,237686 (regressionFit = 17.383,237682, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, A).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.499,890980 (regressionFit = 17.499,890976, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), friends(_, B).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.920000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(B, A), r_not_smokes(B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2:3] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, _).  [covers 320,0/700,0 pos, 0,0/0,0 neg]' score=-17383.237684844255
%  At # nodes expanded = 6, |OPEN| = 9.  Pruned 7 variant children.  Sending 16 items to OPEN for evaluation and possible insertion.
% Have created 16 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, A).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.041,753733 (regressionFit = 17.041,753729, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -17.041,753733): smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(A, _).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.856,409554 (regressionFit = 1.856,409551, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.856,409554): smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.204,250179 (regressionFit = 17.204,250175, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(B, _).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.383,237686 (regressionFit = 17.383,237682, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, A).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.856,409554 (regressionFit = 1.856,409551, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, C).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.365,632293 (regressionFit = 17.365,632289, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, _).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.041,753733 (regressionFit = 17.041,753729, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, A).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.204,250179 (regressionFit = 17.204,250175, penalties=4.040000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), friends(_, B).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.365,632293 (regressionFit = 17.365,632289, penalties=3.94E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(_, C).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.306,466587 (regressionFit = 17.306,466583, penalties=3.830000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_smokes(C).  [covers 320,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.03E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, _), r_not_smokes(B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -17.100,479412 (regressionFit = 17.100,479408, penalties=3.9300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), r_not_smokes(C).  [covers 320,0/700,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 120,0/700,0 pos, 0,0/0,0 neg]' score=-1856.4095544908257
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 6 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(A, A).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.968,844464 (regressionFit = 1.968,844459, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(A, _).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.856,409555 (regressionFit = 1.856,409551, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.991,996516 (regressionFit = 1.991,996511, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, _).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.856,409555 (regressionFit = 1.856,409551, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, A).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.856,409555 (regressionFit = 1.856,409551, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, B).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, C).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.949,896486 (regressionFit = 1.949,896481, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(C, _).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.968,844464 (regressionFit = 1.968,844459, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(_, A).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.991,996516 (regressionFit = 1.991,996511, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(_, B).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.949,896486 (regressionFit = 1.949,896481, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(_, C).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), r_smokes(C).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), r_not_smokes(B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.856,409555 (regressionFit = 1.856,409551, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), r_not_smokes(C).  [covers 120,0/700,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3:4] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B).  [covers 120,0/700,0 pos, 0,0/0,0 neg]' score=-1856.4095544908257
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 6 variant children.  Sending 15 items to OPEN for evaluation and possible insertion.
% Have created 15 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(A, A).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.968,844464 (regressionFit = 1.968,844459, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(A, _).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.856,409555 (regressionFit = 1.856,409551, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(B, A).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(B, B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.991,996516 (regressionFit = 1.991,996511, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(B, _).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.856,409555 (regressionFit = 1.856,409551, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(C, A).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(C, C).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.949,896486 (regressionFit = 1.949,896481, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(C, _).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.968,844464 (regressionFit = 1.968,844459, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(_, A).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.991,996516 (regressionFit = 1.991,996511, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(_, B).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.949,896486 (regressionFit = 1.949,896481, penalties=4.840000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), friends(_, C).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.7300000000000005E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), r_smokes(C).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), r_not_smokes(B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.856,409555 (regressionFit = 1.856,409551, penalties=4.83E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(C, B), r_not_smokes(C).  [covers 120,0/700,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4:5] 'smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A).  [covers 120,0/700,0 pos, 0,0/0,0 neg]' score=-1856.4095553908257
%  At # nodes expanded = 9, |OPEN| = 9.  Pruned 5 variant children.  Sending 14 items to OPEN for evaluation and possible insertion.
% Have created 14 valid-on-seeds descendants.
%     Score = -Infinity (regressionFit = Infinity, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), friends(A, A).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.968,844465 (regressionFit = 1.968,844459, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), friends(A, _).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), friends(B, B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.991,996517 (regressionFit = 1.991,996511, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), friends(B, _).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.856,409556 (regressionFit = 1.856,409551, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), friends(C, A).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.856,409556 (regressionFit = 1.856,409551, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), friends(C, B).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), friends(C, C).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.949,896487 (regressionFit = 1.949,896481, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), friends(C, _).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.968,844465 (regressionFit = 1.968,844459, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), friends(_, A).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.991,996517 (regressionFit = 1.991,996511, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), friends(_, B).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.949,896487 (regressionFit = 1.949,896481, penalties=5.740000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), friends(_, C).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.630000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), r_smokes(C).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=5.730000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), r_not_smokes(B).  [covers 0,0/700,0 pos, 0,0/0,0 neg]
%     Score = -1.856,409556 (regressionFit = 1.856,409551, penalties=5.730000000000001E-6) for clause:  smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C), friends(B, A), r_not_smokes(C).  [covers 120,0/700,0 pos, 0,0/0,0 neg]

***** Warning: #66 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 120,0/700,0 pos, 0,0/0,0 neg]

% The best node found: smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
Setting -0.8894434943657059 for 
 // Learned this clause on outer loop cycle #1.  It scores=-1.856,41 and has recall=0,17, precision=1,00, and F1=0,29 (using m-estimates).
 // It covers 17,1% of the positive examples, 120 of 700 (of which 6 are newly covered),
(smokes(D) :- friends(D, Anon29787), r_smokes(Anon29787), friends(D, Anon29917), friends(Anon29787, Anon29917))

% On cycle #1, the best clause found is:
%      smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C).  [covers 120,0/700,0 pos, 0,0/0,0 neg]
% This clause covers 120 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 0,9% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.8894434943657059 to wgt = -0,8894 (smokes(A) :- friends(A, B), r_smokes(B), friends(A, C), friends(B, C))
% Time taken to learn model for 'smokes': 10,809 seconds.
% Saving model in: datasets\SmokeGen\train/models/bRDNs/smokes.model
cached groundings hit: 0
Misses: 0

% Switching to standard-logic notation for variables; previous setting = uppercase

% Switching to VarIndicator = lowercase.

% Switching to Prolog notation for variables; previous setting = lowercase

% Switching to VarIndicator = uppercase.

% Total learning time (20 trees): 11,915 seconds.
