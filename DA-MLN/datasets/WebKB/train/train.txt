% Running on host: DESKTOP-0S2LA4F

% Creating string handler #1.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Switching to VarIndicator = questionMarks.

% getInputArgWithDefaultValue: args=[datasets\WebKB\train/train_pos.txt, datasets\WebKB\train/train_neg.txt, datasets\WebKB\train/train_bk.txt, datasets\WebKB\train/train_facts.txt, null]
%  for N=0: args[N]=datasets\WebKB\train/train_pos.txt

% getInputArgWithDefaultValue: args=[datasets\WebKB\train/train_pos.txt, datasets\WebKB\train/train_neg.txt, datasets\WebKB\train/train_bk.txt, datasets\WebKB\train/train_facts.txt, null]
%  for N=1: args[N]=datasets\WebKB\train/train_neg.txt

% getInputArgWithDefaultValue: args=[datasets\WebKB\train/train_pos.txt, datasets\WebKB\train/train_neg.txt, datasets\WebKB\train/train_bk.txt, datasets\WebKB\train/train_facts.txt, null]
%  for N=2: args[N]=datasets\WebKB\train/train_bk.txt

% getInputArgWithDefaultValue: args=[datasets\WebKB\train/train_pos.txt, datasets\WebKB\train/train_neg.txt, datasets\WebKB\train/train_bk.txt, datasets\WebKB\train/train_facts.txt, null]
%  for N=3: args[N]=datasets\WebKB\train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.
% Reading background theory from dir: null
% Load '../webkb_bk.txt'.
% LoadAllModes() called.  Currently loaded modes: []

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

% Switching to Prolog notation for variables; previous setting = questionMarks

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = questionMarks.

%  Read the facts.
%  Have read 90 facts.

%  LearnOneClause initialized.
% Have read 0 examples from 'datasets\WebKB\train' [datasets\WebKB\train/train*].
% Have read 0 examples from 'datasets\WebKB\train' [datasets\WebKB\train/train*].

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.

***** Warning: targetPredicates=null *****


***** Warning: targetArgSpecs=null *****

% Time to collect constants: 8 milliseconds
% Time to collect examples: 0 seconds

% Read 0 pos examples and 0 neg examples.
% Time to init learnOneClause: 12 milliseconds

% 'models/domain_sizes.txt' saved.
File: datasets\WebKB\train/advice.txt doesnt exist.Hence no advice loaded
% Learning 20 trees in this iteration for faculty

% Learn model for: faculty
% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:2 milliseconds
No hidden examples for : faculty
Time to build dataset: 3 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 3 4 5 8 9 21 25 26 30 35
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (0):
%    
%  Modes (43):
%    courseprof(-Course, +Person),
%    courseprof(+Course, -Person),
%    courseta(+Course, -Person),
%    courseta(-Course, +Person),
%    project(-Proj, +Person),
%    project(+Proj, -Person),
%    student(+Person),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber)

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for courseprof/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for courseta/2.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for project/2.
There is no fact nor clause nor built-in predicate matching: 'student/1'.
  Possibly a typo?  If not, add to the BK file:   okIfUnknown: student/1.

% Skipping over this 'waitHere': There is no fact nor clause nor built-in predicate matching: 'student/1'.
  Possibly a typo?  If not, add to the BK file:   okIfUnknown: student/1.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -10,627122 (regressionFit = 10,627120, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,627122): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,783625 (regressionFit = 9,783624, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,783625): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -7,913667 (regressionFit = 7,913666, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,913667): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.12938609187538375 for 
 // Learned this clause on outer loop cycle #1.  It scores=-7,91 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon1093, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 4 9 10 14 15 16 19 20 26 34
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,694642 (regressionFit = 11,694640, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11,694642): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,558122 (regressionFit = 11,558121, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11,558122): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
Setting -0.10132218921463412 for 
 // Learned this clause on outer loop cycle #2.  It scores=-11,56 and has recall=0,09, precision=0,98, and F1=0,17 (using m-estimates).
 // It covers 9,1% of the positive examples, 4 of 44,
 // So far 27 (61,4%) of the positive examples have been covered.
(faculty(D) :- courseta(Anon1165, D))

% On cycle #2, the best clause found is:
%      faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 61,4% of the positive examples and NaN% of the negatives.}

% Have these 6 positive seeds: 1 4 7 10 18 42
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,482323 (regressionFit = 11,482322, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11,482323): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
Setting 0.26084399083482374 for 
 // Learned this clause on outer loop cycle #3.  It scores=-11,48 and has recall=0,27, precision=0,99, and F1=0,43 (using m-estimates).
 // It covers 27,3% of the positive examples, 12 of 44 (of which 6 are newly covered),
 // So far 33 (75,0%) of the positive examples have been covered.
(faculty(D) :- courseprof(Anon1225, D))

% On cycle #3, the best clause found is:
%      faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 75,0% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #7, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #8, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #9, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #10, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #11, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #12, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #13, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #14, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #15, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #16, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #17, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #18, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #19, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #20, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (20).

% ******************************************
adding regression values
Added 0.12938609187538375 to wgt = 0,1294 (faculty(A) :- project(_, A))
Added -0.10132218921463412 to wgt = -0,1013 (faculty(A) :- courseta(_, A))
Added 0.26084399083482374 to wgt = 0,2608 (faculty(A) :- courseprof(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 1 trees is 778 milliseconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:33 milliseconds
No hidden examples for : faculty
Time to build dataset: 34 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 5 6 13 16 20 21 25 33 36 39
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -10,701197 (regressionFit = 10,701196, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,701197): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,459527 (regressionFit = 9,459526, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,459527): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -7,354952 (regressionFit = 7,354951, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,354952): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.09657705116267779 for 
 // Learned this clause on outer loop cycle #1.  It scores=-7,35 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon1517, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% Have these 9 positive seeds: 1 7 8 15 16 19 20 26 42
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,539984 (regressionFit = 11,539983, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11,539984): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -10,790368 (regressionFit = 10,790366, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,790368): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
Setting -0.08967540326705456 for 
 // Learned this clause on outer loop cycle #2.  It scores=-10,79 and has recall=0,09, precision=0,98, and F1=0,17 (using m-estimates).
 // It covers 9,1% of the positive examples, 4 of 44,
 // So far 27 (61,4%) of the positive examples have been covered.
(faculty(D) :- courseta(Anon1589, D))

% On cycle #2, the best clause found is:
%      faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 61,4% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 3 7 8 9 10 14 16 18 20 22
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,354326 (regressionFit = 11,354325, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11,354326): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
Setting 0.21497648124363394 for 
 // Learned this clause on outer loop cycle #3.  It scores=-11,35 and has recall=0,27, precision=0,99, and F1=0,43 (using m-estimates).
 // It covers 27,3% of the positive examples, 12 of 44 (of which 6 are newly covered),
 // So far 33 (75,0%) of the positive examples have been covered.
(faculty(D) :- courseprof(Anon1649, D))

% On cycle #3, the best clause found is:
%      faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 75,0% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #7, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #8, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #9, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #10, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (10).

% ******************************************
adding regression values
Added 0.09657705116267779 to wgt = 0,0966 (faculty(A) :- project(_, A))
Added -0.08967540326705456 to wgt = -0,0897 (faculty(A) :- courseta(_, A))
Added 0.21497648124363394 to wgt = 0,2150 (faculty(A) :- courseprof(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 2 trees is 1,161 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:70 milliseconds
No hidden examples for : faculty
Time to build dataset: 72 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 1 2 4 6 7 15 26 27 32 33
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -10,831828 (regressionFit = 10,831827, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,831828): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,311067 (regressionFit = 9,311066, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,311067): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,969618 (regressionFit = 6,969617, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,969618): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.06261930004423807 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,97 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon1801, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 3 4 7 14 16 18 19 20 22
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,397617 (regressionFit = 11,397616, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11,397617): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
Setting 0.16286551911726738 for 
 // Learned this clause on outer loop cycle #2.  It scores=-11,40 and has recall=0,27, precision=0,99, and F1=0,43 (using m-estimates).
 // It covers 27,3% of the positive examples, 12 of 44 (of which 6 are newly covered),
 // So far 29 (65,9%) of the positive examples have been covered.
(faculty(D) :- courseprof(Anon1871, D))

% On cycle #2, the best clause found is:
%      faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 65,9% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 1 3 4 8 15 16 18 20 22 36
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -9,585478 (regressionFit = 9,585477, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,585478): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
Setting -0.0804588749447747 for 
 // Learned this clause on outer loop cycle #3.  It scores=-9,59 and has recall=0,09, precision=0,98, and F1=0,17 (using m-estimates).
 // It covers 9,1% of the positive examples, 4 of 44,
 // So far 33 (75,0%) of the positive examples have been covered.
(faculty(D) :- courseta(Anon1923, D))

% On cycle #3, the best clause found is:
%      faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 75,0% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #6, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (6).

% ******************************************
adding regression values
Added 0.06261930004423807 to wgt = 0,0626 (faculty(A) :- project(_, A))
Added 0.16286551911726738 to wgt = 0,1629 (faculty(A) :- courseprof(_, A))
Added -0.0804588749447747 to wgt = -0,0805 (faculty(A) :- courseta(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 3 trees is 1,467 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:38 milliseconds
No hidden examples for : faculty
Time to build dataset: 40 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 1 4 14 15 16 21 23 25 28 31
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -10,936866 (regressionFit = 10,936865, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,936866): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,852410 (regressionFit = 6,852408, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,852410): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.03767318347326741 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,85 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon2017, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 1 3 4 8 15 16 18 19 20 22
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% Have these 9 positive seeds: 0 4 8 9 10 22 26 36 43
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,286102 (regressionFit = 11,286100, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11,286102): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,905288 (regressionFit = 9,905287, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,905288): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
Setting -0.07299544581834112 for 
 // Learned this clause on outer loop cycle #3.  It scores=-9,91 and has recall=0,09, precision=0,98, and F1=0,17 (using m-estimates).
 // It covers 9,1% of the positive examples, 4 of 44,
 // So far 27 (61,4%) of the positive examples have been covered.
(faculty(D) :- courseta(Anon2091, D))

% On cycle #3, the best clause found is:
%      faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 61,4% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 1 3 7 10 14 15 16 18 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,134305 (regressionFit = 11,134304, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11,134305): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
Setting 0.12282164076250723 for 
 // Learned this clause on outer loop cycle #4.  It scores=-11,13 and has recall=0,27, precision=0,99, and F1=0,43 (using m-estimates).
 // It covers 27,3% of the positive examples, 12 of 44 (of which 6 are newly covered),
 // So far 33 (75,0%) of the positive examples have been covered.
(faculty(D) :- courseprof(Anon2151, D))

% On cycle #4, the best clause found is:
%      faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 75,0% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #5, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (5).

% ******************************************
adding regression values
Added 0.03767318347326741 to wgt = 0,0377 (faculty(A) :- project(_, A))
Added -0.07299544581834112 to wgt = -0,0730 (faculty(A) :- courseta(_, A))
Added 0.12282164076250723 to wgt = 0,1228 (faculty(A) :- courseprof(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 4 trees is 1,621 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:22 milliseconds
No hidden examples for : faculty
Time to build dataset: 23 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 3 9 10 29 32 37 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -10,988807 (regressionFit = 10,988805, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,988807): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,852008 (regressionFit = 6,852007, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,852008): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.85200830163047
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for project/2.
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,838332 (regressionFit = 6,838329, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,838332): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,880702 (regressionFit = 6,880700, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-10.98880658379251
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for courseprof/2.
% [ LazyGroundClauseIndex ]  Building full index for courseta/2 with 5 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for courseta/2.
%  At # nodes expanded = 3, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,413628 (regressionFit = 11,413626, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.008541870738126863 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,84 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon2219, D), project(Anon2253, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 1 3 8 9 14 15 16 20 22
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,067901 (regressionFit = 11,067899, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11,067901): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-11.067900604944674
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,481689 (regressionFit = 11,481687, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
Setting 0.09853626450635561 for 
 // Learned this clause on outer loop cycle #2.  It scores=-11,07 and has recall=0,27, precision=0,99, and F1=0,43 (using m-estimates).
 // It covers 27,3% of the positive examples, 12 of 44 (of which 6 are newly covered),
 // So far 29 (65,9%) of the positive examples have been covered.
(faculty(D) :- courseprof(Anon2357, D))

% On cycle #2, the best clause found is:
%      faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 65,9% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 1 4 8 16 18 22 26 34 36 43
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -9,469277 (regressionFit = 9,469275, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,469277): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]' score=-9.46927655773035
% [ LazyGroundClauseIndex ]  Building full index for courseprof/2 with 24 assertions.
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,480240 (regressionFit = 9,480238, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(_, A), courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
Setting -0.06683312812650637 for 
 // Learned this clause on outer loop cycle #3.  It scores=-9,47 and has recall=0,09, precision=0,98, and F1=0,17 (using m-estimates).
 // It covers 9,1% of the positive examples, 4 of 44,
 // So far 33 (75,0%) of the positive examples have been covered.
(faculty(D) :- courseta(Anon2435, D))

% On cycle #3, the best clause found is:
%      faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 75,0% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 1 3 4 8 15 16 18 19 20
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #4, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 4 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (4).

% ******************************************
adding regression values
Added 0.008541870738126863 to wgt = 0,0085 (faculty(A) :- project(_, A), project(_, A))
Added 0.09853626450635561 to wgt = 0,0985 (faculty(A) :- courseprof(_, A))
Added -0.06683312812650637 to wgt = -0,0668 (faculty(A) :- courseta(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 5 trees is 1,872 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:68 milliseconds
No hidden examples for : faculty
Time to build dataset: 68 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 7 9 11 21 35 36 40 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -10,992922 (regressionFit = 10,992920, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,992922): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,627356 (regressionFit = 9,627355, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,627356): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,882147 (regressionFit = 6,882146, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,882147): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.882147213868572
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,569724 (regressionFit = 11,569722, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,874531 (regressionFit = 6,874529, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,874531): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,891996 (regressionFit = 6,891994, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]' score=-9.627356242532247
%  At # nodes expanded = 3, |OPEN| = 1.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-10.992921610843457
%  At # nodes expanded = 4, |OPEN| = 0.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,300356 (regressionFit = 11,300354, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,401240 (regressionFit = 11,401238, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.00493278127612211 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,87 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon2539, D), project(Anon2585, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% Have these 8 positive seeds: 6 7 10 14 15 18 20 36
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,039386 (regressionFit = 11,039385, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11,039386): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,693820 (regressionFit = 9,693819, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,693820): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]' score=-9.693820089731103
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-11.039386131440347
%  At # nodes expanded = 3, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,341166 (regressionFit = 11,341164, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
Setting -0.06166068071061694 for 
 // Learned this clause on outer loop cycle #2.  It scores=-9,69 and has recall=0,09, precision=0,98, and F1=0,17 (using m-estimates).
 // It covers 9,1% of the positive examples, 4 of 44,
 // So far 27 (61,4%) of the positive examples have been covered.
(faculty(D) :- courseta(Anon2741, D))

% On cycle #2, the best clause found is:
%      faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 61,4% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 1 3 4 6 7 8 9 14 15
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10,910091 (regressionFit = 10,910089, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,910091): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #3, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-10.91009058267495
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,211871 (regressionFit = 11,211869, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
Setting 0.07912919211048929 for 
 // Learned this clause on outer loop cycle #3.  It scores=-10,91 and has recall=0,27, precision=0,99, and F1=0,43 (using m-estimates).
 // It covers 27,3% of the positive examples, 12 of 44 (of which 6 are newly covered),
 // So far 33 (75,0%) of the positive examples have been covered.
(faculty(D) :- courseprof(Anon2853, D))

% On cycle #3, the best clause found is:
%      faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 3 best clauses covers 75,0% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (3).

% ******************************************
adding regression values
Added 0.00493278127612211 to wgt = 0,0049 (faculty(A) :- project(_, A), project(_, A))
Added -0.06166068071061694 to wgt = -0,0617 (faculty(A) :- courseta(_, A))
Added 0.07912919211048929 to wgt = 0,0791 (faculty(A) :- courseprof(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 6 trees is 2,248 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:29 milliseconds
No hidden examples for : faculty
Time to build dataset: 30 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 2 4 6 10 11 13 15 25 29 31
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -10,978055 (regressionFit = 10,978054, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,978055): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,911437 (regressionFit = 6,911436, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,911437): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.911437219641998
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,555846 (regressionFit = 11,555843, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,907757 (regressionFit = 6,907755, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,907757): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,909085 (regressionFit = 6,909083, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-10.978055254028401
%  At # nodes expanded = 3, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,209214 (regressionFit = 11,209212, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,445034 (regressionFit = 11,445032, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.002637170514990262 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,91 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon2933, D), project(Anon2967, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 1 3 4 6 14 16 22 26 34
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,003177 (regressionFit = 11,003176, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11,003177): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,742253 (regressionFit = 9,742252, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,742253): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]' score=-9.74225301784069
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -9,750893 (regressionFit = 9,750890, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(_, A), courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-11.003177302249645
%  At # nodes expanded = 3, |OPEN| = 0.  Pruned 1 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 3 bad extensions.

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
Setting -0.05725767634187416 for 
 // Learned this clause on outer loop cycle #2.  It scores=-9,74 and has recall=0,09, precision=0,98, and F1=0,17 (using m-estimates).
 // It covers 9,1% of the positive examples, 4 of 44,
 // So far 27 (61,4%) of the positive examples have been covered.
(faculty(D) :- courseta(Anon3109, D))

% On cycle #2, the best clause found is:
%      faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 61,4% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.002637170514990262 to wgt = 0,0026 (faculty(A) :- project(_, A), project(_, A))
Added -0.05725767634187416 to wgt = -0,0573 (faculty(A) :- courseta(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 7 trees is 2,533 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:26 milliseconds
No hidden examples for : faculty
Time to build dataset: 27 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 5 6 8 16 19 27 28 38 41
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -10,978254 (regressionFit = 10,978253, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,978254): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,886503 (regressionFit = 6,886501, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,886503): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.886502576658494
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,566529 (regressionFit = 11,566527, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,883923 (regressionFit = 6,883920, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,883923): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-10.978254288478563
%  At # nodes expanded = 3, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,447508 (regressionFit = 11,447506, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- courseprof(_, A), project(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.002081282391521249 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,88 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon3213, D), project(Anon3247, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 6 7 9 14 18 19 20 22 34 36
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -10,998214 (regressionFit = 10,998213, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,998214): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,755201 (regressionFit = 9,755200, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,755201): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]' score=-9.755200928311998
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-10.998213675097976
%  At # nodes expanded = 3, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,224403 (regressionFit = 11,224401, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
Setting -0.05346405886725831 for 
 // Learned this clause on outer loop cycle #2.  It scores=-9,76 and has recall=0,09, precision=0,98, and F1=0,17 (using m-estimates).
 // It covers 9,1% of the positive examples, 4 of 44,
 // So far 27 (61,4%) of the positive examples have been covered.
(faculty(D) :- courseta(Anon3353, D))

% On cycle #2, the best clause found is:
%      faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 61,4% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.002081282391521249 to wgt = 0,0021 (faculty(A) :- project(_, A), project(_, A))
Added -0.05346405886725831 to wgt = -0,0535 (faculty(A) :- courseta(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 8 trees is 2,673 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:66 milliseconds
No hidden examples for : faculty
Time to build dataset: 68 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 4 8 13 17 24 25 34 40 41 42
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -10,977971 (regressionFit = 10,977970, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,977971): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,743526 (regressionFit = 9,743525, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,743526): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,864969 (regressionFit = 6,864967, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,864969): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.864968617349879
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,574776 (regressionFit = 11,574773, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,863187 (regressionFit = 6,863185, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,863187): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,858215 (regressionFit = 6,858213, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,858215): faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.858214620839408
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,242260 (regressionFit = 12,242257, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -10,728476 (regressionFit = 10,728473, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,852122 (regressionFit = 6,852119, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,852122): faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,863206 (regressionFit = 6,863203, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,837930 (regressionFit = 6,837927, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,837930): faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.8631874971034375
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,332294 (regressionFit = 12,332291, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,865037 (regressionFit = 6,865034, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,852122 (regressionFit = 6,852119, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,852122 (regressionFit = 6,852119, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]' score=-9.74352627501725
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 1 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 3 bad extensions.

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-10.977971370453567
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,204136 (regressionFit = 11,204134, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-11.204136496901645
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 2 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,234031 (regressionFit = 11,234028, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(B, A), courseprof(_, A), courseta(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(B, A), courseta(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]
%     Score = -12,331682 (regressionFit = 12,331678, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]' score=-11.574775567727603
%  At # nodes expanded = 8, |OPEN| = 1.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,707454 (regressionFit = 11,707451, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), courseprof(B, A), courseta(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,626631 (regressionFit = 11,626628, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A), project(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,644536 (regressionFit = 11,644533, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), courseprof(_, A), project(B, _).  [covers 6,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(B, A), courseta(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting -0.005766382148304115 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,84 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon3469, D), project(Anon3469, Anon3517), project(Anon3469, Anon3579))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 1 4 8 9 10 14 18 19 22
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10,922885 (regressionFit = 10,922884, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,922885): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-10.922884710566473
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,155052 (regressionFit = 11,155050, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-11.155052334558643
%  At # nodes expanded = 3, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -11,186428 (regressionFit = 11,186425, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
Setting 0.06645215649605943 for 
 // Learned this clause on outer loop cycle #2.  It scores=-10,92 and has recall=0,27, precision=0,99, and F1=0,43 (using m-estimates).
 // It covers 27,3% of the positive examples, 12 of 44 (of which 6 are newly covered),
 // So far 29 (65,9%) of the positive examples have been covered.
(faculty(D) :- courseprof(Anon4037, D))

% On cycle #2, the best clause found is:
%      faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 65,9% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added -0.005766382148304115 to wgt = -0,0058 (faculty(A) :- project(B, A), project(B, _), project(B, _))
Added 0.06645215649605943 to wgt = 0,0665 (faculty(A) :- courseprof(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 9 trees is 2,883 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:31 milliseconds
No hidden examples for : faculty
Time to build dataset: 32 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 1 9 14 26 33 36 38 40
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -10,905230 (regressionFit = 10,905229, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,905230): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,716284 (regressionFit = 9,716283, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,716284): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,898804 (regressionFit = 6,898802, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,898804): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.898803541484593
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,896907 (regressionFit = 6,896905, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,896907): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.896906906775632
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,898691 (regressionFit = 6,898688, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]' score=-9.716283994520522
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,723289 (regressionFit = 9,723286, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(_, A), courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseta(_, A), courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]' score=-9.723288533047272
%  At # nodes expanded = 5, |OPEN| = 2.  Pruned 2 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseta(B, A), courseta(_, A), courseprof(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- courseta(_, A), courseta(B, A), courseprof(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,727696 (regressionFit = 9,727693, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseta(_, A), courseta(_, A), courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-10.905230051631188
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,087097 (regressionFit = 11,087095, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-11.087097334842483
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -11,104187 (regressionFit = 11,104184, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseta(B, A), courseprof(B, _).  [covers 1,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.001658000172459623 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,90 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon4149, D), project(Anon4195, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% Have these 10 positive seeds: 0 4 7 9 14 15 16 18 20 34
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -10,921086 (regressionFit = 10,921085, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,921086): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,738406 (regressionFit = 9,738405, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,738406): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]' score=-9.73840569480434
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 1 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 3 bad extensions.

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-10.921086342034725
%  At # nodes expanded = 3, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,101344 (regressionFit = 11,101342, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-11.101344177098271
%  At # nodes expanded = 4, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -11,118078 (regressionFit = 11,118075, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
Setting -0.05016101303400313 for 
 // Learned this clause on outer loop cycle #2.  It scores=-9,74 and has recall=0,09, precision=0,98, and F1=0,17 (using m-estimates).
 // It covers 9,1% of the positive examples, 4 of 44,
 // So far 27 (61,4%) of the positive examples have been covered.
(faculty(D) :- courseta(Anon4459, D))

% On cycle #2, the best clause found is:
%      faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 61,4% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************
adding regression values
Added 0.001658000172459623 to wgt = 0,0017 (faculty(A) :- project(_, A), project(_, A))
Added -0.05016101303400313 to wgt = -0,0502 (faculty(A) :- courseta(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model
% Time taken to learn 10 trees is 3,000 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:25 milliseconds
No hidden examples for : faculty
Time to build dataset: 26 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 3 10 12 14 27 28 31 32 34 39
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -10,903983 (regressionFit = 10,903982, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,903983): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,728921 (regressionFit = 9,728920, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,728921): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,880054 (regressionFit = 6,880052, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,880054): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.880053507782773
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,878808 (regressionFit = 6,878806, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,878808): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.878808409430587
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,880034 (regressionFit = 6,880031, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]' score=-9.728921297698355
%  At # nodes expanded = 4, |OPEN| = 1.  Pruned 1 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 3 bad extensions.

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-10.903983087486683
%  At # nodes expanded = 5, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,084332 (regressionFit = 11,084330, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-11.084332293200609
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -11,101147 (regressionFit = 11,101144, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.001317599386701649 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,88 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon4595, D), project(Anon4641, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.001317599386701649 to wgt = 0,0013 (faculty(A) :- project(_, A), project(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 11 trees is 3,075 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:36 milliseconds
No hidden examples for : faculty
Time to build dataset: 38 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 1 2 4 9 15 16 17 22 24 28
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -10,910070 (regressionFit = 10,910069, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,910070): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,879975 (regressionFit = 6,879974, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,879975): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.879974758267782
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,502608 (regressionFit = 11,502606, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,879221 (regressionFit = 6,879219, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,879221): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,870598 (regressionFit = 6,870596, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,870598): faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.870597573347159
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,150347 (regressionFit = 12,150343, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -10,665142 (regressionFit = 10,665139, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,864694 (regressionFit = 6,864691, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,864694): faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,876701 (regressionFit = 6,876698, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,849941 (regressionFit = 6,849938, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,849941): faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.879221295142547
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,243869 (regressionFit = 12,243866, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,880004 (regressionFit = 6,880001, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,864694 (regressionFit = 6,864691, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,864694 (regressionFit = 6,864691, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-10.910069822778084
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 1 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,089224 (regressionFit = 11,089222, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]' score=-11.089224339115846
%  At # nodes expanded = 6, |OPEN| = 1.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,105823 (regressionFit = 11,105820, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -12,261931 (regressionFit = 12,261927, penalties=3.240000000000001E-6) for clause:  faculty(A) :- courseprof(_, A), courseprof(_, A), project(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]' score=-11.502608260945529
%  At # nodes expanded = 7, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,619636 (regressionFit = 11,619632, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,548447 (regressionFit = 11,548444, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A), project(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,564219 (regressionFit = 11,564215, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), courseprof(_, A), project(B, _).  [covers 6,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting -0.006062931581445683 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,85 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon4813, D), project(Anon4813, Anon4849), project(Anon4813, Anon4911))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.006062931581445683 to wgt = -0,0061 (faculty(A) :- project(B, A), project(B, _), project(B, _))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 12 trees is 3,232 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:27 milliseconds
No hidden examples for : faculty
Time to build dataset: 28 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 2 3 4 7 9 11 15 18 20 27
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -10,863648 (regressionFit = 10,863647, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,863648): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,866555 (regressionFit = 6,866554, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,866555): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.8665547381689205
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,444812 (regressionFit = 11,444810, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,863976 (regressionFit = 6,863974, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,863976): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,862538 (regressionFit = 6,862536, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,862538): faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.862538040874987
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,109371 (regressionFit = 12,109368, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -10,631820 (regressionFit = 10,631817, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,858281 (regressionFit = 6,858278, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,858281): faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,866212 (regressionFit = 6,866209, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,846843 (regressionFit = 6,846840, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,846843): faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.846843284772517
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -12,282385 (regressionFit = 12,282381, penalties=4.15E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,124208 (regressionFit = 11,124204, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(B, _), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,124208 (regressionFit = 11,124204, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,823940 (regressionFit = 6,823936, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,823940): faculty(A) :- project(B, A), project(B, _), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,845893 (regressionFit = 6,845889, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(B, _), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,845893 (regressionFit = 6,845889, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,831217 (regressionFit = 6,831213, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.858281284189066
% [ LazyGroundClauseIndex ]  Building full index for project/2 with 38 assertions.
%  At # nodes expanded = 5, |OPEN| = 6.  Pruned 1 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,242244 (regressionFit = 12,242240, penalties=4.15E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,302582 (regressionFit = 11,302577, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, A), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,866770 (regressionFit = 6,866766, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, A), project(D, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,847848 (regressionFit = 6,847844, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,863903 (regressionFit = 6,863899, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, A), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,823940 (regressionFit = 6,823936, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,829361 (regressionFit = 6,829357, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(C, A), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.86397595404755
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,216864 (regressionFit = 12,216861, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,866448 (regressionFit = 6,866445, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,858281 (regressionFit = 6,858278, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.858281284189066
%  At # nodes expanded = 7, |OPEN| = 7.  Pruned 1 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,242244 (regressionFit = 12,242240, penalties=4.15E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,302582 (regressionFit = 11,302577, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,866770 (regressionFit = 6,866766, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(C, D), project(B, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,847848 (regressionFit = 6,847844, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,863903 (regressionFit = 6,863899, penalties=3.95E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,829361 (regressionFit = 6,829357, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,823940 (regressionFit = 6,823936, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.866211787190645
%  At # nodes expanded = 8, |OPEN| = 6.  Pruned 1 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,248507 (regressionFit = 12,248503, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,597780 (regressionFit = 11,597776, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,866770 (regressionFit = 6,866766, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,863903 (regressionFit = 6,863899, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,865621 (regressionFit = 6,865617, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,845893 (regressionFit = 6,845889, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,844255 (regressionFit = 6,844251, penalties=3.85E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.866448166293066
%  At # nodes expanded = 9, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,184619 (regressionFit = 12,184615, penalties=4.250000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,866844 (regressionFit = 6,866840, penalties=4.150000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,847848 (regressionFit = 6,847844, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,847848 (regressionFit = 6,847844, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,847848 (regressionFit = 6,847844, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

***** Warning: #1 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- project(B, A), project(B, _), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(B, A), project(B, _), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting -0.0024132953039040206 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,82 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon5293, D), project(Anon5293, Anon5329), project(Anon5293, Anon5391), project(Anon5501, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(B, A), project(B, _), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.0024132953039040206 to wgt = -0,0024 (faculty(A) :- project(B, A), project(B, _), project(B, _), project(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 13 trees is 3,563 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:40 milliseconds
No hidden examples for : faculty
Time to build dataset: 41 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 2 10 13 17 18 36 37 41 43
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -10,810484 (regressionFit = 10,810483, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,810484): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,606739 (regressionFit = 9,606738, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,606739): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,843824 (regressionFit = 6,843823, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,843824): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.843823805674222
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,369630 (regressionFit = 11,369628, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,838231 (regressionFit = 6,838229, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,838231): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,845532 (regressionFit = 6,845530, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.838231223856095
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,176434 (regressionFit = 12,176431, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,842917 (regressionFit = 6,842913, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,843767 (regressionFit = 6,843764, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,843767 (regressionFit = 6,843764, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.842916629823779
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,175390 (regressionFit = 12,175386, penalties=4.250000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,845817 (regressionFit = 6,845813, penalties=4.150000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,837216 (regressionFit = 6,837212, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,837216): faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,837216 (regressionFit = 6,837212, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,837216 (regressionFit = 6,837212, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.843766551535746
%  At # nodes expanded = 5, |OPEN| = 6.  Pruned 1 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,225890 (regressionFit = 12,225886, penalties=4.15E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,270049 (regressionFit = 11,270045, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,845859 (regressionFit = 6,845855, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,837216 (regressionFit = 6,837212, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,846218 (regressionFit = 6,846214, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,819418 (regressionFit = 6,819414, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,819418): faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,823587 (regressionFit = 6,823583, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.843766551535746
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 1 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,225890 (regressionFit = 12,225886, penalties=4.15E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,270049 (regressionFit = 11,270045, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,845859 (regressionFit = 6,845855, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(C, D), project(B, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,837216 (regressionFit = 6,837212, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,846218 (regressionFit = 6,846214, penalties=3.95E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,823587 (regressionFit = 6,823583, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,819418 (regressionFit = 6,819414, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.845531990367462
%  At # nodes expanded = 7, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,054030 (regressionFit = 12,054027, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -10,593109 (regressionFit = 10,593106, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,846355 (regressionFit = 6,846352, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,835548 (regressionFit = 6,835545, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.835548401203876
%  At # nodes expanded = 8, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -12,260084 (regressionFit = 12,260080, penalties=4.15E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,094113 (regressionFit = 11,094108, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(B, _), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,094113 (regressionFit = 11,094108, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,819418 (regressionFit = 6,819414, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,835046 (regressionFit = 6,835042, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(B, _), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,835046 (regressionFit = 6,835042, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,823206 (regressionFit = 6,823202, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.846354980146244
%  At # nodes expanded = 9, |OPEN| = 6.  Pruned 1 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,227728 (regressionFit = 12,227724, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,562670 (regressionFit = 11,562666, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,845859 (regressionFit = 6,845855, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,846218 (regressionFit = 6,846214, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,846454 (regressionFit = 6,846450, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,835046 (regressionFit = 6,835042, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,834091 (regressionFit = 6,834087, penalties=3.85E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

***** Warning: #2 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting -0.0019129986089300541 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,82 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon6369, D), project(Anon6415, D), project(Anon6369, Anon6473), project(Anon6369, Anon6679))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.0019129986089300541 to wgt = -0,0019 (faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 14 trees is 3,834 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:32 milliseconds
No hidden examples for : faculty
Time to build dataset: 33 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 0 7 19 24 25 28 37 40 42 43
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -10,772414 (regressionFit = 10,772413, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,772414): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,555926 (regressionFit = 9,555925, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,555926): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,828419 (regressionFit = 6,828417, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,828419): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.828418603746097
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,820047 (regressionFit = 6,820044, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,820047): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,834103 (regressionFit = 6,834101, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.820046526599604
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,826392 (regressionFit = 6,826389, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,833713 (regressionFit = 6,833710, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,833713 (regressionFit = 6,833710, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.826392396610221
%  At # nodes expanded = 4, |OPEN| = 5.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,831264 (regressionFit = 6,831260, penalties=4.150000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,830057 (regressionFit = 6,830053, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,830057 (regressionFit = 6,830053, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,830057 (regressionFit = 6,830053, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.833713029882699
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 1 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -11,246632 (regressionFit = 11,246628, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,831166 (regressionFit = 6,831163, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,830057 (regressionFit = 6,830053, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,833870 (regressionFit = 6,833866, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,816874 (regressionFit = 6,816870, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,816874): faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,820118 (regressionFit = 6,820114, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.833713029882699
%  At # nodes expanded = 6, |OPEN| = 3.  Pruned 1 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -11,246632 (regressionFit = 11,246628, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,831166 (regressionFit = 6,831163, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(C, D), project(B, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,830057 (regressionFit = 6,830053, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,833870 (regressionFit = 6,833866, penalties=3.95E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,820118 (regressionFit = 6,820114, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,816874 (regressionFit = 6,816870, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.83410254541423
%  At # nodes expanded = 7, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -10,565259 (regressionFit = 10,565256, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,832586 (regressionFit = 6,832583, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,828421 (regressionFit = 6,828418, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.8284206927948565
%  At # nodes expanded = 8, |OPEN| = 4.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 7 bad extensions.
%     Score = -11,072804 (regressionFit = 11,072799, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(B, _), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,072804 (regressionFit = 11,072799, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,816874 (regressionFit = 6,816870, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,828168 (regressionFit = 6,828164, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(B, _), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,828168 (regressionFit = 6,828164, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,818699 (regressionFit = 6,818695, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.832586222177169
%  At # nodes expanded = 9, |OPEN| = 3.  Pruned 1 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -11,537877 (regressionFit = 11,537873, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,831166 (regressionFit = 6,831163, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,833870 (regressionFit = 6,833866, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,833201 (regressionFit = 6,833197, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,828168 (regressionFit = 6,828164, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,827614 (regressionFit = 6,827611, penalties=3.85E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

***** Warning: #3 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting -0.0015274017838193725 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,82 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon7445, D), project(Anon7491, D), project(Anon7445, Anon7537), project(Anon7445, Anon7697))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -0.0015274017838193725 to wgt = -0,0015 (faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 15 trees is 4,042 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:35 milliseconds
No hidden examples for : faculty
Time to build dataset: 36 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 5 15 16 17 21 22 24 27 30 33
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -10,744628 (regressionFit = 10,744627, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,744628): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,817786 (regressionFit = 6,817785, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,817786): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.817786497161007
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,271692 (regressionFit = 11,271690, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,806989 (regressionFit = 6,806986, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,806989): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,826301 (regressionFit = 6,826299, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.806988579478978
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,123209 (regressionFit = 12,123205, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,814609 (regressionFit = 6,814606, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,826667 (regressionFit = 6,826664, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,826667 (regressionFit = 6,826664, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.814609160006648
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,163663 (regressionFit = 12,163659, penalties=4.250000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,821043 (regressionFit = 6,821039, penalties=4.150000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,825211 (regressionFit = 6,825207, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,825211 (regressionFit = 6,825207, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,825211 (regressionFit = 6,825207, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.82630074385811
%  At # nodes expanded = 5, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -11,981793 (regressionFit = 11,981790, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -10,544833 (regressionFit = 10,544830, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,822879 (regressionFit = 6,822876, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,823907 (regressionFit = 6,823904, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.822879311129217
%  At # nodes expanded = 6, |OPEN| = 8.  Pruned 1 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -12,201182 (regressionFit = 12,201178, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,519999 (regressionFit = 11,519995, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,825130 (regressionFit = 6,825126, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,823889 (regressionFit = 6,823885, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,823789 (regressionFit = 6,823785, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,823474 (regressionFit = 6,823470, penalties=3.85E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.8239069343527285
%  At # nodes expanded = 7, |OPEN| = 7.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -12,232035 (regressionFit = 12,232030, penalties=4.15E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,057420 (regressionFit = 11,057416, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(B, _), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,057420 (regressionFit = 11,057416, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,815550 (regressionFit = 6,815546, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,823789 (regressionFit = 6,823785, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(B, _), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,823789 (regressionFit = 6,823785, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,816279 (regressionFit = 6,816275, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.826666946349861
%  At # nodes expanded = 8, |OPEN| = 6.  Pruned 1 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -12,204618 (regressionFit = 12,204614, penalties=4.15E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,229472 (regressionFit = 11,229468, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,825211 (regressionFit = 6,825207, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,825130 (regressionFit = 6,825126, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,815550 (regressionFit = 6,815546, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,818099 (regressionFit = 6,818095, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.826666946349861
%  At # nodes expanded = 9, |OPEN| = 5.  Pruned 1 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -12,204618 (regressionFit = 12,204614, penalties=4.15E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,229472 (regressionFit = 11,229468, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,825211 (regressionFit = 6,825207, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,825130 (regressionFit = 6,825126, penalties=3.95E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,818099 (regressionFit = 6,818095, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,815550 (regressionFit = 6,815546, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

***** Warning: #4 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.0052383603134921256 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,81 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon8367, D), project(Anon8401, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.0052383603134921256 to wgt = 0,0052 (faculty(A) :- project(_, A), project(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 16 trees is 4,219 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:37 milliseconds
No hidden examples for : faculty
Time to build dataset: 37 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 0 5 9 20 24 28 29 31 32 37
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -10,760827 (regressionFit = 10,760826, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,760827): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,813572 (regressionFit = 6,813571, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,813572): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.813571783346346
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,301471 (regressionFit = 11,301469, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,805734 (regressionFit = 6,805732, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,805734): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,818377 (regressionFit = 6,818375, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.805733868651236
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,134636 (regressionFit = 12,134633, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,811646 (regressionFit = 6,811643, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,817943 (regressionFit = 6,817940, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,817943 (regressionFit = 6,817940, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.811645686636916
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,160925 (regressionFit = 12,160921, penalties=4.250000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,816096 (regressionFit = 6,816091, penalties=4.150000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,814209 (regressionFit = 6,814205, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,814209 (regressionFit = 6,814205, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,814209 (regressionFit = 6,814205, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.814209027735586
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,152260 (regressionFit = 12,152255, penalties=5.160000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,859221 (regressionFit = 11,859216, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,818181 (regressionFit = 6,818177, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(_, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,818181 (regressionFit = 6,818177, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(C, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,808646 (regressionFit = 6,808641, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,817997 (regressionFit = 6,817992, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,787165 (regressionFit = 6,787160, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,787165): faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,791409 (regressionFit = 6,791404, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(_, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,791409 (regressionFit = 6,791404, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(C, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.814209027735586
%  At # nodes expanded = 6, |OPEN| = 8.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,152260 (regressionFit = 12,152255, penalties=5.160000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,859221 (regressionFit = 11,859216, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,818181 (regressionFit = 6,818177, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(_, A), project(C, D), project(B, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,818181 (regressionFit = 6,818177, penalties=4.75E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(C, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,808646 (regressionFit = 6,808641, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,817997 (regressionFit = 6,817992, penalties=4.96E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,791409 (regressionFit = 6,791404, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(_, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,787165 (regressionFit = 6,787160, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,791409 (regressionFit = 6,791404, penalties=4.96E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(C, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.814209027735586
%  At # nodes expanded = 7, |OPEN| = 7.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,152260 (regressionFit = 12,152255, penalties=5.160000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,859221 (regressionFit = 11,859216, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,818181 (regressionFit = 6,818177, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(C, A), project(C, D), project(B, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,818181 (regressionFit = 6,818177, penalties=4.75E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(C, A), project(C, D), project(B, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,808646 (regressionFit = 6,808641, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,817997 (regressionFit = 6,817992, penalties=4.96E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,791409 (regressionFit = 6,791404, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(C, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,791409 (regressionFit = 6,791404, penalties=4.96E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(C, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,787165 (regressionFit = 6,787160, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.816095582965803
%  At # nodes expanded = 8, |OPEN| = 6.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,126609 (regressionFit = 12,126604, penalties=5.2600000000000005E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,817789 (regressionFit = 6,817784, penalties=5.1600000000000006E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,808646 (regressionFit = 6,808641, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,808646 (regressionFit = 6,808641, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,808646 (regressionFit = 6,808641, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,808646 (regressionFit = 6,808641, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.817943301309726
%  At # nodes expanded = 9, |OPEN| = 5.  Pruned 1 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,201290 (regressionFit = 12,201286, penalties=4.15E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,240208 (regressionFit = 11,240204, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,815800 (regressionFit = 6,815796, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,818237 (regressionFit = 6,818233, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,801818 (regressionFit = 6,801814, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,804915 (regressionFit = 6,804911, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

***** Warning: #5 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting -5.641955946470016E-4 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,79 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon9339, D), project(Anon9373, D), project(Anon9429, D), project(Anon9339, Anon9511), project(Anon9339, Anon9629))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -5.641955946470016E-4 to wgt = -0,0006 (faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 17 trees is 4,553 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:35 milliseconds
No hidden examples for : faculty
Time to build dataset: 35 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 7 8 18 21 25 34 35
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -10,725406 (regressionFit = 10,725405, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,725406): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,505531 (regressionFit = 9,505530, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,505531): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796604 (regressionFit = 6,796603, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,796604): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.7966043401493845
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,245476 (regressionFit = 11,245473, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,785209 (regressionFit = 6,785207, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,785209): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,804681 (regressionFit = 6,804679, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.785209087299583
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,101789 (regressionFit = 12,101785, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,792539 (regressionFit = 6,792536, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,805089 (regressionFit = 6,805085, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,805089 (regressionFit = 6,805085, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.792539085791524
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,152312 (regressionFit = 12,152308, penalties=4.250000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,799037 (regressionFit = 6,799033, penalties=4.150000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,804341 (regressionFit = 6,804337, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,804341 (regressionFit = 6,804337, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,804341 (regressionFit = 6,804337, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.7990367164333305
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,125883 (regressionFit = 12,125878, penalties=5.2600000000000005E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,802172 (regressionFit = 6,802167, penalties=5.1600000000000006E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,801196 (regressionFit = 6,801191, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,801196 (regressionFit = 6,801191, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,801196 (regressionFit = 6,801191, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,801196 (regressionFit = 6,801191, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.80434149890321
%  At # nodes expanded = 6, |OPEN| = 8.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,151315 (regressionFit = 12,151309, penalties=5.160000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,840464 (regressionFit = 11,840459, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,802994 (regressionFit = 6,802989, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(_, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,802994 (regressionFit = 6,802989, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(C, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,801196 (regressionFit = 6,801191, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,805054 (regressionFit = 6,805049, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,785446 (regressionFit = 6,785441, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788767 (regressionFit = 6,788762, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(_, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788767 (regressionFit = 6,788762, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(C, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.80434149890321
%  At # nodes expanded = 7, |OPEN| = 7.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,151315 (regressionFit = 12,151309, penalties=5.160000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,840464 (regressionFit = 11,840459, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,802994 (regressionFit = 6,802989, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(_, A), project(C, D), project(B, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,802994 (regressionFit = 6,802989, penalties=4.75E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(C, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,801196 (regressionFit = 6,801191, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,805054 (regressionFit = 6,805049, penalties=4.96E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788767 (regressionFit = 6,788762, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(_, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,785446 (regressionFit = 6,785441, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788767 (regressionFit = 6,788762, penalties=4.96E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(C, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.80434149890321
%  At # nodes expanded = 8, |OPEN| = 6.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,151315 (regressionFit = 12,151309, penalties=5.160000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,840464 (regressionFit = 11,840459, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,802994 (regressionFit = 6,802989, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(C, A), project(C, D), project(B, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,802994 (regressionFit = 6,802989, penalties=4.75E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(C, A), project(C, D), project(B, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,801196 (regressionFit = 6,801191, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,805054 (regressionFit = 6,805049, penalties=4.96E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788767 (regressionFit = 6,788762, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(C, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788767 (regressionFit = 6,788762, penalties=4.96E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(C, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,785446 (regressionFit = 6,785441, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.80468060739464
%  At # nodes expanded = 9, |OPEN| = 5.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -11,954100 (regressionFit = 11,954097, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -10,532284 (regressionFit = 10,532281, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,800966 (regressionFit = 6,800963, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,803194 (regressionFit = 6,803191, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

***** Warning: #6 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.005280585013405928 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,79 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon10691, D), project(Anon10737, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.005280585013405928 to wgt = 0,0053 (faculty(A) :- project(_, A), project(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 18 trees is 4,816 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:36 milliseconds
No hidden examples for : faculty
Time to build dataset: 36 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 0 1 9 11 17 21 23 24 26 29
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -10,741284 (regressionFit = 10,741283, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,741284): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -9,538918 (regressionFit = 9,538917, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,538918): faculty(A) :- courseta(_, A).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,792013 (regressionFit = 6,792011, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,792013): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.792012516570624
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,274777 (regressionFit = 11,274775, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,783673 (regressionFit = 6,783671, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,783673): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796649 (regressionFit = 6,796647, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.783673440599834
%  At # nodes expanded = 3, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,113095 (regressionFit = 12,113091, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,789389 (regressionFit = 6,789386, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796456 (regressionFit = 6,796453, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796456 (regressionFit = 6,796453, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.789388747962788
%  At # nodes expanded = 4, |OPEN| = 7.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,149728 (regressionFit = 12,149724, penalties=4.250000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,793962 (regressionFit = 6,793958, penalties=4.150000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,793550 (regressionFit = 6,793546, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,793550 (regressionFit = 6,793546, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,793550 (regressionFit = 6,793546, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.79355035249439
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,142060 (regressionFit = 12,142055, penalties=5.160000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,844591 (regressionFit = 11,844586, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796232 (regressionFit = 6,796227, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(_, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796232 (regressionFit = 6,796227, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(C, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788746 (regressionFit = 6,788741, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796479 (regressionFit = 6,796474, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,769886 (regressionFit = 6,769881, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,769886): faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,773662 (regressionFit = 6,773657, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(_, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,773662 (regressionFit = 6,773657, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(C, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.79355035249439
%  At # nodes expanded = 6, |OPEN| = 8.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,142060 (regressionFit = 12,142055, penalties=5.160000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,844591 (regressionFit = 11,844586, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796232 (regressionFit = 6,796227, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(_, A), project(C, D), project(B, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796232 (regressionFit = 6,796227, penalties=4.75E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(C, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788746 (regressionFit = 6,788741, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796479 (regressionFit = 6,796474, penalties=4.96E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,773662 (regressionFit = 6,773657, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(_, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,769886 (regressionFit = 6,769881, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,773662 (regressionFit = 6,773657, penalties=4.96E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(C, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.79355035249439
%  At # nodes expanded = 7, |OPEN| = 7.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,142060 (regressionFit = 12,142055, penalties=5.160000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,844591 (regressionFit = 11,844586, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796232 (regressionFit = 6,796227, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(C, A), project(C, D), project(B, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796232 (regressionFit = 6,796227, penalties=4.75E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(C, A), project(C, D), project(B, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788746 (regressionFit = 6,788741, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796479 (regressionFit = 6,796474, penalties=4.96E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,773662 (regressionFit = 6,773657, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(C, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,773662 (regressionFit = 6,773657, penalties=4.96E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(C, A), project(C, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,769886 (regressionFit = 6,769881, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.79396234020284
%  At # nodes expanded = 8, |OPEN| = 6.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,119694 (regressionFit = 12,119688, penalties=5.2600000000000005E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,795815 (regressionFit = 6,795810, penalties=5.1600000000000006E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788746 (regressionFit = 6,788741, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788746 (regressionFit = 6,788741, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788746 (regressionFit = 6,788741, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,788746 (regressionFit = 6,788741, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.796455774262086
%  At # nodes expanded = 9, |OPEN| = 5.  Pruned 1 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,184463 (regressionFit = 12,184459, penalties=4.15E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,227780 (regressionFit = 11,227776, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,793626 (regressionFit = 6,793622, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(B, D), project(C, D).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,796314 (regressionFit = 6,796310, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,782907 (regressionFit = 6,782903, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,785588 (regressionFit = 6,785584, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(C, A), project(B, _), project(C, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

***** Warning: #7 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting -5.223238637399606E-4 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,77 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon11951, D), project(Anon11997, D), project(Anon12053, D), project(Anon11951, Anon12135), project(Anon11951, Anon12253))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -5.223238637399606E-4 to wgt = -0,0005 (faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _), project(B, _))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Time taken to learn 19 trees is 5,143 seconds.

% Kept 23 of the 23 positive examples.
% Kept 21 of the 21 negative examples.
% Dataset size: 44
Computing probabilities
prob time:23 milliseconds
No hidden examples for : faculty
Time to build dataset: 23 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 13 15 19 22 24 32 40
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 44,0/44,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -10,710139 (regressionFit = 10,710138, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,710139): faculty(A) :- courseprof(_, A).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,777727 (regressionFit = 6,777726, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,777727): faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.7777266405569385
%  At # nodes expanded = 2, |OPEN| = 1.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,224955 (regressionFit = 11,224952, penalties=2.2300000000000002E-6) for clause:  faculty(A) :- project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,766072 (regressionFit = 6,766070, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,766072): faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,785097 (regressionFit = 6,785095, penalties=2.0300000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.7660722572075755
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,083792 (regressionFit = 12,083788, penalties=3.240000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,772990 (regressionFit = 6,772987, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,785454 (regressionFit = 6,785451, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,785454 (regressionFit = 6,785451, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.772990216966742
%  At # nodes expanded = 4, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,142060 (regressionFit = 12,142055, penalties=4.250000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,779371 (regressionFit = 6,779366, penalties=4.150000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,785125 (regressionFit = 6,785121, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,785125 (regressionFit = 6,785121, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,785125 (regressionFit = 6,785121, penalties=4.05E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.779370500184046
%  At # nodes expanded = 5, |OPEN| = 9.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -12,119080 (regressionFit = 12,119074, penalties=5.2600000000000005E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,782503 (regressionFit = 6,782498, penalties=5.1600000000000006E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,782445 (regressionFit = 6,782440, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(_, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,782445 (regressionFit = 6,782440, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(B, A), project(_, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,782445 (regressionFit = 6,782440, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(B, A), project(_, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,782445 (regressionFit = 6,782440, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(_, A), project(_, A), project(_, A), project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=2] 'faculty(A) :- project(B, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.785097130653326
%  At # nodes expanded = 6, |OPEN| = 8.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -11,930813 (regressionFit = 11,930810, penalties=3.1400000000000013E-6) for clause:  faculty(A) :- project(B, A), project(B, _), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -10,522928 (regressionFit = 10,522925, penalties=3.04E-6) for clause:  faculty(A) :- project(B, A), project(B, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,781305 (regressionFit = 6,781302, penalties=2.9400000000000002E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,784115 (regressionFit = 6,784111, penalties=3.0400000000000005E-6) for clause:  faculty(A) :- project(B, A), project(B, _), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=3] 'faculty(A) :- project(B, A), project(B, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.78130478168814
%  At # nodes expanded = 7, |OPEN| = 9.  Pruned 1 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,166530 (regressionFit = 12,166526, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,496127 (regressionFit = 11,496123, penalties=4.05E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,778903 (regressionFit = 6,778899, penalties=3.740000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,783435 (regressionFit = 6,783431, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,782361 (regressionFit = 6,782357, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,784024 (regressionFit = 6,784020, penalties=3.95E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,783838 (regressionFit = 6,783834, penalties=3.85E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.778902865157637
%  At # nodes expanded = 8, |OPEN| = 9.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,162675 (regressionFit = 12,162670, penalties=4.85E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, A), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -11,167378 (regressionFit = 11,167373, penalties=4.85E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, A), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,783208 (regressionFit = 6,783203, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,779277 (regressionFit = 6,779272, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, A), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,784841 (regressionFit = 6,784837, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, A), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,784841 (regressionFit = 6,784837, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(D, A), project(D, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4] 'faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]' score=-6.782361089030328
%  At # nodes expanded = 9, |OPEN| = 8.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -12,110607 (regressionFit = 12,110602, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, C), courseprof(_, A).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -12,151664 (regressionFit = 12,151659, penalties=5.060000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, C), courseprof(_, C).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,779277 (regressionFit = 6,779272, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(_, C), project(D, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,779277 (regressionFit = 6,779272, penalties=4.75E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(D, C), project(D, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,783291 (regressionFit = 6,783286, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, C), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,784139 (regressionFit = 6,784134, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, C), project(_, C).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,781972 (regressionFit = 6,781967, penalties=4.96E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(_, C), project(B, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,781789 (regressionFit = 6,781784, penalties=4.860000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(D, C), project(_, C), project(D, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
%     Score = -6,781789 (regressionFit = 6,781784, penalties=4.860000000000001E-6) for clause:  faculty(A) :- project(B, A), project(B, C), project(_, C), project(D, C), project(D, _).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

***** Warning: #8 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
Setting 0.005229822651247484 for 
 // Learned this clause on outer loop cycle #1.  It scores=-6,77 and has recall=0,52, precision=1,00, and F1=0,68 (using m-estimates).
 // It covers 52,3% of the positive examples, 23 of 44,
(faculty(D) :- project(Anon13315, D), project(Anon13349, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- project(_, A), project(_, A).  [covers 23,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 52,3% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added 0.005229822651247484 to wgt = 0,0052 (faculty(A) :- project(_, A), project(_, A))
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model.ckpt
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for faculty.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).
stepLength_tree11(1.0).
stepLength_tree12(1.0).
stepLength_tree13(1.0).
stepLength_tree14(1.0).
stepLength_tree15(1.0).
stepLength_tree16(1.0).
stepLength_tree17(1.0).
stepLength_tree18(1.0).
stepLength_tree19(1.0).
stepLength_tree20(1.0).

logPrior(-1.8).
faculty(D, Total) :- // A general accessor. 
   faculty(D, 1000000, Total), !.
faculty(D, Total) :- waitHere("This should not fail", faculty(D, Total)).

faculty(D, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_faculty_tree1(D, TreesToUse, Total1),
   getScore_faculty_tree2(D, TreesToUse, Total2),
   getScore_faculty_tree3(D, TreesToUse, Total3),
   getScore_faculty_tree4(D, TreesToUse, Total4),
   getScore_faculty_tree5(D, TreesToUse, Total5),
   getScore_faculty_tree6(D, TreesToUse, Total6),
   getScore_faculty_tree7(D, TreesToUse, Total7),
   getScore_faculty_tree8(D, TreesToUse, Total8),
   getScore_faculty_tree9(D, TreesToUse, Total9),
   getScore_faculty_tree10(D, TreesToUse, Total10),
   getScore_faculty_tree11(D, TreesToUse, Total11),
   getScore_faculty_tree12(D, TreesToUse, Total12),
   getScore_faculty_tree13(D, TreesToUse, Total13),
   getScore_faculty_tree14(D, TreesToUse, Total14),
   getScore_faculty_tree15(D, TreesToUse, Total15),
   getScore_faculty_tree16(D, TreesToUse, Total16),
   getScore_faculty_tree17(D, TreesToUse, Total17),
   getScore_faculty_tree18(D, TreesToUse, Total18),
   getScore_faculty_tree19(D, TreesToUse, Total19),
   getScore_faculty_tree20(D, TreesToUse, Total20),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10 + Total11 + Total12 + Total13 + Total14 + Total15 + Total16 + Total17 + Total18 + Total19 + Total20,
   !.
faculty(D, TreesToUse, Total) :- waitHere("This should not fail", faculty(D, TreesToUse, Total)).

getScore_faculty_tree1(D, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_faculty_tree1(D, TreesToUse, Total1) :- faculty_tree1(D, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_faculty_tree2(D, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_faculty_tree2(D, TreesToUse, Total2) :- faculty_tree2(D, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_faculty_tree3(D, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_faculty_tree3(D, TreesToUse, Total3) :- faculty_tree3(D, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_faculty_tree4(D, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_faculty_tree4(D, TreesToUse, Total4) :- faculty_tree4(D, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_faculty_tree5(D, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_faculty_tree5(D, TreesToUse, Total5) :- faculty_tree5(D, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_faculty_tree6(D, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_faculty_tree6(D, TreesToUse, Total6) :- faculty_tree6(D, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_faculty_tree7(D, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_faculty_tree7(D, TreesToUse, Total7) :- faculty_tree7(D, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_faculty_tree8(D, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_faculty_tree8(D, TreesToUse, Total8) :- faculty_tree8(D, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_faculty_tree9(D, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_faculty_tree9(D, TreesToUse, Total9) :- faculty_tree9(D, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_faculty_tree10(D, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_faculty_tree10(D, TreesToUse, Total10) :- faculty_tree10(D, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

getScore_faculty_tree11(D, TreesToUse, 0.0) :- 11 > TreesToUse, !.
getScore_faculty_tree11(D, TreesToUse, Total11) :- faculty_tree11(D, Total), stepLength_tree11(StepLen), Total11 is Total * StepLen.

getScore_faculty_tree12(D, TreesToUse, 0.0) :- 12 > TreesToUse, !.
getScore_faculty_tree12(D, TreesToUse, Total12) :- faculty_tree12(D, Total), stepLength_tree12(StepLen), Total12 is Total * StepLen.

getScore_faculty_tree13(D, TreesToUse, 0.0) :- 13 > TreesToUse, !.
getScore_faculty_tree13(D, TreesToUse, Total13) :- faculty_tree13(D, Total), stepLength_tree13(StepLen), Total13 is Total * StepLen.

getScore_faculty_tree14(D, TreesToUse, 0.0) :- 14 > TreesToUse, !.
getScore_faculty_tree14(D, TreesToUse, Total14) :- faculty_tree14(D, Total), stepLength_tree14(StepLen), Total14 is Total * StepLen.

getScore_faculty_tree15(D, TreesToUse, 0.0) :- 15 > TreesToUse, !.
getScore_faculty_tree15(D, TreesToUse, Total15) :- faculty_tree15(D, Total), stepLength_tree15(StepLen), Total15 is Total * StepLen.

getScore_faculty_tree16(D, TreesToUse, 0.0) :- 16 > TreesToUse, !.
getScore_faculty_tree16(D, TreesToUse, Total16) :- faculty_tree16(D, Total), stepLength_tree16(StepLen), Total16 is Total * StepLen.

getScore_faculty_tree17(D, TreesToUse, 0.0) :- 17 > TreesToUse, !.
getScore_faculty_tree17(D, TreesToUse, Total17) :- faculty_tree17(D, Total), stepLength_tree17(StepLen), Total17 is Total * StepLen.

getScore_faculty_tree18(D, TreesToUse, 0.0) :- 18 > TreesToUse, !.
getScore_faculty_tree18(D, TreesToUse, Total18) :- faculty_tree18(D, Total), stepLength_tree18(StepLen), Total18 is Total * StepLen.

getScore_faculty_tree19(D, TreesToUse, 0.0) :- 19 > TreesToUse, !.
getScore_faculty_tree19(D, TreesToUse, Total19) :- faculty_tree19(D, Total), stepLength_tree19(StepLen), Total19 is Total * StepLen.

getScore_faculty_tree20(D, TreesToUse, 0.0) :- 20 > TreesToUse, !.
getScore_faculty_tree20(D, TreesToUse, Total20) :- faculty_tree20(D, Total), stepLength_tree20(StepLen), Total20 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(0, []).
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 212 229 282 286 317 438 540 567 571 599
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = faculty(D)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  faculty(_).  [covers 880,0/880,0 pos, 0,0/0,0 neg]
% Most-general root: faculty(_).  [covers 880,0/880,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'faculty(_).  [covers 880,0/880,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -24.931,641550 (regressionFit = 24.931,641549, penalties=1.12E-6) for clause:  faculty(A) :- courseprof(_, A).  [covers 240,0/880,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -24.931,641550): faculty(A) :- courseprof(_, A).  [covers 240,0/880,0 pos, 0,0/0,0 neg]
%     Score = -3.835,236088 (regressionFit = 3.835,236087, penalties=1.12E-6) for clause:  faculty(A) :- courseta(_, A).  [covers 80,0/880,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.835,236088): faculty(A) :- courseta(_, A).  [covers 80,0/880,0 pos, 0,0/0,0 neg]
%     Score = -20.546,899308 (regressionFit = 20.546,899307, penalties=1.12E-6) for clause:  faculty(A) :- project(_, A).  [covers 460,0/880,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'faculty(A) :- courseta(_, A).  [covers 80,0/880,0 pos, 0,0/0,0 neg]' score=-3835.236088124797
%  At # nodes expanded = 2, |OPEN| = 2.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4.011,841236 (regressionFit = 4.011,841234, penalties=2.1300000000000004E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, _).  [covers 20,0/880,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=2] 'faculty(A) :- courseta(B, A), courseprof(B, _).  [covers 20,0/880,0 pos, 0,0/0,0 neg]' score=-4011.841236033245
%  At # nodes expanded = 3, |OPEN| = 2.  Pruned 2 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4.011,841237 (regressionFit = 4.011,841234, penalties=3.04E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), courseprof(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841237 (regressionFit = 4.011,841234, penalties=3.1400000000000004E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), project(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=3] 'faculty(A) :- courseta(B, A), courseprof(B, C), courseprof(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]' score=-4011.841236943245
%  At # nodes expanded = 4, |OPEN| = 3.  Pruned 5 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -4.011,841238 (regressionFit = 4.011,841234, penalties=4.05E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), courseprof(_, C), courseprof(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841238 (regressionFit = 4.011,841234, penalties=4.150000000000001E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), courseprof(_, C), project(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=3] 'faculty(A) :- courseta(B, A), courseprof(B, C), project(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]' score=-4011.8412370432447
%  At # nodes expanded = 5, |OPEN| = 4.  Pruned 3 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 5 bad extensions.
%     Score = -4.011,841238 (regressionFit = 4.011,841234, penalties=4.150000000000001E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), project(_, C), project(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841238 (regressionFit = 4.011,841234, penalties=4.05E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), project(D, C), project(D, _).  [covers 20,0/880,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=4] 'faculty(A) :- courseta(B, A), courseprof(B, C), courseprof(_, C), courseprof(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]' score=-4011.8412379532447
%  At # nodes expanded = 6, |OPEN| = 5.  Pruned 8 variant children.  Sending 2 items to OPEN for evaluation and possible insertion.
% Have created 2 valid-on-seeds descendants and have picked up 11 bad extensions.
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=5.060000000000001E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), courseprof(_, C), courseprof(_, C), courseprof(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=5.1600000000000006E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), courseprof(_, C), courseprof(_, C), project(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=4] 'faculty(A) :- courseta(B, A), courseprof(B, C), project(D, C), project(D, _).  [covers 20,0/880,0 pos, 0,0/0,0 neg]' score=-4011.8412379532447
%  At # nodes expanded = 7, |OPEN| = 4.  Pruned 5 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=5.060000000000001E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), project(D, C), project(D, _), courseprof(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=4.96E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), project(D, C), project(D, E), courseprof(_, E).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=5.060000000000001E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), project(D, C), project(D, _), project(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=4.96E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), project(D, C), project(D, E), project(_, E).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=5.060000000000001E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), project(D, C), project(D, _), project(D, _).  [covers 20,0/880,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=4] 'faculty(A) :- courseta(B, A), courseprof(B, C), courseprof(_, C), project(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]' score=-4011.841238053245
%  At # nodes expanded = 8, |OPEN| = 3.  Pruned 6 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 8 bad extensions.
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=5.1600000000000006E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), courseprof(_, C), project(_, C), courseprof(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=5.1600000000000006E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), courseprof(_, C), project(_, C), project(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=5.060000000000001E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), courseprof(_, C), project(D, C), project(D, _).  [covers 20,0/880,0 pos, 0,0/0,0 neg]

% Consider expanding [#9 of outerLoop #1, bodyLen=4] 'faculty(A) :- courseta(B, A), courseprof(B, C), project(_, C), project(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]' score=-4011.841238053245
%  At # nodes expanded = 9, |OPEN| = 2.  Pruned 4 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 6 bad extensions.
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=5.1600000000000006E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), project(_, C), project(_, C), courseprof(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=5.1600000000000006E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), project(_, C), project(_, C), project(_, C).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=5.060000000000001E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), project(D, C), project(_, C), project(D, _).  [covers 20,0/880,0 pos, 0,0/0,0 neg]
%     Score = -4.011,841239 (regressionFit = 4.011,841234, penalties=5.060000000000001E-6) for clause:  faculty(A) :- courseta(B, A), courseprof(B, C), project(_, C), project(D, C), project(D, _).  [covers 20,0/880,0 pos, 0,0/0,0 neg]

***** Warning: #9 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: faculty(A) :- courseta(_, A).  [covers 80,0/880,0 pos, 0,0/0,0 neg]

% The best node found: faculty(A) :- courseta(_, A).  [covers 80,0/880,0 pos, 0,0/0,0 neg]
Setting -1.0842024501903997 for 
 // Learned this clause on outer loop cycle #1.  It scores=-3.835,24 and has recall=0,09, precision=1,00, and F1=0,17 (using m-estimates).
 // It covers 9,1% of the positive examples, 80 of 880 (of which 4 are newly covered),
(faculty(D) :- courseta(Anon14397, D))

% On cycle #1, the best clause found is:
%      faculty(A) :- courseta(_, A).  [covers 80,0/880,0 pos, 0,0/0,0 neg]
% This clause covers 80 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 0,5% of the positive examples and NaN% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (1).

% ******************************************
adding regression values
Added -1.0842024501903997 to wgt = -1,0842 (faculty(A) :- courseta(_, A))
% Time taken to learn model for 'faculty': 5,594 seconds.
% Saving model in: datasets\WebKB\train/models/bRDNs/faculty.model
cached groundings hit: 0
Misses: 0

% Switching to standard-logic notation for variables; previous setting = uppercase

% Switching to VarIndicator = lowercase.

% Switching to Prolog notation for variables; previous setting = lowercase

% Switching to VarIndicator = uppercase.

% Total learning time (20 trees): 6,466 seconds.
